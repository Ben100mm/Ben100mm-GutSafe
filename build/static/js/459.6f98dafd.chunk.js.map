{"version":3,"file":"static/js/459.6f98dafd.chunk.js","mappings":"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","sources":["../node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx","../node_modules/react-native-web/dist/modules/multiplyStyleLengthValue/index.js","../node_modules/react-native-web/dist/exports/Switch/index.js","services/NotificationService.ts","screens/NotificationSettingsScreen.tsx","../node_modules/react-native-web/dist/exports/Alert/index.js"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar CSS_UNIT_RE = /^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;\nvar getUnit = str => str.match(CSS_UNIT_RE)[1];\nvar isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\nvar multiplyStyleLengthValue = (value, multiple) => {\n  if (typeof value === 'string') {\n    var number = parseFloat(value) * multiple;\n    var unit = getUnit(value);\n    return \"\" + number + unit;\n  } else if (isNumeric(value)) {\n    return value * multiple;\n  }\n};\nexport default multiplyStyleLengthValue;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use client';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"aria-label\", \"accessibilityLabel\", \"activeThumbColor\", \"activeTrackColor\", \"disabled\", \"onValueChange\", \"style\", \"thumbColor\", \"trackColor\", \"value\"];\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar emptyObject = {};\nvar thumbDefaultBoxShadow = '0px 1px 3px rgba(0,0,0,0.5)';\nvar thumbFocusedBoxShadow = thumbDefaultBoxShadow + \", 0 0 0 10px rgba(0,0,0,0.1)\";\nvar defaultActiveTrackColor = '#A3D3CF';\nvar defaultTrackColor = '#939393';\nvar defaultDisabledTrackColor = '#D5D5D5';\nvar defaultActiveThumbColor = '#009688';\nvar defaultThumbColor = '#FAFAFA';\nvar defaultDisabledThumbColor = '#BDBDBD';\nvar Switch = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var ariaLabel = props['aria-label'],\n    accessibilityLabel = props.accessibilityLabel,\n    activeThumbColor = props.activeThumbColor,\n    activeTrackColor = props.activeTrackColor,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    onValueChange = props.onValueChange,\n    _props$style = props.style,\n    style = _props$style === void 0 ? emptyObject : _props$style,\n    thumbColor = props.thumbColor,\n    trackColor = props.trackColor,\n    _props$value = props.value,\n    value = _props$value === void 0 ? false : _props$value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var thumbRef = React.useRef(null);\n  function handleChange(event) {\n    if (onValueChange != null) {\n      onValueChange(event.nativeEvent.target.checked);\n    }\n  }\n  function handleFocusState(event) {\n    var isFocused = event.nativeEvent.type === 'focus';\n    var boxShadow = isFocused ? thumbFocusedBoxShadow : thumbDefaultBoxShadow;\n    if (thumbRef.current != null) {\n      thumbRef.current.style.boxShadow = boxShadow;\n    }\n  }\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n    styleHeight = _StyleSheet$flatten.height,\n    styleWidth = _StyleSheet$flatten.width;\n  var height = styleHeight || '20px';\n  var minWidth = multiplyStyleLengthValue(height, 2);\n  var width = styleWidth > minWidth ? styleWidth : minWidth;\n  var trackBorderRadius = multiplyStyleLengthValue(height, 0.5);\n  var trackCurrentColor = function () {\n    if (value === true) {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.true;\n      } else {\n        return activeTrackColor !== null && activeTrackColor !== void 0 ? activeTrackColor : defaultActiveTrackColor;\n      }\n    } else {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.false;\n      } else {\n        return trackColor !== null && trackColor !== void 0 ? trackColor : defaultTrackColor;\n      }\n    }\n  }();\n  var thumbCurrentColor = value ? activeThumbColor !== null && activeThumbColor !== void 0 ? activeThumbColor : defaultActiveThumbColor : thumbColor !== null && thumbColor !== void 0 ? thumbColor : defaultThumbColor;\n  var thumbHeight = height;\n  var thumbWidth = thumbHeight;\n  var rootStyle = [styles.root, style, disabled && styles.cursorDefault, {\n    height,\n    width\n  }];\n  var disabledTrackColor = function () {\n    if (value === true) {\n      if (typeof activeTrackColor === 'string' && activeTrackColor != null || typeof trackColor === 'object' && trackColor != null && trackColor.true) {\n        return trackCurrentColor;\n      } else {\n        return defaultDisabledTrackColor;\n      }\n    } else {\n      if (typeof trackColor === 'string' && trackColor != null || typeof trackColor === 'object' && trackColor != null && trackColor.false) {\n        return trackCurrentColor;\n      } else {\n        return defaultDisabledTrackColor;\n      }\n    }\n  }();\n  var disabledThumbColor = function () {\n    if (value === true) {\n      if (activeThumbColor == null) {\n        return defaultDisabledThumbColor;\n      } else {\n        return thumbCurrentColor;\n      }\n    } else {\n      if (thumbColor == null) {\n        return defaultDisabledThumbColor;\n      } else {\n        return thumbCurrentColor;\n      }\n    }\n  }();\n  var trackStyle = [styles.track, {\n    backgroundColor: disabled ? disabledTrackColor : trackCurrentColor,\n    borderRadius: trackBorderRadius\n  }];\n  var thumbStyle = [styles.thumb, value && styles.thumbActive, {\n    backgroundColor: disabled ? disabledThumbColor : thumbCurrentColor,\n    height: thumbHeight,\n    marginStart: value ? multiplyStyleLengthValue(thumbWidth, -1) : 0,\n    width: thumbWidth\n  }];\n  var nativeControl = createElement('input', {\n    'aria-label': ariaLabel || accessibilityLabel,\n    checked: value,\n    disabled: disabled,\n    onBlur: handleFocusState,\n    onChange: handleChange,\n    onFocus: handleFocusState,\n    ref: forwardedRef,\n    style: [styles.nativeControl, styles.cursorInherit],\n    type: 'checkbox',\n    role: 'switch'\n  });\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    style: rootStyle\n  }), /*#__PURE__*/React.createElement(View, {\n    style: trackStyle\n  }), /*#__PURE__*/React.createElement(View, {\n    ref: thumbRef,\n    style: thumbStyle\n  }), nativeControl);\n});\nSwitch.displayName = 'Switch';\nvar styles = StyleSheet.create({\n  root: {\n    cursor: 'pointer',\n    userSelect: 'none'\n  },\n  cursorDefault: {\n    cursor: 'default'\n  },\n  cursorInherit: {\n    cursor: 'inherit'\n  },\n  track: _objectSpread(_objectSpread({\n    forcedColorAdjust: 'none'\n  }, StyleSheet.absoluteFillObject), {}, {\n    height: '70%',\n    margin: 'auto',\n    transitionDuration: '0.1s',\n    width: '100%'\n  }),\n  thumb: {\n    forcedColorAdjust: 'none',\n    alignSelf: 'flex-start',\n    borderRadius: '100%',\n    boxShadow: thumbDefaultBoxShadow,\n    start: '0%',\n    transform: 'translateZ(0)',\n    transitionDuration: '0.1s'\n  },\n  thumbActive: {\n    insetInlineStart: '100%'\n  },\n  nativeControl: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: '100%',\n    margin: 0,\n    appearance: 'none',\n    padding: 0,\n    width: '100%'\n  })\n});\nexport default Switch;","/**\n * @fileoverview NotificationService.ts\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport { Platform, Alert } from 'react-native';\nimport AsyncStorage from '../utils/AsyncStorage';\nimport { SafeFood } from '../types';\n\n/**\n * NotificationService - Handles push notifications and local notifications\n * Provides meal reminders, new safe foods alerts, and other notifications\n */\nclass NotificationService {\n  private static instance: NotificationService;\n  private notificationPermission: boolean = false;\n  private scheduledNotifications: Map<string, any> = new Map();\n  private notificationSettings = {\n    mealReminders: true,\n    newSafeFoods: true,\n    scanReminders: false,\n    weeklyReports: true,\n    quietHours: {\n      enabled: false,\n      start: '22:00',\n      end: '08:00',\n    },\n  };\n\n  // Storage keys\n  private readonly KEYS = {\n    NOTIFICATION_SETTINGS: 'gut_safe_notification_settings',\n    SCHEDULED_NOTIFICATIONS: 'gut_safe_scheduled_notifications',\n    NOTIFICATION_HISTORY: 'gut_safe_notification_history',\n  };\n\n  private constructor() {}\n\n  public static getInstance(): NotificationService {\n    if (!NotificationService.instance) {\n      NotificationService.instance = new NotificationService();\n    }\n    return NotificationService.instance;\n  }\n\n  /**\n   * Initialize notification service\n   */\n  async initialize(): Promise<void> {\n    try {\n      await this.loadSettings();\n      await this.requestPermission();\n      await this.setupDefaultNotifications();\n      console.log('NotificationService initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize NotificationService:', error);\n    }\n  }\n\n  /**\n   * Request notification permission\n   */\n  async requestPermission(): Promise<boolean> {\n    try {\n      // In a real React Native app, you would use:\n      // import { requestPermissions, scheduleNotificationAsync } from 'expo-notifications';\n      \n      // For web, we'll use the Web Notifications API\n      if (Platform.OS === 'web') {\n        if ('Notification' in window) {\n          const permission = await Notification.requestPermission();\n          this.notificationPermission = permission === 'granted';\n        } else {\n          console.warn('This browser does not support notifications');\n          this.notificationPermission = false;\n        }\n      } else {\n        // React Native implementation would go here\n        this.notificationPermission = true; // Simulate permission granted\n      }\n\n      return this.notificationPermission;\n    } catch (error) {\n      console.error('Failed to request notification permission:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if notifications are enabled\n   */\n  isEnabled(): boolean {\n    return this.notificationPermission;\n  }\n\n  /**\n   * Schedule meal reminder notification\n   */\n  async scheduleMealReminder(\n    mealType: 'breakfast' | 'lunch' | 'dinner' | 'snack',\n    time: string,\n    customMessage?: string\n  ): Promise<string> {\n    if (!this.notificationPermission || !this.notificationSettings.mealReminders) {\n      return '';\n    }\n\n    const notificationId = `meal_${mealType}_${Date.now()}`;\n    const [hours, minutes] = time.split(':').map(Number);\n    \n    const mealMessages = {\n      breakfast: 'Good morning! Time for breakfast. Remember to scan your food for gut health.',\n      lunch: 'Lunch time! Don\\'t forget to check your food before eating.',\n      dinner: 'Dinner time! Scan your meal to ensure it\\'s safe for your gut.',\n      snack: 'Snack time! Quick scan to keep your gut happy.',\n    };\n\n    const message = customMessage || mealMessages[mealType];\n    \n    // Schedule notification\n    const notification = {\n      id: notificationId,\n      title: `${mealType.charAt(0).toUpperCase() + mealType.slice(1)} Reminder`,\n      body: message,\n      data: {\n        type: 'meal_reminder',\n        mealType,\n        time,\n      },\n      trigger: {\n        hour: hours,\n        minute: minutes,\n        repeats: true,\n      },\n    };\n\n    await this.scheduleNotification(notification);\n    return notificationId;\n  }\n\n  /**\n   * Schedule new safe foods notification\n   */\n  async scheduleNewSafeFoodsNotification(safeFoods: SafeFood[]): Promise<string> {\n    if (!this.notificationPermission || !this.notificationSettings.newSafeFoods) {\n      return '';\n    }\n\n    const notificationId = `new_safe_foods_${Date.now()}`;\n    const foodNames = safeFoods.slice(0, 3).map(food => food.foodItem.name).join(', ');\n    const moreCount = safeFoods.length - 3;\n    \n    const message = moreCount > 0 \n      ? `New safe foods available: ${foodNames} and ${moreCount} more!`\n      : `New safe foods available: ${foodNames}!`;\n\n    const notification = {\n      id: notificationId,\n      title: 'New Safe Foods Found!',\n      body: message,\n      data: {\n        type: 'new_safe_foods',\n        safeFoods: safeFoods.map(food => food.id),\n      },\n      trigger: {\n        seconds: 5, // Show immediately for demo\n      },\n    };\n\n    await this.scheduleNotification(notification);\n    return notificationId;\n  }\n\n  /**\n   * Schedule scan reminder notification\n   */\n  async scheduleScanReminder(delayMinutes: number = 30): Promise<string> {\n    if (!this.notificationPermission || !this.notificationSettings.scanReminders) {\n      return '';\n    }\n\n    const notificationId = `scan_reminder_${Date.now()}`;\n    \n    const notification = {\n      id: notificationId,\n      title: 'Don\\'t Forget to Scan!',\n      body: 'Remember to scan your food to track your gut health.',\n      data: {\n        type: 'scan_reminder',\n      },\n      trigger: {\n        seconds: delayMinutes * 60,\n      },\n    };\n\n    await this.scheduleNotification(notification);\n    return notificationId;\n  }\n\n  /**\n   * Schedule weekly report notification\n   */\n  async scheduleWeeklyReport(dayOfWeek: number = 1, time: string = '09:00'): Promise<string> {\n    if (!this.notificationPermission || !this.notificationSettings.weeklyReports) {\n      return '';\n    }\n\n    const notificationId = `weekly_report_${Date.now()}`;\n    const [hours, minutes] = time.split(':').map(Number);\n    \n    const notification = {\n      id: notificationId,\n      title: 'Weekly Gut Health Report',\n      body: 'Your weekly gut health summary is ready! Check your progress and insights.',\n      data: {\n        type: 'weekly_report',\n      },\n      trigger: {\n        weekday: dayOfWeek,\n        hour: hours,\n        minute: minutes,\n        repeats: true,\n      },\n    };\n\n    await this.scheduleNotification(notification);\n    return notificationId;\n  }\n\n  /**\n   * Schedule custom notification\n   */\n  async scheduleCustomNotification(\n    title: string,\n    body: string,\n    trigger: any,\n    data?: any\n  ): Promise<string> {\n    if (!this.notificationPermission) {\n      return '';\n    }\n\n    const notificationId = `custom_${Date.now()}`;\n    \n    const notification = {\n      id: notificationId,\n      title,\n      body,\n      data: {\n        type: 'custom',\n        ...data,\n      },\n      trigger,\n    };\n\n    await this.scheduleNotification(notification);\n    return notificationId;\n  }\n\n  /**\n   * Cancel scheduled notification\n   */\n  async cancelNotification(notificationId: string): Promise<void> {\n    try {\n      // In a real app, you would use:\n      // await cancelScheduledNotificationAsync(notificationId);\n      \n      this.scheduledNotifications.delete(notificationId);\n      await this.saveScheduledNotifications();\n      console.log(`Cancelled notification: ${notificationId}`);\n    } catch (error) {\n      console.error('Failed to cancel notification:', error);\n    }\n  }\n\n  /**\n   * Cancel all notifications\n   */\n  async cancelAllNotifications(): Promise<void> {\n    try {\n      // In a real app, you would use:\n      // await cancelAllScheduledNotificationsAsync();\n      \n      this.scheduledNotifications.clear();\n      await this.saveScheduledNotifications();\n      console.log('Cancelled all notifications');\n    } catch (error) {\n      console.error('Failed to cancel all notifications:', error);\n    }\n  }\n\n  /**\n   * Get scheduled notifications\n   */\n  getScheduledNotifications(): any[] {\n    return Array.from(this.scheduledNotifications.values());\n  }\n\n  /**\n   * Update notification settings\n   */\n  async updateSettings(newSettings: Partial<typeof this.notificationSettings>): Promise<void> {\n    try {\n      this.notificationSettings = { ...this.notificationSettings, ...newSettings };\n      await this.saveSettings();\n      \n      // Reschedule notifications based on new settings\n      await this.rescheduleNotifications();\n    } catch (error) {\n      console.error('Failed to update notification settings:', error);\n    }\n  }\n\n  /**\n   * Get notification settings\n   */\n  getSettings(): typeof this.notificationSettings {\n    return { ...this.notificationSettings };\n  }\n\n  /**\n   * Show immediate notification (for testing)\n   */\n  async showImmediateNotification(title: string, body: string, data?: any): Promise<void> {\n    if (!this.notificationPermission) {\n      Alert.alert(title, body);\n      return;\n    }\n\n    try {\n      // In a real app, you would use:\n      // await scheduleNotificationAsync({\n      //   content: { title, body, data },\n      //   trigger: null, // Show immediately\n      // });\n      \n      // For web, show browser notification\n      if (Platform.OS === 'web' && 'Notification' in window) {\n        new Notification(title, {\n          body,\n          icon: '/icon.png', // Add your app icon\n          data,\n        });\n      } else {\n        // Fallback to alert\n        Alert.alert(title, body);\n      }\n    } catch (error) {\n      console.error('Failed to show immediate notification:', error);\n      Alert.alert(title, body);\n    }\n  }\n\n  /**\n   * Setup default notifications based on user profile\n   */\n  private async setupDefaultNotifications(): Promise<void> {\n    try {\n      // Schedule default meal reminders\n      await this.scheduleMealReminder('breakfast', '08:00');\n      await this.scheduleMealReminder('lunch', '12:30');\n      await this.scheduleMealReminder('dinner', '19:00');\n      \n      // Schedule weekly report\n      await this.scheduleWeeklyReport(1, '09:00'); // Monday at 9 AM\n    } catch (error) {\n      console.error('Failed to setup default notifications:', error);\n    }\n  }\n\n  /**\n   * Schedule notification (internal method)\n   */\n  private async scheduleNotification(notification: any): Promise<void> {\n    try {\n      // In a real app, you would use:\n      // await scheduleNotificationAsync(notification);\n      \n      this.scheduledNotifications.set(notification.id, notification);\n      await this.saveScheduledNotifications();\n      \n      console.log(`Scheduled notification: ${notification.id}`);\n    } catch (error) {\n      console.error('Failed to schedule notification:', error);\n    }\n  }\n\n  /**\n   * Reschedule notifications based on current settings\n   */\n  private async rescheduleNotifications(): Promise<void> {\n    try {\n      // Cancel all existing notifications\n      await this.cancelAllNotifications();\n      \n      // Reschedule based on current settings\n      if (this.notificationSettings.mealReminders) {\n        await this.setupDefaultNotifications();\n      }\n      \n      if (this.notificationSettings.weeklyReports) {\n        await this.scheduleWeeklyReport(1, '09:00');\n      }\n    } catch (error) {\n      console.error('Failed to reschedule notifications:', error);\n    }\n  }\n\n  /**\n   * Load notification settings from storage\n   */\n  private async loadSettings(): Promise<void> {\n    try {\n      const data = await AsyncStorage.getItem(this.KEYS.NOTIFICATION_SETTINGS);\n      if (data) {\n        this.notificationSettings = { ...this.notificationSettings, ...JSON.parse(data) };\n      }\n    } catch (error) {\n      console.error('Failed to load notification settings:', error);\n    }\n  }\n\n  /**\n   * Save notification settings to storage\n   */\n  private async saveSettings(): Promise<void> {\n    try {\n      await AsyncStorage.setItem(\n        this.KEYS.NOTIFICATION_SETTINGS,\n        JSON.stringify(this.notificationSettings)\n      );\n    } catch (error) {\n      console.error('Failed to save notification settings:', error);\n    }\n  }\n\n  /**\n   * Save scheduled notifications to storage\n   */\n  private async saveScheduledNotifications(): Promise<void> {\n    try {\n      const notifications = Array.from(this.scheduledNotifications.values());\n      await AsyncStorage.setItem(\n        this.KEYS.SCHEDULED_NOTIFICATIONS,\n        JSON.stringify(notifications)\n      );\n    } catch (error) {\n      console.error('Failed to save scheduled notifications:', error);\n    }\n  }\n\n  /**\n   * Load scheduled notifications from storage\n   */\n  private async loadScheduledNotifications(): Promise<void> {\n    try {\n      const data = await AsyncStorage.getItem(this.KEYS.SCHEDULED_NOTIFICATIONS);\n      if (data) {\n        const notifications = JSON.parse(data);\n        notifications.forEach((notification: any) => {\n          this.scheduledNotifications.set(notification.id, notification);\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load scheduled notifications:', error);\n    }\n  }\n\n  /**\n   * Check if notification should be shown based on quiet hours\n   */\n  private isWithinQuietHours(): boolean {\n    if (!this.notificationSettings.quietHours.enabled) {\n      return false;\n    }\n\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    \n    const [startHours, startMinutes] = this.notificationSettings.quietHours.start.split(':').map(Number);\n    const [endHours, endMinutes] = this.notificationSettings.quietHours.end.split(':').map(Number);\n    \n    const startTime = (startHours || 0) * 60 + (startMinutes || 0);\n    const endTime = (endHours || 0) * 60 + (endMinutes || 0);\n    \n    if (startTime < endTime) {\n      return currentTime >= startTime && currentTime <= endTime;\n    } else {\n      // Quiet hours span midnight\n      return currentTime >= startTime || currentTime <= endTime;\n    }\n  }\n\n  /**\n   * Get notification statistics\n   */\n  async getNotificationStats(): Promise<{\n    totalScheduled: number;\n    mealReminders: number;\n    newSafeFoods: number;\n    scanReminders: number;\n    weeklyReports: number;\n  }> {\n    const notifications = this.getScheduledNotifications();\n    \n    return {\n      totalScheduled: notifications.length,\n      mealReminders: notifications.filter(n => n.data?.type === 'meal_reminder').length,\n      newSafeFoods: notifications.filter(n => n.data?.type === 'new_safe_foods').length,\n      scanReminders: notifications.filter(n => n.data?.type === 'scan_reminder').length,\n      weeklyReports: notifications.filter(n => n.data?.type === 'weekly_report').length,\n    };\n  }\n}\n\nexport default NotificationService;\n","/**\n * @fileoverview NotificationSettingsScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Switch,\n  useColorScheme,\n  Alert,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing, BorderRadius } from '../constants/spacing';\nimport NotificationService from '../services/NotificationService';\n\nexport const NotificationSettingsScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [settings, setSettings] = useState({\n    mealReminders: true,\n    newSafeFoods: true,\n    scanReminders: false,\n    weeklyReports: true,\n    quietHours: {\n      enabled: false,\n      start: '22:00',\n      end: '08:00',\n    },\n  });\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [stats, setStats] = useState({\n    totalScheduled: 0,\n    mealReminders: 0,\n    newSafeFoods: 0,\n    scanReminders: 0,\n    weeklyReports: 0,\n  });\n\n  const notificationService = NotificationService.getInstance();\n\n  const loadSettings = useCallback(async () => {\n    try {\n      const currentSettings = notificationService.getSettings();\n      setSettings(currentSettings);\n      setIsEnabled(notificationService.isEnabled());\n    } catch (error) {\n      console.error('Failed to load notification settings:', error);\n    }\n  }, [notificationService]);\n\n  const loadStats = useCallback(async () => {\n    try {\n      const notificationStats = await notificationService.getNotificationStats();\n      setStats(notificationStats);\n    } catch (error) {\n      console.error('Failed to load notification stats:', error);\n    }\n  }, [notificationService]);\n\n  useEffect(() => {\n    loadSettings();\n    loadStats();\n  }, [loadSettings, loadStats]);\n\n  const updateSetting = async (key: string, value: any) => {\n    try {\n      const newSettings = { ...settings, [key]: value };\n      setSettings(newSettings);\n      await notificationService.updateSettings(newSettings);\n      await loadStats(); // Refresh stats\n    } catch (error) {\n      console.error('Failed to update setting:', error);\n      Alert.alert('Error', 'Failed to update notification setting. Please try again.');\n    }\n  };\n\n  const updateQuietHours = async (key: string, value: any) => {\n    try {\n      const newQuietHours = { ...settings.quietHours, [key]: value };\n      const newSettings = { ...settings, quietHours: newQuietHours };\n      setSettings(newSettings);\n      await notificationService.updateSettings(newSettings);\n    } catch (error) {\n      console.error('Failed to update quiet hours:', error);\n      Alert.alert('Error', 'Failed to update quiet hours. Please try again.');\n    }\n  };\n\n  const requestPermission = async () => {\n    try {\n      const granted = await notificationService.requestPermission();\n      if (granted) {\n        setIsEnabled(true);\n        Alert.alert('Success', 'Notification permission granted!');\n      } else {\n        Alert.alert(\n          'Permission Denied',\n          'Please enable notifications in your device settings to receive reminders.'\n        );\n      }\n    } catch (error) {\n      console.error('Failed to request permission:', error);\n      Alert.alert('Error', 'Failed to request notification permission.');\n    }\n  };\n\n  const testNotification = async () => {\n    try {\n      await notificationService.showImmediateNotification(\n        'Test Notification',\n        'This is a test notification from GutSafe!',\n        { type: 'test' }\n      );\n    } catch (error) {\n      console.error('Failed to show test notification:', error);\n    }\n  };\n\n  const clearAllNotifications = async () => {\n    Alert.alert(\n      'Clear All Notifications',\n      'Are you sure you want to cancel all scheduled notifications?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Clear All',\n          style: 'destructive',\n          onPress: async () => {\n            try {\n              await notificationService.cancelAllNotifications();\n              await loadStats();\n              Alert.alert('Success', 'All notifications cleared.');\n            } catch (error) {\n              Alert.alert('Error', 'Failed to clear notifications.');\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  const SettingRow = ({ \n    title, \n    subtitle, \n    value, \n    onValueChange, \n    disabled = false \n  }: {\n    title: string;\n    subtitle: string;\n    value: boolean;\n    onValueChange: (value: boolean) => void;\n    disabled?: boolean;\n  }) => (\n    <View style={[styles.settingRow, { backgroundColor: colors.surface }]}>\n      <View style={styles.settingInfo}>\n        <Text style={[styles.settingTitle, { color: colors.text }]}>{title}</Text>\n        <Text style={[styles.settingSubtitle, { color: colors.textSecondary }]}>\n          {subtitle}\n        </Text>\n      </View>\n      <Switch\n        value={value}\n        onValueChange={onValueChange}\n        disabled={disabled || !isEnabled}\n        trackColor={{ false: colors.border, true: colors.accent }}\n        thumbColor={value ? Colors.white : colors.textSecondary}\n      />\n    </View>\n  );\n\n  const TimePicker = ({ \n    label, \n    value, \n    onValueChange \n  }: {\n    label: string;\n    value: string;\n    onValueChange: (value: string) => void;\n  }) => (\n    <View style={styles.timePickerContainer}>\n      <Text style={[styles.timePickerLabel, { color: colors.text }]}>{label}</Text>\n      <TouchableOpacity\n        style={[styles.timePicker, { backgroundColor: colors.surface, borderColor: colors.border }]}\n        onPress={() => {\n          // In a real app, you would show a time picker modal\n          Alert.prompt(\n            'Set Time',\n            'Enter time in HH:MM format',\n            [\n              { text: 'Cancel', style: 'cancel' },\n              {\n                text: 'Set',\n                onPress: (time) => {\n                  if (time && /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(time)) {\n                    onValueChange(time);\n                  } else {\n                    Alert.alert('Invalid Time', 'Please enter time in HH:MM format.');\n                  }\n                },\n              },\n            ],\n            'plain-text',\n            value\n          );\n        }}\n      >\n        <Text style={[styles.timePickerText, { color: colors.text }]}>{value}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity\n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={[styles.backButtonText, { color: colors.accent }]}>‹ Back</Text>\n        </TouchableOpacity>\n        <Text style={[styles.title, { color: colors.text }]}>Notifications</Text>\n        <View style={styles.headerActions}>\n          <TouchableOpacity\n            style={styles.testButton}\n            onPress={testNotification}\n            disabled={!isEnabled}\n          >\n            <Text style={[styles.testButtonText, { color: colors.accent }]}>Test</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n        {/* Permission Status */}\n        <View style={[styles.statusCard, { backgroundColor: colors.surface }]}>\n          <View style={styles.statusInfo}>\n            <Text style={[styles.statusTitle, { color: colors.text }]}>\n              {isEnabled ? 'Notifications Enabled' : 'Notifications Disabled'}\n            </Text>\n            <Text style={[styles.statusSubtitle, { color: colors.textSecondary }]}>\n              {isEnabled \n                ? 'You will receive meal reminders and other notifications.'\n                : 'Enable notifications to receive meal reminders and updates.'\n              }\n            </Text>\n          </View>\n          {!isEnabled && (\n            <TouchableOpacity\n              style={[styles.enableButton, { backgroundColor: colors.accent }]}\n              onPress={requestPermission}\n            >\n              <Text style={[styles.enableButtonText, { color: Colors.white }]}>\n                Enable\n              </Text>\n            </TouchableOpacity>\n          )}\n        </View>\n\n        {/* Notification Statistics */}\n        <View style={[styles.statsCard, { backgroundColor: colors.surface }]}>\n          <Text style={[styles.statsTitle, { color: colors.text }]}>Scheduled Notifications</Text>\n          <View style={styles.statsGrid}>\n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: colors.accent }]}>{stats.totalScheduled}</Text>\n              <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Total</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: colors.accent }]}>{stats.mealReminders}</Text>\n              <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Meals</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: colors.accent }]}>{stats.newSafeFoods}</Text>\n              <Text style={[styles.statLabel, { color: colors.textSecondary }]}>New Foods</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: colors.accent }]}>{stats.weeklyReports}</Text>\n              <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Reports</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Notification Settings */}\n        <View style={styles.settingsSection}>\n          <Text style={[styles.sectionTitle, { color: colors.text }]}>Notification Types</Text>\n          \n          <SettingRow\n            title=\"Meal Reminders\"\n            subtitle=\"Remind me to scan my food at meal times\"\n            value={settings.mealReminders}\n            onValueChange={(value) => updateSetting('mealReminders', value)}\n            disabled={!isEnabled}\n          />\n          \n          <SettingRow\n            title=\"New Safe Foods\"\n            subtitle=\"Notify me when new safe foods are discovered\"\n            value={settings.newSafeFoods}\n            onValueChange={(value) => updateSetting('newSafeFoods', value)}\n            disabled={!isEnabled}\n          />\n          \n          <SettingRow\n            title=\"Scan Reminders\"\n            subtitle=\"Remind me to scan food if I haven't in a while\"\n            value={settings.scanReminders}\n            onValueChange={(value) => updateSetting('scanReminders', value)}\n            disabled={!isEnabled}\n          />\n          \n          <SettingRow\n            title=\"Weekly Reports\"\n            subtitle=\"Send weekly gut health summary reports\"\n            value={settings.weeklyReports}\n            onValueChange={(value) => updateSetting('weeklyReports', value)}\n            disabled={!isEnabled}\n          />\n        </View>\n\n        {/* Quiet Hours */}\n        <View style={styles.settingsSection}>\n          <Text style={[styles.sectionTitle, { color: colors.text }]}>Quiet Hours</Text>\n          \n          <SettingRow\n            title=\"Enable Quiet Hours\"\n            subtitle=\"Disable notifications during specified hours\"\n            value={settings.quietHours.enabled}\n            onValueChange={(value) => updateQuietHours('enabled', value)}\n            disabled={!isEnabled}\n          />\n          \n          {settings.quietHours.enabled && (\n            <View style={[styles.quietHoursContainer, { backgroundColor: colors.surface }]}>\n              <TimePicker\n                label=\"Start Time\"\n                value={settings.quietHours.start}\n                onValueChange={(value) => updateQuietHours('start', value)}\n              />\n              <TimePicker\n                label=\"End Time\"\n                value={settings.quietHours.end}\n                onValueChange={(value) => updateQuietHours('end', value)}\n              />\n            </View>\n          )}\n        </View>\n\n        {/* Actions */}\n        <View style={styles.actionsSection}>\n          <TouchableOpacity\n            style={[styles.actionButton, { backgroundColor: colors.surface, borderColor: colors.border }]}\n            onPress={clearAllNotifications}\n          >\n            <Text style={[styles.actionButtonText, { color: colors.text }]}>\n              Clear All Notifications\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n  },\n  backButton: {\n    padding: Spacing.xs,\n  },\n  backButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  title: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    flex: 1,\n    textAlign: 'center',\n  },\n  headerActions: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  testButton: {\n    padding: Spacing.xs,\n  },\n  testButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  scrollView: {\n    flex: 1,\n    paddingHorizontal: Spacing.lg,\n  },\n  statusCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    marginBottom: Spacing.lg,\n  },\n  statusInfo: {\n    flex: 1,\n  },\n  statusTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.xs,\n  },\n  statusSubtitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    lineHeight: Typography.lineHeight.body,\n  },\n  enableButton: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.md,\n  },\n  enableButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  statsCard: {\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    marginBottom: Spacing.lg,\n  },\n  statsTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.md,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.xs,\n  },\n  statLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  settingsSection: {\n    marginBottom: Spacing.lg,\n  },\n  sectionTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.md,\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    marginBottom: Spacing.sm,\n  },\n  settingInfo: {\n    flex: 1,\n    marginRight: Spacing.md,\n  },\n  settingTitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: Spacing.xs,\n  },\n  settingSubtitle: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    lineHeight: Typography.lineHeight.bodySmall,\n  },\n  quietHoursContainer: {\n    padding: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    marginTop: Spacing.sm,\n  },\n  timePickerContainer: {\n    marginBottom: Spacing.md,\n  },\n  timePickerLabel: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    marginBottom: Spacing.sm,\n  },\n  timePicker: {\n    borderWidth: 1,\n    borderRadius: BorderRadius.sm,\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n  },\n  timePickerText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  actionsSection: {\n    marginBottom: Spacing.xl,\n  },\n  actionButton: {\n    borderWidth: 1,\n    borderRadius: BorderRadius.md,\n    padding: Spacing.lg,\n    alignItems: 'center',\n  },\n  actionButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nclass Alert {\n  static alert() {}\n}\nexport default Alert;"],"names":["defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","Math","max","SafeAreaView","React","_ref","ref","style","edges","rest","_objectWithoutProperties","_excluded","insets","useSafeAreaInsets","edgesRecord","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View","_extends","CSS_UNIT_RE","multiplyStyleLengthValue","value","multiple","n","parseFloat","match","isNaN","isFinite","emptyObject","thumbDefaultBoxShadow","thumbFocusedBoxShadow","defaultDisabledTrackColor","defaultDisabledThumbColor","Switch","props","forwardedRef","ariaLabel","accessibilityLabel","activeThumbColor","activeTrackColor","_props$disabled","disabled","onValueChange","_props$style","thumbColor","trackColor","_props$value","other","_objectWithoutPropertiesLoose","thumbRef","handleFocusState","event","boxShadow","nativeEvent","type","_StyleSheet$flatten","styleHeight","height","styleWidth","width","minWidth","trackBorderRadius","trackCurrentColor","true","false","thumbCurrentColor","thumbHeight","thumbWidth","rootStyle","styles","root","cursorDefault","disabledTrackColor","disabledThumbColor","trackStyle","track","backgroundColor","borderRadius","thumbStyle","thumb","thumbActive","marginStart","nativeControl","createElement","checked","onBlur","onChange","target","onFocus","cursorInherit","role","displayName","create","cursor","userSelect","_objectSpread","forcedColorAdjust","absoluteFillObject","transitionDuration","alignSelf","start","transform","insetInlineStart","appearance","NotificationService","constructor","notificationPermission","scheduledNotifications","Map","notificationSettings","mealReminders","newSafeFoods","scanReminders","weeklyReports","quietHours","enabled","end","KEYS","NOTIFICATION_SETTINGS","SCHEDULED_NOTIFICATIONS","NOTIFICATION_HISTORY","getInstance","instance","initialize","this","loadSettings","requestPermission","setupDefaultNotifications","console","log","error","Platform","OS","window","permission","Notification","warn","isEnabled","scheduleMealReminder","mealType","time","customMessage","notificationId","concat","Date","now","hours","minutes","split","map","Number","message","breakfast","lunch","dinner","snack","notification","id","title","charAt","toUpperCase","slice","body","data","trigger","hour","minute","repeats","scheduleNotification","scheduleNewSafeFoodsNotification","safeFoods","foodNames","food","foodItem","name","join","moreCount","length","seconds","scheduleScanReminder","delayMinutes","arguments","undefined","scheduleWeeklyReport","dayOfWeek","weekday","scheduleCustomNotification","cancelNotification","delete","saveScheduledNotifications","cancelAllNotifications","clear","getScheduledNotifications","from","values","updateSettings","newSettings","saveSettings","rescheduleNotifications","getSettings","showImmediateNotification","icon","Alert","alert","set","AsyncStorage","getItem","JSON","parse","setItem","stringify","notifications","loadScheduledNotifications","forEach","isWithinQuietHours","currentTime","getHours","getMinutes","startHours","startMinutes","endHours","endMinutes","startTime","endTime","getNotificationStats","totalScheduled","filter","_n$data","_n$data2","_n$data3","_n$data4","NotificationSettingsScreen","navigation","useNavigation","colors","useColorScheme","Colors","dark","light","settings","setSettings","useState","setIsEnabled","stats","setStats","notificationService","useCallback","async","currentSettings","loadStats","notificationStats","useEffect","updateSetting","key","updateQuietHours","newQuietHours","SettingRow","subtitle","_jsxs","settingRow","surface","children","settingInfo","_jsx","Text","settingTitle","color","text","settingSubtitle","textSecondary","border","accent","white","TimePicker","_ref2","label","timePickerContainer","timePickerLabel","TouchableOpacity","timePicker","borderColor","onPress","prompt","test","timePickerText","container","background","header","backButton","goBack","backButtonText","headerActions","testButton","testButtonText","ScrollView","scrollView","showsVerticalScrollIndicator","statusCard","statusInfo","statusTitle","statusSubtitle","enableButton","enableButtonText","statsCard","statsTitle","statsGrid","statItem","statValue","statLabel","settingsSection","sectionTitle","quietHoursContainer","actionsSection","actionButton","actionButtonText","flex","flexDirection","justifyContent","alignItems","Spacing","lg","md","xs","fontSize","Typography","fontFamily","semiBold","h2","bold","textAlign","gap","sm","BorderRadius","h4","regular","lineHeight","caption","bodySmall","medium","borderWidth","xl"],"sourceRoot":""}