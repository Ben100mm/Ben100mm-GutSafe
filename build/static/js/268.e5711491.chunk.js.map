{"version":3,"file":"static/js/268.e5711491.chunk.js","mappings":"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","sources":["components/ScanDetailCard.tsx","screens/ScanHistoryScreen.tsx"],"sourcesContent":["/**\n * @fileoverview ScanDetailCard.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useRef } from 'react';\nimport {\n  TouchableOpacity,\n  Text,\n  View,\n  StyleSheet,\n  useColorScheme,\n  Animated,\n  LayoutAnimation,\n  Platform,\n  UIManager,\n} from 'react-native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing } from '../constants/spacing';\nimport { ScanHistory, SeverityLevel } from '../types';\n\n// Enable LayoutAnimation on Android\nif (Platform.OS === 'android' && UIManager.setLayoutAnimationEnabledExperimental) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\ninterface ScanDetailCardProps {\n  scanHistory: ScanHistory;\n  onPress?: () => void;\n  onExpand?: () => void;\n  expanded?: boolean;\n  showFullDetails?: boolean;\n}\n\nexport const ScanDetailCard: React.FC<ScanDetailCardProps> = ({\n  scanHistory,\n  onPress,\n  onExpand,\n  expanded = false,\n  showFullDetails = false,\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n  \n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const rotateAnim = useRef(new Animated.Value(0)).current;\n\n  const { foodItem, analysis, timestamp } = scanHistory;\n  const { overallSafety, flaggedIngredients, safeAlternatives, explanation, dataSource } = analysis;\n\n  const getResultConfig = () => {\n    switch (overallSafety) {\n      case 'safe':\n        return {\n          color: Colors.safe,\n          icon: '✅',\n          backgroundColor: `${Colors.safe}15`,\n          title: 'Safe to Eat',\n        };\n      case 'caution':\n        return {\n          color: Colors.caution,\n          icon: '⚠️',\n          backgroundColor: `${Colors.caution}15`,\n          title: 'Use Caution',\n        };\n      case 'avoid':\n        return {\n          color: Colors.avoid,\n          icon: '❌',\n          backgroundColor: `${Colors.avoid}15`,\n          title: 'Avoid',\n        };\n    }\n  };\n\n  const getSeverityColor = (severity: SeverityLevel) => {\n    switch (severity) {\n      case 'mild':\n        return Colors.safe;\n      case 'moderate':\n        return Colors.caution;\n      case 'severe':\n        return Colors.avoid;\n    }\n  };\n\n  const getSeverityIcon = (severity: SeverityLevel) => {\n    switch (severity) {\n      case 'mild':\n        return '🟢';\n      case 'moderate':\n        return '🟡';\n      case 'severe':\n        return '🔴';\n    }\n  };\n\n  const toggleExpanded = () => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    setIsExpanded(!isExpanded);\n    \n    Animated.timing(rotateAnim, {\n      toValue: isExpanded ? 0 : 1,\n      duration: 200,\n      useNativeDriver: true,\n    }).start();\n    \n    onExpand?.();\n  };\n\n  const formatTimestamp = (date: Date) => {\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) {\n      return 'Just now';\n    } else if (diffInHours < 24) {\n      return `${diffInHours}h ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `${diffInDays}d ago`;\n    }\n  };\n\n  const resultConfig = getResultConfig();\n  \n  if (!resultConfig) {\n    return null;\n  }\n  const chevronRotation = rotateAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '90deg'],\n  });\n\n  return (\n    <TouchableOpacity\n      style={[styles.card, { backgroundColor: colors.surface }]}\n      onPress={onPress}\n      activeOpacity={0.7}\n    >\n      {/* Header */}\n      <View style={styles.header}>\n        <View style={styles.titleRow}>\n          <Text style={styles.icon}>{resultConfig.icon}</Text>\n          <View style={styles.titleContainer}>\n            <Text style={[styles.foodName, { color: colors.text }]}>\n              {foodItem.name}\n            </Text>\n            <Text style={[styles.timestamp, { color: colors.textSecondary }]}>\n              {formatTimestamp(timestamp)}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.rightSection}>\n          <View style={[styles.resultBadge, { backgroundColor: resultConfig.backgroundColor }]}>\n            <Text style={[styles.resultText, { color: resultConfig.color }]}>\n              {resultConfig.title}\n            </Text>\n          </View>\n          <TouchableOpacity onPress={toggleExpanded} style={styles.expandButton}>\n            <Animated.Text\n              style={[\n                styles.chevron,\n                { color: colors.textSecondary, transform: [{ rotate: chevronRotation }] }\n              ]}\n            >\n              ›\n            </Animated.Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Basic Info */}\n      <View style={styles.basicInfo}>\n        <View style={styles.confidenceRow}>\n          <Text style={[styles.confidenceLabel, { color: colors.textSecondary }]}>\n            Data Source\n          </Text>\n          <Text style={[styles.confidenceValue, { color: colors.text }]}>\n            {dataSource}\n          </Text>\n        </View>\n        {foodItem.brand && (\n          <Text style={[styles.brand, { color: colors.textSecondary }]}>\n            {foodItem.brand}\n          </Text>\n        )}\n        <Text style={[styles.dataSource, { color: colors.textTertiary }]}>\n          Source: {dataSource}\n        </Text>\n      </View>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <View style={styles.expandedContent}>\n          {/* Explanation */}\n          <View style={styles.section}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Analysis\n            </Text>\n            <Text style={[styles.explanation, { color: colors.textSecondary }]}>\n              {explanation}\n            </Text>\n          </View>\n\n          {/* Flagged Ingredients */}\n          {flaggedIngredients.length > 0 && (\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text }]}>\n                Flagged Ingredients ({flaggedIngredients.length})\n              </Text>\n              {flaggedIngredients.map((ingredient, index) => (\n                <View key={index} style={styles.ingredientItem}>\n                  <View style={styles.ingredientHeader}>\n                    <Text style={styles.severityIcon}>\n                      {getSeverityIcon(ingredient.severity)}\n                    </Text>\n                    <Text style={[styles.ingredientName, { color: colors.text }]}>\n                      {ingredient.ingredient}\n                    </Text>\n                    <View style={[\n                      styles.severityBadge,\n                      { backgroundColor: `${getSeverityColor(ingredient.severity)}20` }\n                    ]}>\n                      <Text style={[\n                        styles.severityText,\n                        { color: getSeverityColor(ingredient.severity) }\n                      ]}>\n                        {ingredient.severity}\n                      </Text>\n                    </View>\n                  </View>\n                  <Text style={[styles.ingredientReason, { color: colors.textSecondary }]}>\n                    {ingredient.reason}\n                  </Text>\n                  <Text style={[styles.conditionText, { color: colors.textTertiary }]}>\n                    Affects: {ingredient.condition}\n                  </Text>\n                </View>\n              ))}\n            </View>\n          )}\n\n          {/* Safe Alternatives */}\n          {safeAlternatives.length > 0 && (\n            <View style={styles.section}>\n              <Text style={[styles.sectionTitle, { color: colors.text }]}>\n                Safe Alternatives\n              </Text>\n              <View style={styles.alternativesList}>\n                {safeAlternatives.map((alternative, index) => (\n                  <View key={index} style={[styles.alternativeItem, { backgroundColor: colors.background }]}>\n                    <Text style={styles.alternativeIcon}>✅</Text>\n                    <Text style={[styles.alternativeText, { color: colors.text }]}>\n                      {alternative}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n          )}\n\n          {/* Additional Food Info */}\n          <View style={styles.section}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Food Details\n            </Text>\n            <View style={styles.foodDetails}>\n              {foodItem.category && (\n                <View style={styles.detailRow}>\n                  <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                    Category\n                  </Text>\n                  <Text style={[styles.detailValue, { color: colors.text }]}>\n                    {foodItem.category}\n                  </Text>\n                </View>\n              )}\n              {foodItem.histamineLevel && (\n                <View style={styles.detailRow}>\n                  <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                    Histamine Level\n                  </Text>\n                  <Text style={[styles.detailValue, { color: colors.text }]}>\n                    {foodItem.histamineLevel}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    marginHorizontal: Spacing.lg,\n    marginBottom: Spacing.sm,\n    borderRadius: 12,\n    padding: Spacing.md,\n    ...(Platform.OS === 'web' ? {\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n    } : {\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.1,\n      shadowRadius: 4,\n      elevation: 2,\n    }),\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.sm,\n  },\n  titleRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flex: 1,\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: Spacing.sm,\n    marginTop: 2,\n  },\n  titleContainer: {\n    flex: 1,\n  },\n  foodName: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: 2,\n  },\n  timestamp: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  rightSection: {\n    alignItems: 'flex-end',\n  },\n  resultBadge: {\n    paddingHorizontal: Spacing.sm,\n    paddingVertical: Spacing.xs,\n    borderRadius: 8,\n    marginBottom: Spacing.xs,\n  },\n  resultText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  expandButton: {\n    padding: Spacing.xs,\n  },\n  chevron: {\n    fontSize: 16,\n    fontWeight: '300',\n  },\n  basicInfo: {\n    marginBottom: Spacing.sm,\n  },\n  confidenceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: Spacing.xs,\n  },\n  confidenceLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  confidenceValue: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  brand: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  dataSource: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n    marginTop: 2,\n  },\n  expandedContent: {\n    marginTop: Spacing.sm,\n    paddingTop: Spacing.sm,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n  },\n  section: {\n    marginBottom: Spacing.md,\n  },\n  sectionTitle: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  explanation: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    lineHeight: Typography.lineHeight.bodySmall,\n  },\n  ingredientItem: {\n    marginBottom: Spacing.sm,\n    padding: Spacing.sm,\n    borderRadius: 8,\n    backgroundColor: 'rgba(0,0,0,0.05)',\n  },\n  ingredientHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: Spacing.xs,\n  },\n  severityIcon: {\n    fontSize: 12,\n    marginRight: Spacing.xs,\n  },\n  ingredientName: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n    flex: 1,\n    marginRight: Spacing.sm,\n  },\n  severityBadge: {\n    paddingHorizontal: Spacing.xs,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  severityText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.semiBold,\n    textTransform: 'capitalize',\n  },\n  ingredientReason: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n    marginBottom: 2,\n  },\n  conditionText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n    fontStyle: 'italic',\n  },\n  alternativesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  alternativeItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.sm,\n    paddingVertical: Spacing.xs,\n    borderRadius: 16,\n    marginRight: Spacing.sm,\n    marginBottom: Spacing.xs,\n  },\n  alternativeIcon: {\n    fontSize: 12,\n    marginRight: Spacing.xs,\n  },\n  alternativeText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  foodDetails: {\n    gap: Spacing.xs,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  detailLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  detailValue: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.semiBold,\n    textTransform: 'capitalize',\n  },\n});\n","/**\n * @fileoverview ScanHistoryScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  ScrollView,\n  TouchableOpacity,\n  StatusBar,\n  useColorScheme,\n  RefreshControl,\n  TextInput,\n  Alert,\n  Share,\n  Modal,\n  Animated,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing, BorderRadius } from '../constants/spacing';\nimport { ScanDetailCard } from '../components/ScanDetailCard';\nimport { ScanHistory, ScanResult, GutCondition, SeverityLevel } from '../types';\nimport { logger } from '../utils/logger';\n\n// Mock scan history data\nconst mockScanHistory: ScanHistory[] = [\n  {\n    id: '1',\n    foodItem: {\n      id: '1',\n      name: 'Greek Yogurt',\n      brand: 'Chobani',\n      category: 'Dairy',\n      barcode: '1234567890123',\n      ingredients: ['Cultured pasteurized grade A milk', 'Live active cultures'],\n      allergens: ['Milk'],\n      additives: [],\n      glutenFree: true,\n      lactoseFree: false,\n      histamineLevel: 'low',\n      dataSource: 'USDA Database',\n    },\n    analysis: {\n      overallSafety: 'safe' as ScanResult,\n      flaggedIngredients: [],\n      conditionWarnings: [],\n      safeAlternatives: ['Coconut yogurt', 'Almond yogurt'],\n      explanation: 'This Greek yogurt is low in histamine and contains probiotics that may benefit gut health. No problematic ingredients detected.',\n      dataSource: 'USDA Food Database',\n      lastUpdated: new Date(Date.now() - 2 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\n    userFeedback: 'accurate',\n  },\n  {\n    id: '2',\n    foodItem: {\n      id: '2',\n      name: 'Wheat Bread',\n      brand: 'Wonder',\n      category: 'Bakery',\n      barcode: '1234567890124',\n      ingredients: ['Wheat Flour', 'Water', 'Yeast', 'Salt', 'Sugar'],\n      allergens: ['Wheat', 'Gluten'],\n      additives: [],\n      glutenFree: false,\n      lactoseFree: true,\n      histamineLevel: 'low',\n      dataSource: 'Product Database',\n    },\n    analysis: {\n      overallSafety: 'caution' as ScanResult,\n      flaggedIngredients: [\n        {\n          ingredient: 'Wheat',\n          reason: 'Contains gluten which may trigger IBS symptoms',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'gluten' as GutCondition,\n        },\n        {\n          ingredient: 'Fructans',\n          reason: 'High FODMAP content may cause bloating',\n          severity: 'mild' as SeverityLevel,\n          condition: 'ibs-fodmap' as GutCondition,\n        },\n      ],\n      conditionWarnings: [\n        {\n          ingredient: 'Wheat',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'gluten' as GutCondition,\n        },\n      ],\n      safeAlternatives: ['Sourdough bread', 'Gluten-free bread', 'Rice cakes'],\n      explanation: 'This wheat bread contains gluten and fructans that may trigger digestive symptoms in sensitive individuals.',\n      dataSource: 'Monash FODMAP Database',\n      lastUpdated: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 day ago\n  },\n  {\n    id: '3',\n    foodItem: {\n      id: '3',\n      name: 'Aged Cheddar Cheese',\n      brand: 'Cabot',\n      category: 'Dairy',\n      barcode: '1234567890125',\n      ingredients: ['Pasteurized milk', 'Salt', 'Cheese cultures', 'Enzymes'],\n      allergens: ['Milk'],\n      additives: [],\n      glutenFree: true,\n      lactoseFree: false,\n      histamineLevel: 'high',\n      dataSource: 'USDA Database',\n    },\n    analysis: {\n      overallSafety: 'avoid' as ScanResult,\n      flaggedIngredients: [\n        {\n          ingredient: 'Histamine',\n          reason: 'Aged cheese contains high levels of histamine',\n          severity: 'severe' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n        {\n          ingredient: 'Tyramine',\n          reason: 'May cause headaches and digestive issues',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n      ],\n      conditionWarnings: [\n        {\n          ingredient: 'Histamine',\n          severity: 'severe' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n      ],\n      safeAlternatives: ['Fresh mozzarella', 'Cottage cheese', 'Ricotta cheese'],\n      explanation: 'This aged cheddar cheese contains very high levels of histamine and tyramine, which can trigger severe reactions in sensitive individuals.',\n      dataSource: 'Histamine Intolerance Database',\n      lastUpdated: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 days ago\n  },\n  {\n    id: '4',\n    foodItem: {\n      id: '4',\n      name: 'Banana',\n      brand: 'Unknown',\n      category: 'Fruit',\n      barcode: '1234567890123',\n      ingredients: ['Banana'],\n      allergens: [],\n      additives: [],\n      glutenFree: true,\n      lactoseFree: true,\n      histamineLevel: 'low',\n      dataSource: 'FODMAP Database',\n    },\n    analysis: {\n      overallSafety: 'safe' as ScanResult,\n      flaggedIngredients: [],\n      conditionWarnings: [],\n      safeAlternatives: ['Green banana', 'Plantain'],\n      explanation: 'Bananas are generally well-tolerated and contain prebiotic fiber that supports gut health. Choose slightly green bananas for lower sugar content.',\n      dataSource: 'FODMAP Database',\n      lastUpdated: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5 days ago\n  },\n  {\n    id: '5',\n    foodItem: {\n      id: '5',\n      name: 'Energy Drink',\n      brand: 'Red Bull',\n      category: 'Beverages',\n      barcode: '1234567890126',\n      ingredients: ['Carbonated water', 'Sucrose', 'Glucose', 'Citric acid', 'Taurine', 'Sodium citrate', 'Caffeine'],\n      allergens: [],\n      additives: ['Artificial flavors', 'Colors'],\n      glutenFree: true,\n      lactoseFree: true,\n      histamineLevel: 'low',\n      dataSource: 'Product Database',\n    },\n    analysis: {\n      overallSafety: 'caution' as ScanResult,\n      flaggedIngredients: [\n        {\n          ingredient: 'Caffeine',\n          reason: 'High caffeine content may irritate the gut',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'additives' as GutCondition,\n        },\n        {\n          ingredient: 'Artificial sweeteners',\n          reason: 'May cause bloating and digestive discomfort',\n          severity: 'mild' as SeverityLevel,\n          condition: 'additives' as GutCondition,\n        },\n        {\n          ingredient: 'Taurine',\n          reason: 'High levels may affect gut bacteria',\n          severity: 'mild' as SeverityLevel,\n          condition: 'additives' as GutCondition,\n        },\n      ],\n      conditionWarnings: [\n        {\n          ingredient: 'Caffeine',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'additives' as GutCondition,\n        },\n      ],\n      safeAlternatives: ['Green tea', 'Herbal tea', 'Coconut water'],\n      explanation: 'This energy drink contains high levels of caffeine and artificial ingredients that may irritate the digestive system.',\n      dataSource: 'Caffeine Database',\n      lastUpdated: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 1 week ago\n  },\n];\n\nexport const ScanHistoryScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [scanHistory] = useState<ScanHistory[]>(mockScanHistory);\n  const [refreshing, setRefreshing] = useState(false);\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\n  const [filter, setFilter] = useState<'all' | 'safe' | 'caution' | 'avoid'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState<'date' | 'name' | 'safety' | 'category'>('date');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [showFilters, setShowFilters] = useState(false);\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [selectedScans, setSelectedScans] = useState<Set<string>>(new Set());\n  const [isSelectionMode, setIsSelectionMode] = useState(false);\n  \n  const searchInputRef = useRef<TextInput>(null);\n  // const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  // Enhanced filtering and sorting logic\n  const filteredAndSortedHistory = useMemo(() => {\n    let filtered = scanHistory;\n\n    // Apply safety filter\n    if (filter !== 'all') {\n      filtered = filtered.filter(scan => scan.analysis.overallSafety === filter);\n    }\n\n    // Apply search filter\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(scan => \n        scan.foodItem.name.toLowerCase().includes(query) ||\n        scan.foodItem.brand?.toLowerCase().includes(query) ||\n        scan.foodItem.category?.toLowerCase().includes(query) ||\n        scan.foodItem.ingredients.some(ingredient => \n          ingredient.toLowerCase().includes(query)\n        ) ||\n        scan.analysis.flaggedIngredients.some(flagged => \n          flagged.ingredient.toLowerCase().includes(query)\n        )\n      );\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'date':\n          comparison = a.timestamp.getTime() - b.timestamp.getTime();\n          break;\n        case 'name':\n          comparison = a.foodItem.name.localeCompare(b.foodItem.name);\n          break;\n        case 'safety':\n          const safetyOrder = { safe: 0, caution: 1, avoid: 2 };\n          comparison = safetyOrder[a.analysis.overallSafety] - safetyOrder[b.analysis.overallSafety];\n          break;\n        case 'category':\n          comparison = (a.foodItem.category || '').localeCompare(b.foodItem.category || '');\n          break;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }, [scanHistory, filter, searchQuery, sortBy, sortOrder]);\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    // Simulate API call\n    setTimeout(() => {\n      setRefreshing(false);\n    }, 1000);\n  };\n\n  const handleCardPress = (scanId: string) => {\n    if (isSelectionMode) {\n      toggleScanSelection(scanId);\n    } else {\n      // Navigate to detailed view\n      (navigation as any).navigate('ScanDetail', { scanId });\n    }\n  };\n\n  const handleCardExpand = (scanId: string) => {\n    setExpandedCard(expandedCard === scanId ? null : scanId);\n  };\n\n  const toggleScanSelection = (scanId: string) => {\n    const newSelection = new Set(selectedScans);\n    if (newSelection.has(scanId)) {\n      newSelection.delete(scanId);\n    } else {\n      newSelection.add(scanId);\n    }\n    setSelectedScans(newSelection);\n  };\n\n  const toggleSelectionMode = () => {\n    setIsSelectionMode(!isSelectionMode);\n    setSelectedScans(new Set());\n  };\n\n  const selectAllScans = () => {\n    setSelectedScans(new Set(filteredAndSortedHistory.map(scan => scan.id)));\n  };\n\n  const clearSelection = () => {\n    setSelectedScans(new Set());\n  };\n\n  const handleExport = async (format: 'json' | 'csv' | 'pdf') => {\n    try {\n      const scansToExport = selectedScans.size > 0 \n        ? filteredAndSortedHistory.filter(scan => selectedScans.has(scan.id))\n        : filteredAndSortedHistory;\n\n      let exportData: string;\n      // let filename: string;\n      let mimeType: string;\n\n      switch (format) {\n        case 'json':\n          exportData = JSON.stringify(scansToExport, null, 2);\n          // filename = `scan-history-${new Date().toISOString().split('T')[0]}.json`;\n          mimeType = 'application/json';\n          break;\n        case 'csv':\n          exportData = generateCSV(scansToExport);\n          // filename = `scan-history-${new Date().toISOString().split('T')[0]}.csv`;\n          mimeType = 'text/csv';\n          break;\n        case 'pdf':\n          // In a real app, you would generate a PDF here\n          exportData = generatePDF(scansToExport);\n          // filename = `scan-history-${new Date().toISOString().split('T')[0]}.pdf`;\n          mimeType = 'application/pdf';\n          break;\n      }\n\n      await Share.share({\n        message: exportData,\n        title: 'GutSafe Scan History Export',\n        url: `data:${mimeType};base64,${btoa(exportData)}`,\n      });\n\n      setShowExportModal(false);\n      Alert.alert('Success', 'Scan history exported successfully!');\n    } catch (error) {\n      logger.error('Export error', 'ScanHistoryScreen', error);\n      Alert.alert('Error', 'Failed to export scan history. Please try again.');\n    }\n  };\n\n  const generateCSV = (scans: ScanHistory[]): string => {\n    const headers = [\n      'Date',\n      'Food Name',\n      'Brand',\n      'Category',\n      'Safety Level',\n      'Ingredients',\n      'Flagged Ingredients',\n      'Safe Alternatives',\n      'Explanation'\n    ];\n\n    const rows = scans.map(scan => [\n      scan.timestamp.toISOString(),\n      scan.foodItem.name,\n      scan.foodItem.brand || '',\n      scan.foodItem.category || '',\n      scan.analysis.overallSafety,\n      scan.foodItem.ingredients.join('; '),\n      scan.analysis.flaggedIngredients.map(f => f.ingredient).join('; '),\n      scan.analysis.safeAlternatives.join('; '),\n      scan.analysis.explanation\n    ]);\n\n    return [headers, ...rows].map(row => \n      row.map(field => `\"${field.toString().replace(/\"/g, '\"\"')}\"`).join(',')\n    ).join('\\n');\n  };\n\n  const generatePDF = (scans: ScanHistory[]): string => {\n    // Simplified PDF generation - in a real app, use a proper PDF library\n    return `GutSafe Scan History Report\nGenerated: ${new Date().toLocaleDateString()}\nTotal Scans: ${scans.length}\n\n${scans.map(scan => `\nFood: ${scan.foodItem.name}\nBrand: ${scan.foodItem.brand || 'N/A'}\nSafety: ${scan.analysis.overallSafety}\nDate: ${scan.timestamp.toLocaleDateString()}\nIngredients: ${scan.foodItem.ingredients.join(', ')}\nExplanation: ${scan.analysis.explanation}\n---`).join('\\n')}`;\n  };\n\n  const clearSearch = () => {\n    setSearchQuery('');\n    searchInputRef.current?.blur();\n  };\n\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  const getFilterCount = (result: ScanResult) => {\n    return scanHistory.filter(scan => scan.analysis.overallSafety === result).length;\n  };\n\n  const getStatsSummary = () => {\n    const total = scanHistory.length;\n    const safe = getFilterCount('safe');\n    const caution = getFilterCount('caution');\n    const avoid = getFilterCount('avoid');\n    \n    return { total, safe, caution, avoid };\n  };\n\n  const stats = getStatsSummary();\n\n  return (\n    <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]}>\n      <StatusBar barStyle={isDark ? 'light-content' : 'dark-content'} />\n      \n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity\n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={[styles.backButtonText, { color: colors.accent }]}>‹ Back</Text>\n        </TouchableOpacity>\n        <Text style={[styles.title, { color: colors.text }]}>Scan History</Text>\n        <View style={styles.headerActions}>\n          <TouchableOpacity\n            style={styles.headerButton}\n            onPress={toggleSelectionMode}\n          >\n            <Text style={[styles.headerButtonText, { color: colors.accent }]}>\n              {isSelectionMode ? 'Cancel' : 'Select'}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.headerButton}\n            onPress={() => setShowExportModal(true)}\n          >\n            <Text style={[styles.headerButtonText, { color: colors.accent }]}>Export</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Search Bar */}\n      <View style={[styles.searchContainer, { backgroundColor: colors.surface }]}>\n        <View style={[styles.searchInputContainer, { borderColor: colors.border }]}>\n          <Text style={styles.searchIcon}>🔍</Text>\n          <TextInput\n            ref={searchInputRef}\n            style={[styles.searchInput, { color: colors.text }]}\n            placeholder=\"Search foods, ingredients, brands...\"\n            placeholderTextColor={colors.textSecondary}\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n            returnKeyType=\"search\"\n          />\n          {searchQuery.length > 0 && (\n            <TouchableOpacity onPress={clearSearch} style={styles.clearButton}>\n              <Text style={[styles.clearButtonText, { color: colors.textSecondary }]}>✕</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        <TouchableOpacity\n          style={[styles.searchFilterButton, { backgroundColor: colors.accent }]}\n          onPress={() => setShowFilters(!showFilters)}\n        >\n          <Text style={[styles.searchFilterButtonText, { color: Colors.white }]}>Filter</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Advanced Filters */}\n      {showFilters && (\n        <Animated.View style={[styles.filtersContainer, { backgroundColor: colors.surface }]}>\n          <View style={styles.filterRow}>\n            <Text style={[styles.filterLabel, { color: colors.text }]}>Sort by:</Text>\n            <View style={styles.sortButtons}>\n              {[\n                { key: 'date', label: 'Date' },\n                { key: 'name', label: 'Name' },\n                { key: 'safety', label: 'Safety' },\n                { key: 'category', label: 'Category' },\n              ].map((option) => (\n                <TouchableOpacity\n                  key={option.key}\n                  style={[\n                    styles.sortButton,\n                    {\n                      backgroundColor: sortBy === option.key ? colors.accent : 'transparent',\n                      borderColor: colors.border,\n                    },\n                  ]}\n                  onPress={() => setSortBy(option.key as any)}\n                >\n                  <Text\n                    style={[\n                      styles.sortButtonText,\n                      {\n                        color: sortBy === option.key ? Colors.white : colors.text,\n                      },\n                    ]}\n                  >\n                    {option.label}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n          <View style={styles.filterRow}>\n            <TouchableOpacity\n              style={[styles.orderButton, { backgroundColor: colors.accent }]}\n              onPress={toggleSortOrder}\n            >\n              <Text style={[styles.orderButtonText, { color: Colors.white }]}>\n                {sortOrder === 'asc' ? '↑ Ascending' : '↓ Descending'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      )}\n\n      {/* Selection Mode Actions */}\n      {isSelectionMode && (\n        <View style={[styles.selectionActions, { backgroundColor: colors.accent }]}>\n          <TouchableOpacity\n            style={styles.selectionButton}\n            onPress={selectAllScans}\n          >\n            <Text style={[styles.selectionButtonText, { color: Colors.white }]}>Select All</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.selectionButton}\n            onPress={clearSelection}\n          >\n            <Text style={[styles.selectionButtonText, { color: Colors.white }]}>Clear</Text>\n          </TouchableOpacity>\n          <Text style={[styles.selectionCount, { color: Colors.white }]}>\n            {selectedScans.size} selected\n          </Text>\n        </View>\n      )}\n\n      {/* Stats Summary */}\n      <View style={[styles.statsContainer, { backgroundColor: colors.surface }]}>\n        <View style={styles.statsRow}>\n          <View style={styles.statItem}>\n            <Text style={[styles.statValue, { color: colors.text }]}>{stats.total}</Text>\n            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Total</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={[styles.statValue, { color: Colors.safe }]}>{stats.safe}</Text>\n            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Safe</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={[styles.statValue, { color: Colors.caution }]}>{stats.caution}</Text>\n            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Caution</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={[styles.statValue, { color: Colors.avoid }]}>{stats.avoid}</Text>\n            <Text style={[styles.statLabel, { color: colors.textSecondary }]}>Avoid</Text>\n          </View>\n        </View>\n      </View>\n\n      {/* Filter Buttons */}\n      <View style={styles.filterContainer}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          {[\n            { key: 'all', label: 'All', count: stats.total },\n            { key: 'safe', label: 'Safe', count: stats.safe },\n            { key: 'caution', label: 'Caution', count: stats.caution },\n            { key: 'avoid', label: 'Avoid', count: stats.avoid },\n          ].map((filterOption) => (\n            <TouchableOpacity\n              key={filterOption.key}\n              style={[\n                styles.filterButton,\n                {\n                  backgroundColor: filter === filterOption.key ? colors.accent : colors.surface,\n                },\n              ]}\n              onPress={() => setFilter(filterOption.key as any)}\n            >\n              <Text\n                style={[\n                  styles.filterButtonText,\n                  {\n                    color: filter === filterOption.key ? Colors.white : colors.text,\n                  },\n                ]}\n              >\n                {filterOption.label} ({filterOption.count})\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n\n      {/* Scan History List */}\n      <FlatList\n        data={filteredAndSortedHistory}\n        keyExtractor={(item) => item.id}\n        style={styles.scrollView}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollContent}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n        renderItem={({ item: scan }) => (\n          <View style={styles.scanItemContainer}>\n            {isSelectionMode && (\n              <TouchableOpacity\n                style={[\n                  styles.selectionCheckbox,\n                  {\n                    backgroundColor: selectedScans.has(scan.id) ? colors.accent : 'transparent',\n                    borderColor: colors.border,\n                  },\n                ]}\n                onPress={() => toggleScanSelection(scan.id)}\n              >\n                {selectedScans.has(scan.id) && (\n                  <Text style={[styles.checkmark, { color: Colors.white }]}>✓</Text>\n                )}\n              </TouchableOpacity>\n            )}\n            <View style={isSelectionMode ? styles.selectedCard : undefined}>\n              <ScanDetailCard\n                scanHistory={scan}\n                onPress={() => handleCardPress(scan.id)}\n                onExpand={() => handleCardExpand(scan.id)}\n                expanded={expandedCard === scan.id}\n              />\n            </View>\n          </View>\n        )}\n        ListEmptyComponent={() => (\n          <View style={styles.emptyState}>\n            <Text style={styles.emptyIcon}>📱</Text>\n            <Text style={[styles.emptyTitle, { color: colors.text }]}>\n              {searchQuery ? 'No matching scans found' : 'No scans found'}\n            </Text>\n            <Text style={[styles.emptySubtitle, { color: colors.textSecondary }]}>\n              {searchQuery \n                ? 'Try adjusting your search terms or filters'\n                : filter === 'all'\n                  ? 'Start scanning foods to see your history here'\n                  : `No ${filter} scans found`}\n            </Text>\n            {searchQuery && (\n              <TouchableOpacity\n                style={[styles.clearSearchButton, { backgroundColor: colors.accent }]}\n                onPress={clearSearch}\n              >\n                <Text style={[styles.clearSearchButtonText, { color: Colors.white }]}>\n                  Clear Search\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n        getItemLayout={(data, index) => ({\n          length: 200, // Approximate height of each item\n          offset: 200 * index,\n          index,\n        })}\n        initialNumToRender={10}\n        maxToRenderPerBatch={5}\n        windowSize={10}\n        removeClippedSubviews={true}\n      />\n\n      {/* Export Modal */}\n      <Modal\n        visible={showExportModal}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setShowExportModal(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContent, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.modalTitle, { color: colors.text }]}>Export Scan History</Text>\n            <Text style={[styles.modalSubtitle, { color: colors.textSecondary }]}>\n              {selectedScans.size > 0 \n                ? `Export ${selectedScans.size} selected scans`\n                : `Export all ${filteredAndSortedHistory.length} scans`}\n            </Text>\n            \n            <View style={styles.exportOptions}>\n              <TouchableOpacity\n                style={[styles.exportOption, { borderColor: colors.border }]}\n                onPress={() => handleExport('json')}\n              >\n                <Text style={styles.exportIcon}>📄</Text>\n                <Text style={[styles.exportLabel, { color: colors.text }]}>JSON</Text>\n                <Text style={[styles.exportDescription, { color: colors.textSecondary }]}>\n                  Complete data with all details\n                </Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                style={[styles.exportOption, { borderColor: colors.border }]}\n                onPress={() => handleExport('csv')}\n              >\n                <Text style={styles.exportIcon}>📊</Text>\n                <Text style={[styles.exportLabel, { color: colors.text }]}>CSV</Text>\n                <Text style={[styles.exportDescription, { color: colors.textSecondary }]}>\n                  Spreadsheet format for analysis\n                </Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                style={[styles.exportOption, { borderColor: colors.border }]}\n                onPress={() => handleExport('pdf')}\n              >\n                <Text style={styles.exportIcon}>📋</Text>\n                <Text style={[styles.exportLabel, { color: colors.text }]}>PDF</Text>\n                <Text style={[styles.exportDescription, { color: colors.textSecondary }]}>\n                  Printable report format\n                </Text>\n              </TouchableOpacity>\n            </View>\n            \n            <View style={styles.modalActions}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: colors.border }]}\n                onPress={() => setShowExportModal(false)}\n              >\n                <Text style={[styles.modalButtonText, { color: colors.text }]}>Cancel</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n  },\n  backButton: {\n    padding: Spacing.xs,\n  },\n  backButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  title: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    flex: 1,\n    textAlign: 'center',\n  },\n  headerActions: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  headerButton: {\n    padding: Spacing.xs,\n  },\n  headerButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n    gap: Spacing.sm,\n  },\n  searchInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: BorderRadius.md,\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n  },\n  searchIcon: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  clearButton: {\n    padding: Spacing.xs,\n  },\n  clearButtonText: {\n    fontSize: 16,\n    fontFamily: Typography.fontFamily.bold,\n  },\n  searchFilterButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.md,\n  },\n  searchFilterButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  filtersContainer: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  filterRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: Spacing.sm,\n  },\n  filterLabel: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    marginRight: Spacing.md,\n  },\n  sortButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  sortButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    borderWidth: 1,\n  },\n  sortButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  orderButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n  },\n  orderButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  selectionActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.sm,\n    gap: Spacing.md,\n  },\n  selectionButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n  },\n  selectionButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  selectionCount: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n    marginLeft: 'auto',\n  },\n  scanItemContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingHorizontal: Spacing.lg,\n    marginBottom: Spacing.sm,\n  },\n  selectionCheckbox: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    borderWidth: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: Spacing.sm,\n    marginTop: Spacing.sm,\n  },\n  checkmark: {\n    fontSize: 16,\n    fontFamily: Typography.fontFamily.bold,\n  },\n  selectedCard: {\n    opacity: 0.8,\n  },\n  statsContainer: {\n    marginHorizontal: Spacing.lg,\n    marginBottom: Spacing.md,\n    borderRadius: 12,\n    padding: Spacing.md,\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.xs,\n  },\n  statLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  filterContainer: {\n    paddingHorizontal: Spacing.lg,\n    marginBottom: Spacing.md,\n  },\n  filterButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: 20,\n    marginRight: Spacing.sm,\n  },\n  filterButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingBottom: Spacing.xxl,\n  },\n  emptyState: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: Spacing.xxl,\n    paddingHorizontal: Spacing.xl,\n  },\n  emptyIcon: {\n    fontSize: 48,\n    marginBottom: Spacing.md,\n  },\n  emptyTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.sm,\n    textAlign: 'center',\n  },\n  emptySubtitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    lineHeight: Typography.lineHeight.body,\n  },\n  clearSearchButton: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.md,\n    marginTop: Spacing.md,\n  },\n  clearSearchButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n  },\n  modalContent: {\n    width: '100%',\n    maxWidth: 400,\n    borderRadius: BorderRadius.lg,\n    padding: Spacing.lg,\n  },\n  modalTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    textAlign: 'center',\n    marginBottom: Spacing.sm,\n  },\n  modalSubtitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    marginBottom: Spacing.lg,\n  },\n  exportOptions: {\n    gap: Spacing.md,\n    marginBottom: Spacing.lg,\n  },\n  exportOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: Spacing.md,\n    borderRadius: BorderRadius.md,\n    borderWidth: 1,\n  },\n  exportIcon: {\n    fontSize: 24,\n    marginRight: Spacing.md,\n  },\n  exportLabel: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.bold,\n    flex: 1,\n  },\n  exportDescription: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'right',\n  },\n  modalActions: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  modalButton: {\n    paddingHorizontal: Spacing.xl,\n    paddingVertical: Spacing.md,\n    borderRadius: BorderRadius.md,\n  },\n  modalButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n});\n"],"names":["Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","ScanDetailCard","_ref","scanHistory","onPress","onExpand","expanded","showFullDetails","colors","useColorScheme","Colors","dark","light","isExpanded","setIsExpanded","useState","rotateAnim","useRef","Animated","Value","current","foodItem","analysis","timestamp","overallSafety","flaggedIngredients","safeAlternatives","explanation","dataSource","getSeverityColor","severity","safe","caution","avoid","getSeverityIcon","resultConfig","getResultConfig","color","icon","backgroundColor","concat","title","chevronRotation","interpolate","inputRange","outputRange","_jsxs","TouchableOpacity","style","styles","card","surface","activeOpacity","children","View","header","titleRow","_jsx","Text","titleContainer","foodName","text","name","textSecondary","date","now","Date","diffInHours","Math","floor","getTime","diffInDays","formatTimestamp","rightSection","resultBadge","resultText","toggleExpanded","LayoutAnimation","configureNext","Presets","easeInEaseOut","timing","toValue","duration","useNativeDriver","start","expandButton","chevron","transform","rotate","basicInfo","confidenceRow","confidenceLabel","confidenceValue","brand","textTertiary","expandedContent","section","sectionTitle","length","map","ingredient","index","ingredientItem","ingredientHeader","severityIcon","ingredientName","severityBadge","severityText","ingredientReason","reason","conditionText","condition","alternativesList","alternative","alternativeItem","background","alternativeIcon","alternativeText","foodDetails","category","detailRow","detailLabel","detailValue","histamineLevel","StyleSheet","create","_objectSpread","marginHorizontal","Spacing","lg","marginBottom","sm","borderRadius","padding","md","boxShadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","justifyContent","alignItems","flex","fontSize","marginRight","marginTop","Typography","body","fontFamily","semiBold","caption","regular","paddingHorizontal","paddingVertical","xs","fontWeight","bodySmall","paddingTop","borderTopWidth","borderTopColor","lineHeight","textTransform","fontStyle","flexWrap","gap","mockScanHistory","id","barcode","ingredients","allergens","additives","glutenFree","lactoseFree","conditionWarnings","lastUpdated","userFeedback","ScanHistoryScreen","navigation","useNavigation","isDark","refreshing","setRefreshing","expandedCard","setExpandedCard","filter","setFilter","searchQuery","setSearchQuery","sortBy","setSortBy","sortOrder","setSortOrder","showFilters","setShowFilters","showExportModal","setShowExportModal","selectedScans","setSelectedScans","Set","isSelectionMode","setIsSelectionMode","searchInputRef","filteredAndSortedHistory","useMemo","filtered","scan","trim","query","toLowerCase","_scan$foodItem$brand","_scan$foodItem$catego","includes","some","flagged","sort","a","b","comparison","localeCompare","safetyOrder","toggleScanSelection","scanId","newSelection","has","delete","add","handleExport","async","scansToExport","size","exportData","mimeType","format","JSON","stringify","generateCSV","generatePDF","Share","share","message","url","btoa","Alert","alert","error","logger","scans","toISOString","join","f","row","field","toString","replace","toLocaleDateString","clearSearch","_searchInputRef$curre","blur","getFilterCount","result","stats","total","SafeAreaView","container","StatusBar","barStyle","backButton","goBack","backButtonText","accent","headerActions","headerButton","toggleSelectionMode","headerButtonText","searchContainer","searchInputContainer","borderColor","border","searchIcon","TextInput","ref","searchInput","placeholder","placeholderTextColor","value","onChangeText","returnKeyType","clearButton","clearButtonText","searchFilterButton","searchFilterButtonText","white","filtersContainer","filterRow","filterLabel","sortButtons","key","label","option","sortButton","sortButtonText","orderButton","toggleSortOrder","orderButtonText","selectionActions","selectionButton","selectAllScans","selectionButtonText","clearSelection","selectionCount","statsContainer","statsRow","statItem","statValue","statLabel","filterContainer","ScrollView","horizontal","showsHorizontalScrollIndicator","count","filterOption","filterButton","filterButtonText","FlatList","data","keyExtractor","item","scrollView","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","refreshControl","RefreshControl","onRefresh","setTimeout","renderItem","scanItemContainer","selectionCheckbox","checkmark","selectedCard","undefined","handleCardPress","navigate","handleCardExpand","ListEmptyComponent","emptyState","emptyIcon","emptyTitle","emptySubtitle","clearSearchButton","clearSearchButtonText","getItemLayout","offset","initialNumToRender","maxToRenderPerBatch","windowSize","removeClippedSubviews","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","modalTitle","modalSubtitle","exportOptions","exportOption","exportIcon","exportLabel","exportDescription","modalActions","modalButton","modalButtonText","h2","bold","textAlign","borderWidth","BorderRadius","borderBottomWidth","borderBottomColor","medium","marginLeft","opacity","paddingBottom","xxl","xl","h3","maxWidth","h4"],"sourceRoot":""}