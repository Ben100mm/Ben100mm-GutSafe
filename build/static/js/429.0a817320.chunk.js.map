{"version":3,"file":"static/js/429.0a817320.chunk.js","mappings":"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","sources":["screens/OnboardingScreen.tsx","components/LinearGradientWrapper.tsx"],"sourcesContent":["/**\n * @fileoverview OnboardingScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  useColorScheme,\n  TouchableOpacity,\n  Animated,\n  // Dimensions,\n  Platform,\n  Alert,\n} from 'react-native';\nimport LinearGradient from '../components/LinearGradientWrapper';\nimport { useNavigation } from '@react-navigation/native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing, BorderRadius } from '../constants/spacing';\nimport { GutCondition, SeverityLevel, GutConditionToggle } from '../types';\n\n// const { width } = Dimensions.get('window');\n\ninterface OnboardingStep {\n  id: string;\n  title: string;\n  subtitle: string;\n  component: React.ReactNode;\n}\n\nexport const OnboardingScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [currentStep, setCurrentStep] = useState(0);\n  const [conditionToggles, setConditionToggles] = useState<GutConditionToggle[]>([]);\n  const [knownTriggers, setKnownTriggers] = useState<{ [key: string]: string[] }>({});\n  const [dietaryRestrictions, setDietaryRestrictions] = useState<string[]>([]);\n  const [preferredAlternatives, setPreferredAlternatives] = useState<string[]>([]);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const scrollViewRef = useRef<ScrollView>(null);\n  const fadeAnim = useRef(new Animated.Value(1)).current;\n\n  // Initialize condition toggles\n  React.useEffect(() => {\n    const initialConditions: GutConditionToggle[] = [\n      'ibs-fodmap',\n      'gluten',\n      'lactose',\n      'reflux',\n      'histamine',\n      'allergies',\n      'additives',\n    ].map(condition => ({\n      condition: condition as GutCondition,\n      enabled: false,\n      severity: 'mild' as SeverityLevel,\n      knownTriggers: [],\n      lastUpdated: new Date(),\n    }));\n    setConditionToggles(initialConditions);\n  }, []);\n\n  const handleConditionToggle = (condition: GutCondition, enabled: boolean) => {\n    setConditionToggles(prev => \n      prev.map(toggle => \n        toggle.condition === condition \n          ? { ...toggle, enabled, lastUpdated: new Date() }\n          : toggle\n      )\n    );\n  };\n\n  const handleSeverityChange = (condition: GutCondition, severity: SeverityLevel) => {\n    setConditionToggles(prev => \n      prev.map(toggle => \n        toggle.condition === condition \n          ? { ...toggle, severity, lastUpdated: new Date() }\n          : toggle\n      )\n    );\n  };\n\n  const steps: OnboardingStep[] = [\n    {\n      id: 'welcome',\n      title: 'Welcome to GutSafe',\n      subtitle: 'Let\\'s personalize your gut health journey',\n      component: <WelcomeStep />,\n    },\n    {\n      id: 'conditions',\n      title: 'Select Your Conditions',\n      subtitle: 'Choose the gut conditions that affect you',\n      component: <ConditionsStep \n        conditionToggles={conditionToggles}\n        onConditionToggle={handleConditionToggle}\n        onSeverityChange={handleSeverityChange}\n      />,\n    },\n    {\n      id: 'triggers',\n      title: 'Known Triggers',\n      subtitle: 'Add foods that you know trigger your symptoms',\n      component: <TriggersStep \n        enabledConditions={conditionToggles.filter(t => t.enabled)}\n        knownTriggers={knownTriggers}\n        onTriggersChange={setKnownTriggers}\n      />,\n    },\n    {\n      id: 'preferences',\n      title: 'Dietary Preferences',\n      subtitle: 'Set your dietary restrictions and preferred alternatives',\n      component: <PreferencesStep \n        dietaryRestrictions={dietaryRestrictions}\n        preferredAlternatives={preferredAlternatives}\n        onDietaryRestrictionsChange={setDietaryRestrictions}\n        onPreferredAlternativesChange={setPreferredAlternatives}\n      />,\n    },\n    {\n      id: 'complete',\n      title: 'You\\'re All Set!',\n      subtitle: 'Your personalized gut profile is ready',\n      component: <CompleteStep />,\n    },\n  ];\n\n  const nextStep = () => {\n    if (currentStep < steps.length - 1) {\n      Animated.sequence([\n        Animated.timing(fadeAnim, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n      ]).start();\n      \n      setCurrentStep(prev => prev + 1);\n      scrollViewRef.current?.scrollTo({ x: 0, y: 0, animated: true });\n    } else {\n      completeOnboarding();\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 0) {\n      Animated.sequence([\n        Animated.timing(fadeAnim, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n      ]).start();\n      \n      setCurrentStep(prev => prev - 1);\n      scrollViewRef.current?.scrollTo({ x: 0, y: 0, animated: true });\n    }\n  };\n\n  const completeOnboarding = () => {\n    // Save gut profile to storage\n    const gutProfile = {\n      id: Date.now().toString(),\n      conditions: conditionToggles.reduce((acc, toggle) => {\n        acc[toggle.condition] = {\n          enabled: toggle.enabled,\n          severity: toggle.severity,\n          knownTriggers: knownTriggers[toggle.condition] || [],\n        };\n        return acc;\n      }, {} as any),\n      preferences: {\n        dietaryRestrictions,\n        preferredAlternatives,\n      },\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    // TODO: Save to AsyncStorage or backend\n    console.log('Gut Profile Created:', gutProfile);\n    setIsComplete(true);\n    \n    // Navigate to main app\n    setTimeout(() => {\n      (navigation as any).navigate('Summary');\n    }, 2000);\n  };\n\n  const skipOnboarding = () => {\n    Alert.alert(\n      'Skip Onboarding',\n      'You can always set up your gut profile later in settings. Are you sure you want to skip?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Skip', \n          style: 'destructive',\n          onPress: () => (navigation as any).navigate('Summary')\n        },\n      ]\n    );\n  };\n\n  const canProceed = () => {\n    switch (currentStep) {\n      case 0: // Welcome\n        return true;\n      case 1: // Conditions\n        return conditionToggles.some(t => t.enabled);\n      case 2: // Triggers\n        return true; // Optional step\n      case 3: // Preferences\n        return true; // Optional step\n      case 4: // Complete\n        return false;\n      default:\n        return false;\n    }\n  };\n\n  const currentStepData = steps[currentStep];\n\n  if (isComplete) {\n    return (\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\n        <LinearGradient\n          colors={Colors.primaryGradient}\n          style={styles.completeHeader}\n        >\n          <Text style={styles.completeIcon}>🎉</Text>\n          <Text style={styles.completeTitle}>Welcome to GutSafe!</Text>\n          <Text style={styles.completeSubtitle}>\n            Your personalized gut profile is ready. Let's start scanning!\n          </Text>\n        </LinearGradient>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      {/* Progress Bar */}\n      <View style={[styles.progressContainer, { backgroundColor: colors.surface }]}>\n        <View style={styles.progressBar}>\n          <View \n            style={[\n              styles.progressFill, \n              { width: `${((currentStep + 1) / steps.length) * 100}%` }\n            ]} \n          />\n        </View>\n        <Text style={[styles.progressText, { color: colors.textSecondary }]}>\n          Step {currentStep + 1} of {steps.length}\n        </Text>\n      </View>\n\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={[styles.title, { color: colors.text }]}>\n          {currentStepData?.title || 'Welcome'}\n        </Text>\n        <Text style={[styles.subtitle, { color: colors.textSecondary }]}>\n          {currentStepData?.subtitle || 'Get started with GutSafe'}\n        </Text>\n      </View>\n\n      {/* Content */}\n      <Animated.View style={[styles.content, { opacity: fadeAnim }]}>\n        <ScrollView \n          ref={scrollViewRef}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.scrollContent}\n        >\n          {currentStepData?.component || <View />}\n        </ScrollView>\n      </Animated.View>\n\n      {/* Navigation */}\n      <View style={[styles.navigation, { backgroundColor: colors.surface }]}>\n        <TouchableOpacity\n          style={[\n            styles.navButton,\n            styles.skipButton,\n            { borderColor: colors.border }\n          ]}\n          onPress={skipOnboarding}\n        >\n          <Text style={[styles.skipButtonText, { color: colors.textSecondary }]}>\n            Skip\n          </Text>\n        </TouchableOpacity>\n\n        <View style={styles.navButtons}>\n          {currentStep > 0 && (\n            <TouchableOpacity\n              style={[\n                styles.navButton,\n                styles.backButton,\n                { borderColor: colors.border }\n              ]}\n              onPress={prevStep}\n            >\n              <Text style={[styles.backButtonText, { color: colors.text }]}>\n                Back\n              </Text>\n            </TouchableOpacity>\n          )}\n\n          <TouchableOpacity\n            style={[\n              styles.navButton,\n              styles.nextButton,\n              { \n                backgroundColor: canProceed() ? Colors.primary : colors.border,\n                opacity: canProceed() ? 1 : 0.5\n              }\n            ]}\n            onPress={nextStep}\n            disabled={!canProceed()}\n          >\n            <Text style={[\n              styles.nextButtonText,\n              { color: canProceed() ? Colors.white : colors.textSecondary }\n            ]}>\n              {currentStep === steps.length - 1 ? 'Get Started' : 'Next'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\n// Step Components\nconst WelcomeStep: React.FC = () => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.stepContent}>\n      <View style={styles.welcomeIcon}>\n        <Text style={styles.welcomeEmoji}>🫀</Text>\n      </View>\n      <Text style={[styles.stepTitle, { color: colors.text }]}>\n        Your Gut Health Journey Starts Here\n      </Text>\n      <Text style={[styles.stepDescription, { color: colors.textSecondary }]}>\n        GutSafe helps you identify foods that trigger digestive symptoms and find safe alternatives. \n        Let's create your personalized profile in just a few steps.\n      </Text>\n      \n      <View style={styles.featuresList}>\n        <View style={styles.featureItem}>\n          <Text style={styles.featureIcon}>🔍</Text>\n          <Text style={[styles.featureText, { color: colors.text }]}>\n            Scan barcodes and analyze ingredients\n          </Text>\n        </View>\n        <View style={styles.featureItem}>\n          <Text style={styles.featureIcon}>⚠️</Text>\n          <Text style={[styles.featureText, { color: colors.text }]}>\n            Get instant warnings for trigger foods\n          </Text>\n        </View>\n        <View style={styles.featureItem}>\n          <Text style={styles.featureIcon}>✅</Text>\n          <Text style={[styles.featureText, { color: colors.text }]}>\n            Discover safe alternatives\n          </Text>\n        </View>\n        <View style={styles.featureItem}>\n          <Text style={styles.featureIcon}>📊</Text>\n          <Text style={[styles.featureText, { color: colors.text }]}>\n            Track your gut health over time\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst ConditionsStep: React.FC<{\n  conditionToggles: GutConditionToggle[];\n  onConditionToggle: (condition: GutCondition, enabled: boolean) => void;\n  onSeverityChange: (condition: GutCondition, severity: SeverityLevel) => void;\n}> = ({ conditionToggles, onConditionToggle, onSeverityChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const conditionInfo = {\n    'ibs-fodmap': {\n      name: 'IBS (FODMAP)',\n      description: 'Irritable Bowel Syndrome with FODMAP sensitivity',\n      icon: '🌾',\n    },\n    'gluten': {\n      name: 'Gluten Sensitivity',\n      description: 'Sensitivity to gluten-containing foods',\n      icon: '🌾',\n    },\n    'lactose': {\n      name: 'Lactose Intolerance',\n      description: 'Difficulty digesting lactose in dairy products',\n      icon: '🥛',\n    },\n    'reflux': {\n      name: 'Acid Reflux',\n      description: 'Gastroesophageal reflux disease (GERD)',\n      icon: '🔥',\n    },\n    'histamine': {\n      name: 'Histamine Intolerance',\n      description: 'Sensitivity to histamine-rich foods',\n      icon: '🍷',\n    },\n    'allergies': {\n      name: 'Food Allergies',\n      description: 'Immune reactions to specific foods',\n      icon: '🚨',\n    },\n    'additives': {\n      name: 'Additive Sensitivity',\n      description: 'Sensitivity to food additives and preservatives',\n      icon: '🧪',\n    },\n  };\n\n  return (\n    <View style={styles.stepContent}>\n      <Text style={[styles.stepDescription, { color: colors.textSecondary }]}>\n        Select all conditions that apply to you. You can adjust severity levels and add known triggers later.\n      </Text>\n      \n      <View style={styles.conditionsList}>\n        {conditionToggles.map((toggle) => {\n          const info = conditionInfo[toggle.condition];\n          return (\n            <View key={toggle.condition} style={styles.conditionCard}>\n              <TouchableOpacity\n                style={[\n                  styles.conditionToggle,\n                  toggle.enabled && { backgroundColor: Colors.primary + '20' }\n                ]}\n                onPress={() => onConditionToggle(toggle.condition, !toggle.enabled)}\n              >\n                <View style={styles.conditionHeader}>\n                  <Text style={styles.conditionIcon}>{info.icon}</Text>\n                  <View style={styles.conditionInfo}>\n                    <Text style={[styles.conditionName, { color: colors.text }]}>\n                      {info.name}\n                    </Text>\n                    <Text style={[styles.conditionDescription, { color: colors.textSecondary }]}>\n                      {info.description}\n                    </Text>\n                  </View>\n                  <View style={[\n                    styles.toggleSwitch,\n                    toggle.enabled && { backgroundColor: Colors.primary }\n                  ]}>\n                    <View style={[\n                      styles.toggleThumb,\n                      toggle.enabled && { transform: [{ translateX: 20 }] }\n                    ]} />\n                  </View>\n                </View>\n                \n                {toggle.enabled && (\n                  <View style={styles.severitySection}>\n                    <Text style={[styles.severityLabel, { color: colors.text }]}>\n                      Severity Level:\n                    </Text>\n                    <View style={styles.severityButtons}>\n                      {(['mild', 'moderate', 'severe'] as SeverityLevel[]).map((severity) => (\n                        <TouchableOpacity\n                          key={severity}\n                          style={[\n                            styles.severityButton,\n                            toggle.severity === severity && { backgroundColor: Colors.primary }\n                          ]}\n                          onPress={() => onSeverityChange(toggle.condition, severity)}\n                        >\n                          <Text style={[\n                            styles.severityButtonText,\n                            { \n                              color: toggle.severity === severity ? Colors.white : colors.text,\n                              textTransform: 'capitalize'\n                            }\n                          ]}>\n                            {severity}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n                )}\n              </TouchableOpacity>\n            </View>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n\nconst TriggersStep: React.FC<{\n  enabledConditions: GutConditionToggle[];\n  knownTriggers: { [key: string]: string[] };\n  onTriggersChange: (triggers: { [key: string]: string[] }) => void;\n}> = ({ enabledConditions, knownTriggers, onTriggersChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const handleAddTrigger = (condition: GutCondition) => {\n    Alert.prompt(\n      'Add Known Trigger',\n      `Enter a food that triggers your ${condition.replace('-', ' ')} symptoms:`,\n      (text) => {\n        if (text && text.trim()) {\n          const currentTriggers = knownTriggers[condition] || [];\n          onTriggersChange({\n            ...knownTriggers,\n            [condition]: [...currentTriggers, text.trim()]\n          });\n        }\n      },\n      'plain-text'\n    );\n  };\n\n  const handleRemoveTrigger = (condition: GutCondition, trigger: string) => {\n    const currentTriggers = knownTriggers[condition] || [];\n    onTriggersChange({\n      ...knownTriggers,\n      [condition]: currentTriggers.filter(t => t !== trigger)\n    });\n  };\n\n  return (\n    <View style={styles.stepContent}>\n      <Text style={[styles.stepDescription, { color: colors.textSecondary }]}>\n        Add foods you know trigger your symptoms. This helps us provide more accurate warnings.\n      </Text>\n      \n      {enabledConditions.length === 0 ? (\n        <View style={styles.emptyState}>\n          <Text style={styles.emptyIcon}>ℹ️</Text>\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>\n            No Conditions Selected\n          </Text>\n          <Text style={[styles.emptyDescription, { color: colors.textSecondary }]}>\n            Go back and select your gut conditions first.\n          </Text>\n        </View>\n      ) : (\n        <View style={styles.triggersList}>\n          {enabledConditions.map((condition) => {\n            const triggers = knownTriggers[condition.condition] || [];\n            return (\n              <View key={condition.condition} style={styles.triggerSection}>\n                <View style={styles.triggerHeader}>\n                  <Text style={[styles.triggerTitle, { color: colors.text }]}>\n                    {condition.condition.replace('-', ' ').toUpperCase()}\n                  </Text>\n                  <TouchableOpacity\n                    style={styles.addTriggerButton}\n                    onPress={() => handleAddTrigger(condition.condition)}\n                  >\n                    <Text style={styles.addTriggerText}>+ Add Trigger</Text>\n                  </TouchableOpacity>\n                </View>\n                \n                {triggers.length > 0 ? (\n                  <View style={styles.triggersList}>\n                    {triggers.map((trigger, index) => (\n                      <View key={index} style={styles.triggerItem}>\n                        <Text style={[styles.triggerText, { color: colors.text }]}>\n                          {trigger}\n                        </Text>\n                        <TouchableOpacity\n                          style={styles.removeTriggerButton}\n                          onPress={() => handleRemoveTrigger(condition.condition, trigger)}\n                        >\n                          <Text style={styles.removeTriggerText}>×</Text>\n                        </TouchableOpacity>\n                      </View>\n                    ))}\n                  </View>\n                ) : (\n                  <Text style={[styles.noTriggersText, { color: colors.textSecondary }]}>\n                    No known triggers added yet\n                  </Text>\n                )}\n              </View>\n            );\n          })}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst PreferencesStep: React.FC<{\n  dietaryRestrictions: string[];\n  preferredAlternatives: string[];\n  onDietaryRestrictionsChange: (restrictions: string[]) => void;\n  onPreferredAlternativesChange: (alternatives: string[]) => void;\n}> = ({ dietaryRestrictions, preferredAlternatives, onDietaryRestrictionsChange, onPreferredAlternativesChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const commonRestrictions = [\n    'Vegetarian', 'Vegan', 'Keto', 'Paleo', 'Mediterranean', \n    'Low FODMAP', 'Dairy-free', 'Gluten-free', 'Sugar-free'\n  ];\n\n  const commonAlternatives = [\n    'Coconut milk', 'Almond milk', 'Oat milk', 'Rice milk',\n    'Gluten-free bread', 'Cauliflower rice', 'Zucchini noodles',\n    'Coconut yogurt', 'Cashew cheese', 'Nutritional yeast'\n  ];\n\n  const toggleArrayItem = (array: string[], item: string, setter: (items: string[]) => void) => {\n    if (array.includes(item)) {\n      setter(array.filter(i => i !== item));\n    } else {\n      setter([...array, item]);\n    }\n  };\n\n  return (\n    <View style={styles.stepContent}>\n      <Text style={[styles.stepDescription, { color: colors.textSecondary }]}>\n        Set your dietary preferences to get more personalized recommendations.\n      </Text>\n      \n      <View style={styles.preferencesSection}>\n        <Text style={[styles.preferencesTitle, { color: colors.text }]}>\n          Dietary Restrictions\n        </Text>\n        <View style={styles.preferencesGrid}>\n          {commonRestrictions.map((restriction) => (\n            <TouchableOpacity\n              key={restriction}\n              style={[\n                styles.preferenceChip,\n                dietaryRestrictions.includes(restriction) && { backgroundColor: Colors.primary }\n              ]}\n              onPress={() => toggleArrayItem(dietaryRestrictions, restriction, onDietaryRestrictionsChange)}\n            >\n              <Text style={[\n                styles.preferenceChipText,\n                { \n                  color: dietaryRestrictions.includes(restriction) ? Colors.white : colors.text \n                }\n              ]}>\n                {restriction}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      <View style={styles.preferencesSection}>\n        <Text style={[styles.preferencesTitle, { color: colors.text }]}>\n          Preferred Alternatives\n        </Text>\n        <View style={styles.preferencesGrid}>\n          {commonAlternatives.map((alternative) => (\n            <TouchableOpacity\n              key={alternative}\n              style={[\n                styles.preferenceChip,\n                preferredAlternatives.includes(alternative) && { backgroundColor: Colors.primary }\n              ]}\n              onPress={() => toggleArrayItem(preferredAlternatives, alternative, onPreferredAlternativesChange)}\n            >\n              <Text style={[\n                styles.preferenceChipText,\n                { \n                  color: preferredAlternatives.includes(alternative) ? Colors.white : colors.text \n                }\n              ]}>\n                {alternative}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst CompleteStep: React.FC = () => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.stepContent}>\n      <View style={styles.completeIcon}>\n        <Text style={styles.completeEmoji}>🎉</Text>\n      </View>\n      <Text style={[styles.stepTitle, { color: colors.text }]}>\n        Your Gut Profile is Ready!\n      </Text>\n      <Text style={[styles.stepDescription, { color: colors.textSecondary }]}>\n        You're all set to start scanning foods and tracking your gut health. \n        You can always update your profile in settings.\n      </Text>\n      \n      <View style={styles.nextStepsList}>\n        <View style={styles.nextStepItem}>\n          <Text style={styles.nextStepIcon}>📱</Text>\n          <Text style={[styles.nextStepText, { color: colors.text }]}>\n            Start scanning barcodes and ingredients\n          </Text>\n        </View>\n        <View style={styles.nextStepItem}>\n          <Text style={styles.nextStepIcon}>📊</Text>\n          <Text style={[styles.nextStepText, { color: colors.text }]}>\n            Track your symptoms and food reactions\n          </Text>\n        </View>\n        <View style={styles.nextStepItem}>\n          <Text style={styles.nextStepIcon}>🔍</Text>\n          <Text style={[styles.nextStepText, { color: colors.text }]}>\n            Browse safe foods and alternatives\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  progressContainer: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: 'rgba(15, 82, 87, 0.1)',\n    borderRadius: 2,\n    marginBottom: Spacing.xs,\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: Colors.primary,\n    borderRadius: 2,\n  },\n  progressText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.medium,\n    textAlign: 'center',\n  },\n  header: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.xl,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: Typography.fontSize.h1,\n    fontFamily: Typography.fontFamily.bold,\n    textAlign: 'center',\n    marginBottom: Spacing.sm,\n  },\n  subtitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n  content: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingHorizontal: Spacing.lg,\n    paddingBottom: Spacing.xl,\n  },\n  stepContent: {\n    alignItems: 'center',\n  },\n  stepTitle: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    textAlign: 'center',\n    marginBottom: Spacing.md,\n  },\n  stepDescription: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    lineHeight: 22,\n    marginBottom: Spacing.xl,\n  },\n  navigation: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.lg,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  navButtons: {\n    flexDirection: 'row',\n    gap: Spacing.md,\n  },\n  navButton: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n    borderRadius: BorderRadius.md,\n    borderWidth: 1,\n  },\n  skipButton: {\n    backgroundColor: 'transparent',\n  },\n  skipButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  backButton: {\n    backgroundColor: 'transparent',\n  },\n  backButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  nextButton: {\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  nextButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  // Welcome Step\n  welcomeIcon: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    backgroundColor: Colors.primary + '20',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: Spacing.xl,\n  },\n  welcomeEmoji: {\n    fontSize: 60,\n  },\n  featuresList: {\n    width: '100%',\n    gap: Spacing.md,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: Spacing.sm,\n  },\n  featureIcon: {\n    fontSize: 24,\n    marginRight: Spacing.md,\n  },\n  featureText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    flex: 1,\n  },\n  // Conditions Step\n  conditionsList: {\n    width: '100%',\n    gap: Spacing.md,\n  },\n  conditionCard: {\n    borderRadius: BorderRadius.lg,\n    borderWidth: 1,\n    borderColor: 'rgba(15, 82, 87, 0.1)',\n    overflow: 'hidden',\n  },\n  conditionToggle: {\n    padding: Spacing.lg,\n  },\n  conditionHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  conditionIcon: {\n    fontSize: 24,\n    marginRight: Spacing.md,\n  },\n  conditionInfo: {\n    flex: 1,\n  },\n  conditionName: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: Spacing.xs,\n  },\n  conditionDescription: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    lineHeight: 18,\n  },\n  toggleSwitch: {\n    width: 50,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: 'rgba(15, 82, 87, 0.2)',\n    justifyContent: 'center',\n    paddingHorizontal: 2,\n  },\n  toggleThumb: {\n    width: 26,\n    height: 26,\n    borderRadius: 13,\n    backgroundColor: Colors.white,\n    ...(Platform.OS === 'web' ? {\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\n    } : {\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 4,\n      elevation: 2,\n    }),\n  },\n  severitySection: {\n    marginTop: Spacing.md,\n    paddingTop: Spacing.md,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  severityLabel: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n    marginBottom: Spacing.sm,\n  },\n  severityButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  severityButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    borderWidth: 1,\n    borderColor: 'rgba(15, 82, 87, 0.2)',\n  },\n  severityButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  // Triggers Step\n  triggerSection: {\n    borderRadius: BorderRadius.lg,\n    borderWidth: 1,\n    borderColor: 'rgba(15, 82, 87, 0.1)',\n    padding: Spacing.lg,\n  },\n  triggerHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: Spacing.md,\n  },\n  triggerTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  addTriggerButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    backgroundColor: Colors.primary + '20',\n  },\n  addTriggerText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n    color: Colors.primary,\n  },\n  triggersList: {\n    gap: Spacing.sm,\n  },\n  triggerItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: Spacing.sm,\n    paddingHorizontal: Spacing.md,\n    backgroundColor: 'rgba(15, 82, 87, 0.05)',\n    borderRadius: BorderRadius.sm,\n  },\n  triggerText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    flex: 1,\n  },\n  removeTriggerButton: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: Colors.avoid + '20',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  removeTriggerText: {\n    fontSize: 16,\n    fontFamily: Typography.fontFamily.bold,\n    color: Colors.avoid,\n  },\n  noTriggersText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    paddingVertical: Spacing.lg,\n  },\n  // Preferences Step\n  preferencesSection: {\n    width: '100%',\n    marginBottom: Spacing.xl,\n  },\n  preferencesTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: Spacing.md,\n  },\n  preferencesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: Spacing.sm,\n  },\n  preferenceChip: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.lg,\n    borderWidth: 1,\n    borderColor: 'rgba(15, 82, 87, 0.2)',\n    backgroundColor: 'transparent',\n  },\n  preferenceChipText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  // Complete Step\n  completeEmoji: {\n    fontSize: 60,\n  },\n  nextStepsList: {\n    width: '100%',\n    gap: Spacing.md,\n  },\n  nextStepItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: Spacing.sm,\n  },\n  nextStepIcon: {\n    fontSize: 24,\n    marginRight: Spacing.md,\n  },\n  nextStepText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    flex: 1,\n  },\n  // Complete Screen\n  completeHeader: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacing.xl,\n  },\n  completeIcon: {\n    fontSize: 80,\n    marginBottom: Spacing.lg,\n  },\n  completeTitle: {\n    fontSize: Typography.fontSize.h1,\n    fontFamily: Typography.fontFamily.bold,\n    color: Colors.white,\n    textAlign: 'center',\n    marginBottom: Spacing.md,\n  },\n  completeSubtitle: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    color: Colors.white,\n    textAlign: 'center',\n    opacity: 0.9,\n    lineHeight: 22,\n  },\n  // Empty State\n  emptyState: {\n    alignItems: 'center',\n    paddingVertical: Spacing.xxl,\n  },\n  emptyIcon: {\n    fontSize: 48,\n    marginBottom: Spacing.md,\n  },\n  emptyTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.sm,\n    textAlign: 'center',\n  },\n  emptyDescription: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n});\n","/**\n * @fileoverview LinearGradientWrapper.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React from 'react';\nimport { Platform, View } from 'react-native';\n\n// Simple fallback LinearGradient that uses solid colors\nconst FallbackLinearGradient = ({ colors, style, children, start, end, locations, ...props }: any) => {\n  // Use the first color as a solid background\n  const backgroundColor = colors && colors.length > 0 ? colors[0] : '#000000';\n  \n  return (\n    <View style={[{ backgroundColor }, style]} {...props}>\n      {children}\n    </View>\n  );\n};\n\n// Native LinearGradient\nlet NativeLinearGradient: any = null;\nif (Platform.OS !== 'web') {\n  try {\n    NativeLinearGradient = require('expo-linear-gradient').default;\n  } catch (error) {\n    console.warn('Failed to load native LinearGradient:', error);\n  }\n}\n\n// Export the appropriate component - use fallback for web to avoid CSS issues\nconst LinearGradient = Platform.OS === 'web' ? FallbackLinearGradient : NativeLinearGradient;\n\nexport default LinearGradient;\n"],"names":["OnboardingScreen","navigation","useNavigation","colors","useColorScheme","Colors","dark","light","currentStep","setCurrentStep","useState","conditionToggles","setConditionToggles","knownTriggers","setKnownTriggers","dietaryRestrictions","setDietaryRestrictions","preferredAlternatives","setPreferredAlternatives","isComplete","setIsComplete","scrollViewRef","useRef","fadeAnim","Animated","Value","current","React","initialConditions","map","condition","enabled","severity","lastUpdated","Date","steps","id","title","subtitle","component","_jsx","WelcomeStep","ConditionsStep","onConditionToggle","handleConditionToggle","prev","toggle","_objectSpread","onSeverityChange","handleSeverityChange","TriggersStep","enabledConditions","filter","t","onTriggersChange","PreferencesStep","onDietaryRestrictionsChange","onPreferredAlternativesChange","CompleteStep","completeOnboarding","gutProfile","now","toString","conditions","reduce","acc","preferences","createdAt","updatedAt","console","log","setTimeout","navigate","canProceed","some","currentStepData","View","style","styles","container","backgroundColor","background","children","_jsxs","LinearGradient","primaryGradient","completeHeader","Text","completeIcon","completeTitle","completeSubtitle","progressContainer","surface","progressBar","progressFill","width","concat","length","progressText","color","textSecondary","header","text","content","opacity","ScrollView","ref","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","TouchableOpacity","navButton","skipButton","borderColor","border","onPress","skipOnboarding","Alert","alert","skipButtonText","navButtons","backButton","prevStep","_scrollViewRef$curren2","sequence","timing","toValue","duration","useNativeDriver","start","scrollTo","x","y","animated","backButtonText","nextButton","primary","nextStep","_scrollViewRef$curren","disabled","nextButtonText","white","stepContent","welcomeIcon","welcomeEmoji","stepTitle","stepDescription","featuresList","featureItem","featureIcon","featureText","_ref","conditionInfo","name","description","icon","conditionsList","info","conditionCard","conditionToggle","conditionHeader","conditionIcon","conditionName","conditionDescription","toggleSwitch","toggleThumb","transform","translateX","severitySection","severityLabel","severityButtons","severityButton","severityButtonText","textTransform","_ref2","emptyState","emptyIcon","emptyTitle","emptyDescription","triggersList","triggers","triggerSection","triggerHeader","triggerTitle","replace","toUpperCase","addTriggerButton","prompt","trim","currentTriggers","handleAddTrigger","addTriggerText","trigger","index","triggerItem","triggerText","removeTriggerButton","handleRemoveTrigger","removeTriggerText","noTriggersText","_ref3","toggleArrayItem","array","item","setter","includes","i","preferencesSection","preferencesTitle","preferencesGrid","restriction","preferenceChip","preferenceChipText","alternative","completeEmoji","nextStepsList","nextStepItem","nextStepIcon","nextStepText","StyleSheet","create","flex","paddingHorizontal","Spacing","lg","paddingVertical","md","borderBottomWidth","borderBottomColor","height","borderRadius","marginBottom","xs","fontSize","Typography","caption","fontFamily","medium","textAlign","xl","alignItems","h1","bold","sm","body","regular","lineHeight","paddingBottom","h2","flexDirection","justifyContent","borderTopWidth","borderTopColor","gap","BorderRadius","borderWidth","minWidth","semiBold","marginRight","overflow","padding","h4","bodySmall","Platform","OS","boxShadow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop","paddingTop","avoid","fontStyle","flexWrap","xxl","h3","NativeLinearGradient","require","error","warn","end","locations","props","_objectWithoutProperties","_excluded"],"sourceRoot":""}