{"version":3,"file":"static/js/938.216f8d20.chunk.js","mappings":";0JAUO,MAAMA,EACX,4BAAaC,CAAgBC,GAC3B,MAAMC,EAAiC,CACrCC,KAAM,cACNC,MAAM,iBAADC,OAAmBJ,EAAYK,SAASC,MAC7CC,YAAaC,KAAKC,wBAAwBT,GAC1CU,KAAMV,EACNW,SAAS,kBAADP,OAAoBJ,EAAYY,KAG1C,OAAOJ,KAAKP,aAAaA,EAC3B,CAEA,0BAAaY,CAAcC,GACzB,MAAMb,EAAiC,CACrCC,KAAM,YACNC,MAAM,iBAADC,OAAmBU,EAAST,SAASC,MAC1CC,YAAaC,KAAKO,4BAA4BD,GAC9CJ,KAAMI,EACNH,SAAS,uBAADP,OAAyBU,EAASF,KAG5C,OAAOJ,KAAKP,aAAaA,EAC3B,CAEA,iCAAae,CAAqBC,GAChC,MAAMhB,EAAiC,CACrCC,KAAM,aACNC,MAAO,uBACPI,YAAa,iDACbG,KAAMO,EACNN,SAAU,oBAGZ,OAAOH,KAAKP,aAAaA,EAC3B,CAEA,+BAAaiB,CAAmBC,EAA2BC,GACzD,MAAMC,EAAYb,KAAKc,wBAAwBH,GAE/C,OAAQC,GACN,IAAK,YACH,OAAOZ,KAAKe,iBAAiBF,EAAWF,GAC1C,IAAK,UACH,OAAOX,KAAKgB,eAAeH,EAAWF,GACxC,IAAK,WACH,OAAOX,KAAKiB,gBAAgBJ,EAAWF,GACzC,QACE,MAAM,IAAIO,MAAM,qCAEtB,CAEA,yBAAqBzB,CAAakB,GAChC,IACE,MAAMQ,EAAe,CACnBC,QAAQ,GAADxB,OAAKe,EAAQhB,MAAK,QAAAC,OAAOe,EAAQZ,YAAW,QAAAH,OAAOe,EAAQR,UAClEkB,IAAKV,EAAQR,SACbR,MAAOgB,EAAQhB,OAGX2B,QAAeC,EAAAA,EAAMC,MAAML,GAEjC,GAAIG,EAAOG,SAAWF,EAAAA,EAAMG,aAE1B,OADAC,QAAQC,IAAI,+BACL,CAAEC,SAAS,EAAMJ,OAAQH,EAAOG,QAClC,GAAIH,EAAOG,SAAWF,EAAAA,EAAMO,gBAEjC,OADAH,QAAQC,IAAI,mBACL,CAAEC,SAAS,EAAOJ,OAAQH,EAAOG,OAE5C,CAAE,MAAOM,GAGP,OAFAJ,QAAQI,MAAM,yBAA0BA,GACxCC,EAAAA,EAAMC,MAAM,QAAS,8CACd,CAAEJ,SAAS,EAAOE,QAC3B,CACF,CAEA,8BAAe9B,CAAwBT,GACrC,MAAM,SAAE0C,GAAa1C,EACf2C,EAAcnC,KAAKoC,eAAeF,EAASG,eAEjD,IAAItC,EAAW,GAAAH,OAAMuC,EAAW,KAAAvC,OAAIsC,EAASG,cAAcC,cAAa,MAkBxE,OAjBAvC,GAAW,WAAAH,OAAesC,EAASK,WAAU,QAEzCL,EAASM,mBAAmBC,OAAS,IACvC1C,GAAW,sCACXmC,EAASM,mBAAmBE,QAAQC,IAClC5C,GAAW,UAAAH,OAAS+C,EAAWA,WAAU,MAAA/C,OAAK+C,EAAWC,SAAQ,SAEnE7C,GAAe,MAGbmC,EAASW,iBAAiBJ,OAAS,IACrC1C,GAAW,8BACXmC,EAASW,iBAAiBC,MAAM,EAAG,GAAGJ,QAAQK,IAC5ChD,GAAW,UAAAH,OAASmD,EAAW,SAI5BhD,CACT,CAEA,kCAAeQ,CAA4BD,GACzC,MAAM,SAAET,GAAaS,EACrB,IAAIP,EAAW,qCAsBf,OArBAA,GAAW,QAAAH,OAAYU,EAAS0C,WAAU,YAC1CjD,GAAW,cAAAH,OAAkBI,KAAKiD,WAAW3C,EAAS4C,UAAS,MAC/DnD,GAAW,WAAAH,OAAeC,EAAS0C,WAAU,QAEzC1C,EAASsD,cACXpD,GAAW,iBAAAH,OAAqBC,EAASsD,YAAW,OAElDtD,EAASuD,iBACXrD,GAAW,oBAAAH,OAAwBC,EAASuD,eAAc,OAExDvD,EAASwD,aACXtD,GAAW,sBAETF,EAASyD,cACXvD,GAAW,uBAGTO,EAASiD,QACXxD,GAAW,YAAAH,OAAgBU,EAASiD,QAG/BxD,CACT,CAEA,8BAAee,CAAwBH,GACrC,MAAM6C,EAAW,iDAEjB,OAAQ7C,EAAQjB,MACd,IAAK,cACH,MAAM,gBAANE,OAAuBe,EAAQT,KAAKL,SAASC,KAAI,mBAAAF,OAAkBe,EAAQZ,YAAW,QAAAH,OAAO4D,GAC/F,IAAK,YACH,MAAM,SAAN5D,OAAgBe,EAAQT,KAAKL,SAASC,KAAI,uBAAAF,OAAsBe,EAAQZ,YAAW,QAAAH,OAAO4D,GAC5F,IAAK,aACH,MAAM,qCAAN5D,OAA4Ce,EAAQZ,YAAW,QAAAH,OAAO4D,GACxE,QACE,MAAM,GAAN5D,OAAUe,EAAQhB,MAAK,QAAAC,OAAOe,EAAQZ,YAAW,QAAAH,OAAO4D,GAE9D,CAEA,6BAAqBzC,CAAiB0C,EAAc9C,GAGlD,MAAMQ,EAAe,CACnBC,QAASqC,EACTpC,IAAKV,EAAQR,UAGf,UACQoB,EAAAA,EAAMC,MAAML,EACpB,CAAE,MAAOY,GACPJ,QAAQI,MAAM,8BAA+BA,GAC7CC,EAAAA,EAAMC,MAAM,QAAS,kDACvB,CACF,CAEA,2BAAqBjB,CAAeyC,EAAc9C,GAChD,MAAM+C,EAAU,yCAAA9D,OAA4C+D,mBAAmBF,IAE/E,UAC0BG,EAAAA,EAAQC,WAAWH,SAEnCE,EAAAA,EAAQE,QAAQJ,SAGhBnC,EAAAA,EAAMC,MAAM,CAChBJ,QAASqC,EACTpC,IAAKV,EAAQR,UAGnB,CAAE,MAAO4B,GACPJ,QAAQI,MAAM,4BAA6BA,GAC3CC,EAAAA,EAAMC,MAAM,QAAS,gDACvB,CACF,CAEA,4BAAqBhB,CAAgBwC,EAAc9C,GACjD,MAAMoD,EAAW,gDAAAnE,OAAmD+D,mBAAmBhD,EAAQR,UAAY,IAAG,WAAAP,OAAU+D,mBAAmBF,IAE3I,UAC0BG,EAAAA,EAAQC,WAAWE,SAEnCH,EAAAA,EAAQE,QAAQC,SAGhBxC,EAAAA,EAAMC,MAAM,CAChBJ,QAASqC,EACTpC,IAAKV,EAAQR,UAGnB,CAAE,MAAO4B,GACPJ,QAAQI,MAAM,6BAA8BA,GAC5CC,EAAAA,EAAMC,MAAM,QAAS,iDACvB,CACF,CAEA,qBAAeG,CAAed,GAC5B,OAAQA,GACN,IAAK,OAAQ,MAAO,SACpB,IAAK,UAAW,MAAO,eACvB,IAAK,QAAS,MAAO,SACrB,QAAS,MAAO,eAEpB,CAEA,iBAAe2B,CAAWe,GACxB,IAAKA,EAAM,MAAO,QAElB,MACMC,GADM,IAAIC,MACKC,UAAYH,EAAKG,UAChCC,EAAWC,KAAKC,MAAML,EAAQ,OAEpC,OAAiB,IAAbG,EAAuB,QACV,IAAbA,EAAuB,YACvBA,EAAW,EAAS,GAANxE,OAAUwE,EAAQ,aAChCA,EAAW,GAAU,GAANxE,OAAUyE,KAAKC,MAAMF,EAAW,GAAE,cAC/C,GAANxE,OAAUyE,KAAKC,MAAMF,EAAW,IAAG,cACrC,CAEA,6BAAaG,CAAiB5D,GAC5BqB,EAAAA,EAAMC,MACJ,gBACA,+CACA,CACE,CAAEwB,KAAM,SAAUe,MAAO,UACzB,CAAEf,KAAM,gBAAiBgB,QAASA,IAAMzE,KAAKP,aAAakB,IAC1D,CAAE8C,KAAM,UAAWgB,QAASA,IAAMzE,KAAKU,mBAAmBC,EAAS,YACnE,CAAE8C,KAAM,WAAYgB,QAASA,IAAMzE,KAAKU,mBAAmBC,EAAS,aACpE,CAAE8C,KAAM,YAAagB,QAASA,IAAMzE,KAAKU,mBAAmBC,EAAS,eAG3E,E,8UCzOF,MAAM+D,EAAuC,CAC3CC,IAAK,WACLC,KAAM,WACNC,OAAQ,WACRC,MAAO,YAGT,SAASC,EACPC,EACAC,EACAC,GAEA,OAAQA,GACN,IAAK,MACH,OAAOD,EACT,IAAK,UACH,OAAOZ,KAAKc,IAAIF,EAASD,GAE3B,QACE,OAAOC,EAAUD,EAEvB,CAEO,MAAMI,EAAeC,EAAAA,WAG1B,CAAAC,EAAuCC,KAAQ,IAA9C,MAAEf,EAAQ,CAAC,EAAC,KAAEU,EAAI,MAAEM,GAAgBF,EAANG,GAAAC,EAAAA,EAAAA,GAAAJ,EAAAK,GAC/B,MAAMC,GAASC,EAAAA,EAAAA,MAETC,EAAcT,EAAAA,QAAc,IACnB,MAATG,EACKd,EAGFqB,MAAMC,QAAQR,GACjBA,EAAMS,OAAmB,CAACC,EAAKC,KAC7BD,EAAIC,GAAQ,WACLD,GACN,CAAC,GAEHV,EACJ,CAACA,IAEEY,EAAef,EAAAA,QAAc,KACjC,MAAMgB,EAAYC,EAAAA,EAAWC,QAAQ/B,GAErC,GAAa,WAATU,EAAmB,CACrB,MAAM,OACJsB,EAAS,EAAC,eACVC,EAAiBD,EAAM,iBACvBE,EAAmBF,EAAM,UACzBG,EAAYF,EAAc,YAC1BG,EAAcF,EAAgB,aAC9BG,EAAeJ,EAAc,WAC7BK,EAAaJ,GACXL,EAEEU,EAAc,CAClBJ,UAAW5B,EAAaa,EAAOjB,IAAKgC,EAAWb,EAAYnB,KAC3DiC,YAAa7B,EAAaa,EAAOd,MAAO8B,EAAad,EAAYhB,OACjE+B,aAAc9B,EACZa,EAAOf,OACPgC,EACAf,EAAYjB,QAEdiC,WAAY/B,EAAaa,EAAOhB,KAAMkC,EAAYhB,EAAYlB,OAGhE,MAAO,CAACJ,EAAOuC,EACjB,CAAO,CACL,MAAM,QACJC,EAAU,EAAC,gBACXC,EAAkBD,EAAO,kBACzBE,EAAoBF,EAAO,WAC3BG,EAAaF,EAAe,aAC5BG,EAAeF,EAAiB,cAChCG,EAAgBJ,EAAe,YAC/BK,EAAcJ,GACZb,EAEEkB,EAAe,CACnBJ,WAAYpC,EAAaa,EAAOjB,IAAKwC,EAAYrB,EAAYnB,KAC7DyC,aAAcrC,EACZa,EAAOd,MACPsC,EACAtB,EAAYhB,OAEduC,cAAetC,EACba,EAAOf,OACPwC,EACAvB,EAAYjB,QAEdyC,YAAavC,EAAaa,EAAOhB,KAAM0C,EAAaxB,EAAYlB,OAGlE,MAAO,CAACJ,EAAO+C,EACjB,GACC,CACDzB,EAAYjB,OACZiB,EAAYlB,KACZkB,EAAYhB,MACZgB,EAAYnB,IACZiB,EAAOf,OACPe,EAAOhB,KACPgB,EAAOd,MACPc,EAAOjB,IACPO,EACAV,IAGF,OAAOa,EAAAA,cAACmC,EAAAA,EAAIC,EAAA,CAACjD,MAAO4B,GAAkBX,EAAI,CAAEF,IAAKA,M,+JClGnD,IAAImC,EAA4B,KAChC,GAAoB,QAAhBC,EAAAA,EAASC,GACX,IACEF,EAAuBG,EAAAA,MAAAA,CACzB,CAAE,MAAO9F,GACPJ,QAAQmG,KAAK,wCAAyC/F,EACxD,CAIF,MAEA,EAFuC,QAAhB4F,EAAAA,EAASC,GAtBDtC,IAAwE,IAAvE,OAAEyC,EAAM,MAAEvD,EAAK,SAAEwD,EAAQ,MAAEC,EAAK,IAAEC,EAAG,UAAEC,GAA0B7C,EAAZ8C,GAAK1C,EAAAA,EAAAA,GAAAJ,EAAAK,GAExF,MAAM0C,EAAkBN,GAAUA,EAAOtF,OAAS,EAAIsF,EAAO,GAAK,UAElE,OACEO,EAAAA,EAAAA,KAACd,EAAAA,GAAIe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC/D,MAAO,CAAC,CAAE6D,mBAAmB7D,IAAY4D,GAAK,IAAAJ,SACjDA,MAgBiEN,C,+OCIxE,MAAMc,EAA+C,CACnD,EAAK,CACHpI,GAAI,IACJP,SAAU,CACRO,GAAI,IACJN,KAAM,eACN2I,MAAO,UACPC,SAAU,QACVC,QAAS,gBACTC,YAAa,CAAC,OAAQ,iBACtBC,UAAW,CAAC,QACZC,UAAW,GACXzF,YAAY,EACZC,aAAa,EACbF,eAAgB,MAChBb,WAAY,iBAEdL,SAAU,CACRG,cAAe,OACfG,mBAAoB,GACpBuG,kBAAmB,GACnBlG,iBAAkB,CAAC,iBAAkB,iBACrCmG,YAAa,kIACbzG,WAAY,qBACZ0G,YAAa,IAAI/E,KAAKA,KAAKgF,MAAQ,OAErCC,UAAW,IAAIjF,KAAKA,KAAKgF,MAAQ,MACjCE,aAAc,YAEhB,EAAK,CACHhJ,GAAI,IACJP,SAAU,CACRO,GAAI,IACJN,KAAM,cACN2I,MAAO,SACPC,SAAU,SACVC,QAAS,gBACTC,YAAa,CAAC,cAAe,QAAS,QAAS,QAC/CC,UAAW,CAAC,QAAS,UACrBC,UAAW,GACXzF,YAAY,EACZC,aAAa,EACbF,eAAgB,MAChBb,WAAY,oBAEdL,SAAU,CACRG,cAAe,UACfG,mBAAoB,CAClB,CACEG,WAAY,QACZ0G,OAAQ,iDACRzG,SAAU,WACV0G,UAAW,UAEb,CACE3G,WAAY,WACZ0G,OAAQ,yCACRzG,SAAU,OACV0G,UAAW,eAGfP,kBAAmB,CACjB,CACEpG,WAAY,QACZC,SAAU,WACV0G,UAAW,WAGfzG,iBAAkB,CAAC,kBAAmB,oBAAqB,cAC3DmG,YAAa,8GACbzG,WAAY,yBACZ0G,YAAa,IAAI/E,KAAKA,KAAKgF,MAAQ,QAErCC,UAAW,IAAIjF,KAAKA,KAAKgF,MAAQ,QAEnC,EAAK,CACH9I,GAAI,IACJP,SAAU,CACRO,GAAI,IACJN,KAAM,sBACN2I,MAAO,QACPC,SAAU,QACVC,QAAS,gBACTC,YAAa,CAAC,OAAQ,OAAQ,UAAW,WACzCC,UAAW,CAAC,QACZC,UAAW,CAAC,WACZzF,YAAY,EACZC,aAAa,EACbF,eAAgB,OAChBb,WAAY,iBAEdL,SAAU,CACRG,cAAe,QACfG,mBAAoB,CAClB,CACEG,WAAY,YACZ0G,OAAQ,gDACRzG,SAAU,SACV0G,UAAW,aAEb,CACE3G,WAAY,WACZ0G,OAAQ,2CACRzG,SAAU,WACV0G,UAAW,cAGfP,kBAAmB,CACjB,CACEpG,WAAY,YACZC,SAAU,SACV0G,UAAW,cAGfzG,iBAAkB,CAAC,mBAAoB,iBAAkB,kBACzDmG,YAAa,6IACbzG,WAAY,iCACZ0G,YAAa,IAAI/E,KAAKA,KAAKgF,MAAQ,SAErCC,UAAW,IAAIjF,KAAKA,KAAKgF,MAAQ,UAIxBK,EAA6BA,KACxC,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,GAAQC,EAAAA,EAAAA,MAERC,EAAyB,UADXC,EAAAA,EAAAA,KAEd9B,EAAS6B,EAASE,EAAAA,EAAOC,KAAOD,EAAAA,EAAOE,OAEvC,OAAEC,GAAWP,EAAMQ,QAClBC,EAAUC,IAAeC,EAAAA,EAAAA,UAA6B,OACtDjB,EAAckB,IAAmBD,EAAAA,EAAAA,UAA2C,MAE7EE,GAAWC,EAAAA,EAAAA,QAAO,IAAIC,EAAAA,EAASC,MAAM,IAAIzF,QACzC0F,GAAYH,EAAAA,EAAAA,QAAO,IAAIC,EAAAA,EAASC,MAAM,KAAKzF,SAEjD2F,EAAAA,EAAAA,WAAU,KAEaC,MACnB,MAAM3K,EAAOsI,EAAayB,GACtB/J,IACFkK,EAAYlK,GACZoK,EAAgBpK,EAAKkJ,cAAgB,MAGrCqB,EAAAA,EAASK,SAAS,CAChBL,EAAAA,EAASM,OAAOR,EAAU,CACxBS,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAEnBT,EAAAA,EAASM,OAAOJ,EAAW,CACzBK,QAAS,EACTC,SAAU,IACVC,iBAAiB,MAElBjD,UAIP4C,IACC,CAACZ,EAAQM,EAAUI,IAEtB,MA+BMQ,EAAoBvI,IACxB,OAAQA,GACN,IAAK,OACH,OAAOkH,EAAAA,EAAOsB,KAChB,IAAK,WACH,OAAOtB,EAAAA,EAAOuB,QAChB,IAAK,SACH,OAAOvB,EAAAA,EAAOwB,QAIdC,EAAmB3I,IACvB,OAAQA,GACN,IAAK,OACH,MAAO,eACT,IAAK,WACH,MAAO,eACT,IAAK,SACH,MAAO,iBAkDP4I,EAAkBC,IACtBnB,EAAgBmB,GAEhBzJ,EAAAA,EAAMC,MACJ,aACA,qDACA,CAAC,CAAEwB,KAAM,SAIb,IAAK0G,EACH,OACE7B,EAAAA,EAAAA,KAAClD,EAAAA,EAAY,CAACZ,MAAO,CAACkH,EAAOC,UAAW,CAAEtD,gBAAiBN,EAAO6D,aAAc5D,UAC9EM,EAAAA,EAAAA,KAACd,EAAAA,EAAI,CAAChD,MAAOkH,EAAOG,iBAAiB7D,UACnCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOK,YAAa,CAAEC,MAAOjE,EAAOtE,OAAQuE,SAAC,mBAMnE,MAAMiE,EAvHkBC,MACtB,IAAK/B,EAAU,OAAO,KAEtB,OAAQA,EAASjI,SAASG,eACxB,IAAK,OACH,MAAO,CACL2J,MAAOlC,EAAAA,EAAOsB,KACde,KAAM,SACN9D,gBAAgB,GAADzI,OAAKkK,EAAAA,EAAOsB,KAAI,MAC/BzL,MAAO,cACPyM,SAAU,CAACtC,EAAAA,EAAOsB,KAAK,GAADxL,OAAKkK,EAAAA,EAAOsB,KAAI,QAE1C,IAAK,UACH,MAAO,CACLY,MAAOlC,EAAAA,EAAOuB,QACdc,KAAM,eACN9D,gBAAgB,GAADzI,OAAKkK,EAAAA,EAAOuB,QAAO,MAClC1L,MAAO,cACPyM,SAAU,CAACtC,EAAAA,EAAOuB,QAAQ,GAADzL,OAAKkK,EAAAA,EAAOuB,QAAO,QAEhD,IAAK,QACH,MAAO,CACLW,MAAOlC,EAAAA,EAAOwB,MACda,KAAM,SACN9D,gBAAgB,GAADzI,OAAKkK,EAAAA,EAAOwB,MAAK,MAChC3L,MAAO,QACPyM,SAAU,CAACtC,EAAAA,EAAOwB,MAAM,GAAD1L,OAAKkK,EAAAA,EAAOwB,MAAK,UA6F3BY,GACrB,IAAKD,EAAc,OAAO,KAE1B,MAAM,SAAEpM,EAAQ,SAAEqC,GAAaiI,EAE/B,OACEkC,EAAAA,EAAAA,MAACjH,EAAAA,EAAY,CAACZ,MAAO,CAACkH,EAAOC,UAAW,CAAEtD,gBAAiBN,EAAO6D,aAAc5D,SAAA,EAC9EM,EAAAA,EAAAA,KAACgE,EAAAA,EAAS,CAACC,SAAU3C,EAAS,gBAAkB,kBAGhDyC,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOc,OAAOxE,SAAA,EACzBM,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,CACfjI,MAAOkH,EAAOgB,WACdjI,QAASA,IAAM+E,EAAWmD,SAAS3E,UAEnCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOkB,eAAgB,CAAEZ,MAAOjE,EAAO8E,SAAU7E,SAAC,mBAElEqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOoB,cAAc9E,SAAA,EAChCM,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,CAACjI,MAAOkH,EAAOqB,aAActI,QAzDzBuI,KACtB7C,GAELnI,EAAAA,EAAMC,MACJ,oBAAoB,QAADrC,OACXuK,EAAStK,SAASC,KAAI,8BAC9B,CACE,CAAE2D,KAAM,SAAUe,MAAO,UACzB,CACEf,KAAM,MACNgB,QAASA,KAEPzC,EAAAA,EAAMC,MAAM,UAAW,6BA6CmD+F,UAC1EM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOuB,iBAAkB,CAAEjB,MAAOjE,EAAO8E,SAAU7E,SAAC,cAEpEM,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,CAACjI,MAAOkH,EAAOqB,aAActI,QAvEvByI,UACxB/C,SACC7K,EAAAA,EAAeiF,iBAAiB,CACpC7E,KAAM,cACNC,MAAM,iBAADC,OAAmBuK,EAAStK,SAASC,MAC1CC,YAAY,gBAADH,OAAkBuK,EAASjI,SAASG,cAAcC,eAC7DpC,KAAMiK,EACNhK,SAAS,kBAADP,OAAoBqK,MAgEsDjC,UAC5EM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOuB,iBAAkB,CAAEjB,MAAOjE,EAAO8E,SAAU7E,SAAC,mBAKxEM,EAAAA,EAAAA,KAAC6E,EAAAA,EAAU,CACT3I,MAAOkH,EAAO0B,WACdC,8BAA8B,EAC9BC,sBAAuB5B,EAAO6B,cAAcvF,UAE5CqE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASjD,KAAI,CACZhD,MAAO,CACLkH,EAAO/K,QACP,CACE6M,QAASjD,EACTkD,UAAW,CAAC,CAAEC,WAAY/C,MAE5B3C,SAAA,EAGFM,EAAAA,EAAAA,KAACqF,EAAAA,EAAc,CACb5F,OAAQkE,EAAaG,SACrB5H,MAAOkH,EAAOkC,aAAa5F,UAE3BqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOmC,oBAAoB7F,SAAA,EACtCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOoC,WAAW9F,SAAEiE,EAAaE,QAC9CE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOqC,oBAAoB/F,SAAA,EACtCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOsC,YAAYhG,SAAEiE,EAAatM,SAC/C2I,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOuC,SAASjG,SAAEnI,EAASC,OACvCD,EAAS4I,QACRH,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOwC,UAAUlG,SAAEnI,EAAS4I,iBAOjD4D,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAC,cAG5DM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO1C,YAAa,CAAEgD,MAAOjE,EAAOuG,gBAAiBtG,SAChE9F,EAAS8G,iBAKb9G,EAASM,mBAAmBC,OAAS,IACpC4J,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEqE,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAA,CAAC,wBACpC9F,EAASM,mBAAmBC,OAAO,OAE1DP,EAASM,mBAAmB+L,IAAI,CAAC5L,EAAY6L,KAC5CnC,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAahD,MAAOkH,EAAO+C,eAAezG,SAAA,EAC7CqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOgD,iBAAiB1G,SAAA,EACnCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOiD,aAAa3G,SAC9BuD,EAAgB5I,EAAWC,aAE9B0F,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOkD,eAAgB,CAAE5C,MAAOjE,EAAOtE,OAAQuE,SAC1DrF,EAAWA,cAEd2F,EAAAA,EAAAA,KAACd,EAAAA,EAAI,CAAChD,MAAO,CACXkH,EAAOmD,cACP,CAAExG,gBAAgB,GAADzI,OAAKuL,EAAiBxI,EAAWC,UAAS,QAC3DoF,UACAM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CACXkH,EAAOoD,aACP,CAAE9C,MAAOb,EAAiBxI,EAAWC,YACrCoF,SACCrF,EAAWC,iBAIlB0F,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOqD,iBAAkB,CAAE/C,MAAOjE,EAAOuG,gBAAiBtG,SACrErF,EAAW0G,UAEdgD,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOsD,cAAe,CAAEhD,MAAOjE,EAAOkH,eAAgBjH,SAAA,CAAC,YACzDrF,EAAW2G,eAxBdkF,OAgChBtM,EAASW,iBAAiBJ,OAAS,IAClC4J,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAC,uBAG5DM,EAAAA,EAAAA,KAACd,EAAAA,EAAI,CAAChD,MAAOkH,EAAOwD,iBAAiBlH,SAClC9F,EAASW,iBAAiB0L,IAAI,CAACxL,EAAayL,KAC3CnC,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAahD,MAAO,CAACkH,EAAOyD,gBAAiB,CAAE9G,gBAAiBN,EAAO6D,aAAc5D,SAAA,EACxFM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAO0D,gBAAgBpH,SAAC,YACrCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2D,gBAAiB,CAAErD,MAAOjE,EAAOtE,OAAQuE,SAC3DjF,MAHMyL,UAYnBnC,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAC,iBAG5DqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAO4D,oBAAoBtH,SAAA,EACtCqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAO6D,eAAevH,SAAA,EACjCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO8D,eAAgB,CAAExD,MAAOjE,EAAOtE,OAAQuE,SAC1D9F,EAASK,cAEZ8J,EAAAA,EAAAA,MAACP,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO+D,sBAAuB,CAAEzD,MAAOjE,EAAOuG,gBAAiBtG,SAAA,CAAC,iBAC7D9F,EAAS+G,YAAYyG,4BAGxCpH,EAAAA,EAAAA,KAACd,EAAAA,EAAI,CAAChD,MAAOkH,EAAOiE,eAAe3H,UACjCM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAOkH,EAAOkE,mBAAmB5H,SAAC,0BAM9CqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAC,kBAG5DqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOmE,YAAY7H,SAAA,EAC9BqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOoE,WAAW9H,SAAA,EAC7BM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOqE,YAAa,CAAE/D,MAAOjE,EAAOuG,gBAAiBtG,SAAC,cAGpEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOsE,YAAa,CAAEhE,MAAOjE,EAAOtE,OAAQuE,SACvDnI,EAAS6I,UAAY,eAGzB7I,EAASuD,iBACRiJ,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOoE,WAAW9H,SAAA,EAC7BM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOqE,YAAa,CAAE/D,MAAOjE,EAAOuG,gBAAiBtG,SAAC,qBAGpEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOsE,YAAa,CAAEhE,MAAOjE,EAAOtE,OAAQuE,SACvDnI,EAASuD,qBAIhBiJ,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOoE,WAAW9H,SAAA,EAC7BM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOqE,YAAa,CAAE/D,MAAOjE,EAAOuG,gBAAiBtG,SAAC,aAGpEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOsE,YAAa,CAAEhE,MAAOjE,EAAOtE,OAAQuE,UA/O/ChE,EAgPQmG,EAAShB,UA/OjCnF,EAAK0L,mBAAmB,QAAS,CACtCO,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,kBA4OCzQ,EAAS8I,UACR0D,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAOoE,WAAW9H,SAAA,EAC7BM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOqE,YAAa,CAAE/D,MAAOjE,EAAOuG,gBAAiBtG,SAAC,aAGpEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAOsE,YAAa,CAAEhE,MAAOjE,EAAOtE,OAAQuE,SACvDnI,EAAS8I,oBAQpB0D,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAO,CAACkH,EAAOyC,QAAS,CAAE9F,gBAAiBN,EAAOqG,UAAWpG,SAAA,EACjEM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CAACkH,EAAO2C,aAAc,CAAErC,MAAOjE,EAAOtE,OAAQuE,SAAC,gCAG5DqE,EAAAA,EAAAA,MAAC7E,EAAAA,EAAI,CAAChD,MAAOkH,EAAO6E,gBAAgBvI,SAAA,EAClCM,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,CACfjI,MAAO,CACLkH,EAAO8E,eACP,CACEnI,gBAAkC,aAAjBe,EAA8BU,EAAAA,EAAOsB,KAAOrD,EAAO6D,WACpE6E,YAAa3G,EAAAA,EAAOsB,OAGxB3G,QAASA,IAAM+G,EAAe,YAAYxD,UAE1CM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CACXkH,EAAOgF,mBACP,CAAE1E,MAAwB,aAAjB5C,EAA8BU,EAAAA,EAAO6G,MAAQ7G,EAAAA,EAAOsB,OAC7DpD,SAAC,uBAILM,EAAAA,EAAAA,KAACmE,EAAAA,EAAgB,CACfjI,MAAO,CACLkH,EAAO8E,eACP,CACEnI,gBAAkC,eAAjBe,EAAgCU,EAAAA,EAAOwB,MAAQvD,EAAO6D,WACvE6E,YAAa3G,EAAAA,EAAOwB,QAGxB7G,QAASA,IAAM+G,EAAe,cAAcxD,UAE5CM,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CAACtH,MAAO,CACXkH,EAAOgF,mBACP,CAAE1E,MAAwB,eAAjB5C,EAAgCU,EAAAA,EAAO6G,MAAQ7G,EAAAA,EAAOwB,QAC/DtD,SAAC,sCApSQhE,OAgTrB0H,EAASpF,EAAAA,EAAWsK,OAAO,CAC/BjF,UAAW,CACTkF,KAAM,GAERhF,iBAAkB,CAChBgF,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAEdhF,YAAa,CACXiF,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWC,SAEpC5E,OAAQ,CACN6E,cAAe,MACfP,eAAgB,gBAChBC,WAAY,SACZ7J,kBAAmBoK,EAAAA,GAAQC,GAC3BtK,gBAAiBqK,EAAAA,GAAQE,IAE3B9E,WAAY,CACV1F,QAASsK,EAAAA,GAAQG,IAEnB7E,eAAgB,CACdoE,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,UAEpC5E,cAAe,CACbuE,cAAe,MACfM,IAAKL,EAAAA,GAAQE,IAEfzE,aAAc,CACZ/F,QAASsK,EAAAA,GAAQG,IAEnBxE,iBAAkB,CAChB+D,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,UAEpCtE,WAAY,CACVyD,KAAM,GAERtD,cAAe,CACblG,cAAeiK,EAAAA,GAAQM,KAEzBjR,QAAS,CACPkQ,KAAM,GAERjD,aAAc,CACZlH,iBAAkB4K,EAAAA,GAAQC,GAC1B1K,aAAcyK,EAAAA,GAAQE,GACtBK,aAAcC,EAAAA,GAAaP,GAC3BvK,QAASsK,EAAAA,GAAQC,IAEnB1D,oBAAqB,CACnBwD,cAAe,MACfN,WAAY,UAEdjD,WAAY,CACVkD,SAAU,GACVpK,YAAa0K,EAAAA,GAAQE,IAEvBzD,oBAAqB,CACnB8C,KAAM,GAER7C,YAAa,CACXgD,SAAUC,EAAAA,EAAWD,SAASe,GAC9BZ,WAAYF,EAAAA,EAAWE,WAAWa,KAClChG,MAAOlC,EAAAA,EAAO6G,MACd9J,aAAcyK,EAAAA,GAAQG,IAExBxD,SAAU,CACR+C,SAAUC,EAAAA,EAAWD,SAASiB,GAC9Bd,WAAYF,EAAAA,EAAWE,WAAWa,KAClChG,MAAOlC,EAAAA,EAAO6G,MACd9J,aAAc,GAEhBqH,UAAW,CACT8C,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWC,QAClCpF,MAAOlC,EAAAA,EAAO6G,MACdnD,QAAS,IAEX0E,oBAAqB,CACnBnB,WAAY,UAEdoB,gBAAiB,CACfnB,SAAUC,EAAAA,EAAWD,SAASiB,GAC9Bd,WAAYF,EAAAA,EAAWE,WAAWa,KAClChG,MAAOlC,EAAAA,EAAO6G,OAEhByB,gBAAiB,CACfpB,SAAUC,EAAAA,EAAWD,SAASqB,QAC9BlB,WAAYF,EAAAA,EAAWE,WAAWC,QAClCpF,MAAOlC,EAAAA,EAAO6G,MACdnD,QAAS,IAEXW,QAAS,CACPzH,iBAAkB4K,EAAAA,GAAQC,GAC1B1K,aAAcyK,EAAAA,GAAQE,GACtBK,aAAcC,EAAAA,GAAaN,GAC3BxK,QAASsK,EAAAA,GAAQC,IAEnBlD,aAAc,CACZ2C,SAAUC,EAAAA,EAAWD,SAASe,GAC9BZ,WAAYF,EAAAA,EAAWE,WAAWa,KAClCnL,aAAcyK,EAAAA,GAAQE,IAExBxI,YAAa,CACXgI,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWC,QAClCkB,WAAYrB,EAAAA,EAAWqB,WAAWpB,MAEpCzC,eAAgB,CACdpG,gBAAiB,mBACjBwJ,aAAcC,EAAAA,GAAaS,GAC3BvL,QAASsK,EAAAA,GAAQE,GACjB3K,aAAcyK,EAAAA,GAAQiB,IAExB7D,iBAAkB,CAChB2C,cAAe,MACfN,WAAY,SACZlK,aAAcyK,EAAAA,GAAQG,IAExB9C,aAAc,CACZqC,SAAU,GACVpK,YAAa0K,EAAAA,GAAQiB,IAEvB3D,eAAgB,CACdoC,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,SAClCb,KAAM,EACNjK,YAAa0K,EAAAA,GAAQiB,IAEvB1D,cAAe,CACb3H,kBAAmBoK,EAAAA,GAAQiB,GAC3BtL,gBAAiB,EACjB4K,aAAcC,EAAAA,GAAaS,IAE7BzD,aAAc,CACZkC,SAAUC,EAAAA,EAAWD,SAASqB,QAC9BlB,WAAYF,EAAAA,EAAWE,WAAWO,SAClCc,cAAe,cAEjBzD,iBAAkB,CAChBiC,SAAUC,EAAAA,EAAWD,SAASyB,UAC9BtB,WAAYF,EAAAA,EAAWE,WAAWC,QAClCvK,aAAc,GAEhBmI,cAAe,CACbgC,SAAUC,EAAAA,EAAWD,SAASqB,QAC9BlB,WAAYF,EAAAA,EAAWE,WAAWC,QAClCsB,UAAW,UAEbxD,iBAAkB,CAChBmC,cAAe,MACfsB,SAAU,OACVhB,IAAKL,EAAAA,GAAQiB,IAEfpD,gBAAiB,CACfkC,cAAe,MACfN,WAAY,SACZ7J,kBAAmBoK,EAAAA,GAAQE,GAC3BvK,gBAAiBqK,EAAAA,GAAQiB,GACzBV,aAAcC,EAAAA,GAAaP,GAC3BV,KAAM,EACN+B,SAAU,OAEZxD,gBAAiB,CACf4B,SAAU,GACVpK,YAAa0K,EAAAA,GAAQiB,IAEvBlD,gBAAiB,CACf2B,SAAUC,EAAAA,EAAWD,SAASyB,UAC9BtB,WAAYF,EAAAA,EAAWE,WAAWC,QAClCP,KAAM,GAERhB,YAAa,CACX8B,IAAKL,EAAAA,GAAQE,IAEf1B,WAAY,CACVuB,cAAe,MACfP,eAAgB,gBAChBC,WAAY,UAEdhB,YAAa,CACXiB,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWC,SAEpCpB,YAAa,CACXgB,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,SAClCmB,UAAW,QACXhC,KAAM,EACN/J,WAAYwK,EAAAA,GAAQE,IAEtBjB,gBAAiB,CACfc,cAAe,MACfM,IAAKL,EAAAA,GAAQE,IAEfhB,eAAgB,CACdK,KAAM,EACN5J,gBAAiBqK,EAAAA,GAAQE,GACzBtK,kBAAmBoK,EAAAA,GAAQC,GAC3BM,aAAcC,EAAAA,GAAaN,GAC3BsB,YAAa,EACb/B,WAAY,UAEdL,mBAAoB,CAClBM,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,UAEpCpC,oBAAqB,CACnB+B,cAAe,MACfN,WAAY,SACZD,eAAgB,iBAElBvB,eAAgB,CACdsB,KAAM,GAERrB,eAAgB,CACdwB,SAAUC,EAAAA,EAAWD,SAASE,KAC9BC,WAAYF,EAAAA,EAAWE,WAAWO,SAClC7K,aAAc,GAEhB4I,sBAAuB,CACrBuB,SAAUC,EAAAA,EAAWD,SAASqB,QAC9BlB,WAAYF,EAAAA,EAAWE,WAAWC,SAEpCzB,eAAgB,CACd7I,WAAYwK,EAAAA,GAAQE,IAEtB5B,mBAAoB,CAClBoB,SAAU,K","sources":["utils/sharing.ts","../node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx","components/LinearGradientWrapper.tsx","screens/ScanDetailScreen.tsx"],"sourcesContent":["/**\n * @fileoverview sharing.ts\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport { Share, Alert, Linking } from 'react-native';\nimport { ShareableContent, ScanHistory, SafeFood } from '../types';\n\nexport class SharingService {\n  static async shareScanResult(scanHistory: ScanHistory) {\n    const shareContent: ShareableContent = {\n      type: 'scan_result',\n      title: `GutSafe Scan: ${scanHistory.foodItem.name}`,\n      description: this.generateScanDescription(scanHistory),\n      data: scanHistory,\n      shareUrl: `gutsafe://scan/${scanHistory.id}`,\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareSafeFood(safeFood: SafeFood) {\n    const shareContent: ShareableContent = {\n      type: 'safe_food',\n      title: `My Safe Food: ${safeFood.foodItem.name}`,\n      description: this.generateSafeFoodDescription(safeFood),\n      data: safeFood,\n      shareUrl: `gutsafe://safe-food/${safeFood.id}`,\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareGutHealthReport(reportData: any) {\n    const shareContent: ShareableContent = {\n      type: 'gut_report',\n      title: 'My Gut Health Report',\n      description: 'Check out my gut health insights from GutSafe!',\n      data: reportData,\n      shareUrl: 'gutsafe://report',\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareToSocialMedia(content: ShareableContent, platform: 'instagram' | 'twitter' | 'facebook') {\n    const shareText = this.generateSocialMediaText(content);\n    \n    switch (platform) {\n      case 'instagram':\n        return this.shareToInstagram(shareText, content);\n      case 'twitter':\n        return this.shareToTwitter(shareText, content);\n      case 'facebook':\n        return this.shareToFacebook(shareText, content);\n      default:\n        throw new Error('Unsupported social media platform');\n    }\n  }\n\n  private static async shareContent(content: ShareableContent) {\n    try {\n      const shareOptions = {\n        message: `${content.title}\\n\\n${content.description}\\n\\n${content.shareUrl}`,\n        url: content.shareUrl,\n        title: content.title,\n      };\n\n      const result = await Share.share(shareOptions);\n      \n      if (result.action === Share.sharedAction) {\n        console.log('Content shared successfully');\n        return { success: true, action: result.action };\n      } else if (result.action === Share.dismissedAction) {\n        console.log('Share dismissed');\n        return { success: false, action: result.action };\n      }\n    } catch (error) {\n      console.error('Error sharing content:', error);\n      Alert.alert('Error', 'Failed to share content. Please try again.');\n      return { success: false, error };\n    }\n  }\n\n  private static generateScanDescription(scanHistory: ScanHistory): string {\n    const { analysis } = scanHistory;\n    const resultEmoji = this.getResultEmoji(analysis.overallSafety);\n    \n    let description = `${resultEmoji} ${analysis.overallSafety.toUpperCase()}\\n`;\n    description += `Source: ${analysis.dataSource}\\n\\n`;\n    \n    if (analysis.flaggedIngredients.length > 0) {\n      description += `⚠️ Flagged ingredients:\\n`;\n      analysis.flaggedIngredients.forEach(ingredient => {\n        description += `• ${ingredient.ingredient} (${ingredient.severity})\\n`;\n      });\n      description += '\\n';\n    }\n    \n    if (analysis.safeAlternatives.length > 0) {\n      description += `✅ Safe alternatives:\\n`;\n      analysis.safeAlternatives.slice(0, 3).forEach(alternative => {\n        description += `• ${alternative}\\n`;\n      });\n    }\n    \n    return description;\n  }\n\n  private static generateSafeFoodDescription(safeFood: SafeFood): string {\n    const { foodItem } = safeFood;\n    let description = `✅ Safe for my gut health!\\n\\n`;\n    description += `Used ${safeFood.usageCount} times\\n`;\n    description += `Last used: ${this.formatDate(safeFood.lastUsed)}\\n`;\n    description += `Source: ${foodItem.dataSource}\\n\\n`;\n    \n    if (foodItem.fodmapLevel) {\n      description += `FODMAP Level: ${foodItem.fodmapLevel}\\n`;\n    }\n    if (foodItem.histamineLevel) {\n      description += `Histamine Level: ${foodItem.histamineLevel}\\n`;\n    }\n    if (foodItem.glutenFree) {\n      description += `Gluten Free: Yes\\n`;\n    }\n    if (foodItem.lactoseFree) {\n      description += `Lactose Free: Yes\\n`;\n    }\n    \n    if (safeFood.notes) {\n      description += `\\nNotes: ${safeFood.notes}`;\n    }\n    \n    return description;\n  }\n\n  private static generateSocialMediaText(content: ShareableContent): string {\n    const hashtags = '#GutSafe #GutHealth #FoodSafety #HealthyEating';\n    \n    switch (content.type) {\n      case 'scan_result':\n        return `Just scanned ${content.data.foodItem.name} with GutSafe! ${content.description}\\n\\n${hashtags}`;\n      case 'safe_food':\n        return `Added ${content.data.foodItem.name} to my safe foods! ${content.description}\\n\\n${hashtags}`;\n      case 'gut_report':\n        return `Check out my gut health insights! ${content.description}\\n\\n${hashtags}`;\n      default:\n        return `${content.title}\\n\\n${content.description}\\n\\n${hashtags}`;\n    }\n  }\n\n  private static async shareToInstagram(text: string, content: ShareableContent) {\n    // Instagram doesn't support direct text sharing, so we'll use the general share\n    // In a real app, you might want to use Instagram's API or Stories API\n    const shareOptions = {\n      message: text,\n      url: content.shareUrl,\n    };\n    \n    try {\n      await Share.share(shareOptions);\n    } catch (error) {\n      console.error('Error sharing to Instagram:', error);\n      Alert.alert('Error', 'Failed to share to Instagram. Please try again.');\n    }\n  }\n\n  private static async shareToTwitter(text: string, content: ShareableContent) {\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;\n    \n    try {\n      const supported = await Linking.canOpenURL(twitterUrl);\n      if (supported) {\n        await Linking.openURL(twitterUrl);\n      } else {\n        // Fallback to general share\n        await Share.share({\n          message: text,\n          url: content.shareUrl,\n        });\n      }\n    } catch (error) {\n      console.error('Error sharing to Twitter:', error);\n      Alert.alert('Error', 'Failed to share to Twitter. Please try again.');\n    }\n  }\n\n  private static async shareToFacebook(text: string, content: ShareableContent) {\n    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(content.shareUrl || '')}&quote=${encodeURIComponent(text)}`;\n    \n    try {\n      const supported = await Linking.canOpenURL(facebookUrl);\n      if (supported) {\n        await Linking.openURL(facebookUrl);\n      } else {\n        // Fallback to general share\n        await Share.share({\n          message: text,\n          url: content.shareUrl,\n        });\n      }\n    } catch (error) {\n      console.error('Error sharing to Facebook:', error);\n      Alert.alert('Error', 'Failed to share to Facebook. Please try again.');\n    }\n  }\n\n  private static getResultEmoji(result: string): string {\n    switch (result) {\n      case 'safe': return '✅';\n      case 'caution': return '⚠️';\n      case 'avoid': return '❌';\n      default: return '📱';\n    }\n  }\n\n  private static formatDate(date?: Date): string {\n    if (!date) return 'Never';\n    \n    const now = new Date();\n    const diffTime = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n    return `${Math.floor(diffDays / 30)} months ago`;\n  }\n\n  static async shareWithOptions(content: ShareableContent) {\n    Alert.alert(\n      'Share Options',\n      'Choose how you\\'d like to share this content:',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { text: 'General Share', onPress: () => this.shareContent(content) },\n        { text: 'Twitter', onPress: () => this.shareToSocialMedia(content, 'twitter') },\n        { text: 'Facebook', onPress: () => this.shareToSocialMedia(content, 'facebook') },\n        { text: 'Instagram', onPress: () => this.shareToSocialMedia(content, 'instagram') },\n      ]\n    );\n  }\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n","/**\n * @fileoverview LinearGradientWrapper.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React from 'react';\nimport { Platform, View } from 'react-native';\n\n// Simple fallback LinearGradient that uses solid colors\nconst FallbackLinearGradient = ({ colors, style, children, start, end, locations, ...props }: any) => {\n  // Use the first color as a solid background\n  const backgroundColor = colors && colors.length > 0 ? colors[0] : '#000000';\n  \n  return (\n    <View style={[{ backgroundColor }, style]} {...props}>\n      {children}\n    </View>\n  );\n};\n\n// Native LinearGradient\nlet NativeLinearGradient: any = null;\nif (Platform.OS !== 'web') {\n  try {\n    NativeLinearGradient = require('expo-linear-gradient').default;\n  } catch (error) {\n    console.warn('Failed to load native LinearGradient:', error);\n  }\n}\n\n// Export the appropriate component - use fallback for web to avoid CSS issues\nconst LinearGradient = Platform.OS === 'web' ? FallbackLinearGradient : NativeLinearGradient;\n\nexport default LinearGradient;\n","/**\n * @fileoverview ScanDetailScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  StatusBar,\n  useColorScheme,\n  Animated,\n  Alert,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport LinearGradient from '../components/LinearGradientWrapper';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing, BorderRadius } from '../constants/spacing';\nimport { ScanHistory, ScanResult, SeverityLevel, GutCondition } from '../types';\nimport { SharingService } from '../utils/sharing';\n\ntype ScanDetailRouteParams = {\n  ScanDetail: {\n    scanId: string;\n  };\n};\n\ntype ScanDetailRouteProp = RouteProp<ScanDetailRouteParams, 'ScanDetail'>;\n\n// Mock scan data - in real app, this would come from a store or API\nconst mockScanData: { [key: string]: ScanHistory } = {\n  '1': {\n    id: '1',\n    foodItem: {\n      id: '1',\n      name: 'Greek Yogurt',\n      brand: 'Chobani',\n      category: 'Dairy',\n      barcode: '1234567890123',\n      ingredients: ['Milk', 'Live cultures'],\n      allergens: ['Milk'],\n      additives: [],\n      glutenFree: true,\n      lactoseFree: false,\n      histamineLevel: 'low',\n      dataSource: 'USDA Database',\n    },\n    analysis: {\n      overallSafety: 'safe' as ScanResult,\n      flaggedIngredients: [],\n      conditionWarnings: [],\n      safeAlternatives: ['Coconut yogurt', 'Almond yogurt'],\n      explanation: 'This Greek yogurt is low in histamine and contains probiotics that may benefit gut health. No problematic ingredients detected.',\n      dataSource: 'USDA Food Database',\n      lastUpdated: new Date(Date.now() - 2 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\n    userFeedback: 'accurate',\n  },\n  '2': {\n    id: '2',\n    foodItem: {\n      id: '2',\n      name: 'Wheat Bread',\n      brand: 'Wonder',\n      category: 'Bakery',\n      barcode: '1234567890124',\n      ingredients: ['Wheat flour', 'Water', 'Yeast', 'Salt'],\n      allergens: ['Wheat', 'Gluten'],\n      additives: [],\n      glutenFree: false,\n      lactoseFree: true,\n      histamineLevel: 'low',\n      dataSource: 'Product Database',\n    },\n    analysis: {\n      overallSafety: 'caution' as ScanResult,\n      flaggedIngredients: [\n        {\n          ingredient: 'Wheat',\n          reason: 'Contains gluten which may trigger IBS symptoms',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'gluten' as GutCondition,\n        },\n        {\n          ingredient: 'Fructans',\n          reason: 'High FODMAP content may cause bloating',\n          severity: 'mild' as SeverityLevel,\n          condition: 'ibs-fodmap' as GutCondition,\n        },\n      ],\n      conditionWarnings: [\n        {\n          ingredient: 'Wheat',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'gluten' as GutCondition,\n        },\n      ],\n      safeAlternatives: ['Sourdough bread', 'Gluten-free bread', 'Rice cakes'],\n      explanation: 'This wheat bread contains gluten and fructans that may trigger digestive symptoms in sensitive individuals.',\n      dataSource: 'Monash FODMAP Database',\n      lastUpdated: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n  },\n  '3': {\n    id: '3',\n    foodItem: {\n      id: '3',\n      name: 'Aged Cheddar Cheese',\n      brand: 'Cabot',\n      category: 'Dairy',\n      barcode: '1234567890125',\n      ingredients: ['Milk', 'Salt', 'Enzymes', 'Annatto'],\n      allergens: ['Milk'],\n      additives: ['Annatto'],\n      glutenFree: true,\n      lactoseFree: false,\n      histamineLevel: 'high',\n      dataSource: 'USDA Database',\n    },\n    analysis: {\n      overallSafety: 'avoid' as ScanResult,\n      flaggedIngredients: [\n        {\n          ingredient: 'Histamine',\n          reason: 'Aged cheese contains high levels of histamine',\n          severity: 'severe' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n        {\n          ingredient: 'Tyramine',\n          reason: 'May cause headaches and digestive issues',\n          severity: 'moderate' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n      ],\n      conditionWarnings: [\n        {\n          ingredient: 'Histamine',\n          severity: 'severe' as SeverityLevel,\n          condition: 'histamine' as GutCondition,\n        },\n      ],\n      safeAlternatives: ['Fresh mozzarella', 'Cottage cheese', 'Ricotta cheese'],\n      explanation: 'This aged cheddar cheese contains very high levels of histamine and tyramine, which can trigger severe reactions in sensitive individuals.',\n      dataSource: 'Histamine Intolerance Database',\n      lastUpdated: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n    },\n    timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n  },\n};\n\nexport const ScanDetailScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const route = useRoute<ScanDetailRouteProp>();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const { scanId } = route.params;\n  const [scanData, setScanData] = useState<ScanHistory | null>(null);\n  const [userFeedback, setUserFeedback] = useState<'accurate' | 'inaccurate' | null>(null);\n  \n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(50)).current;\n\n  useEffect(() => {\n    // Simulate loading scan data\n    const loadScanData = () => {\n      const data = mockScanData[scanId];\n      if (data) {\n        setScanData(data);\n        setUserFeedback(data.userFeedback || null);\n        \n        // Animate content in\n        Animated.parallel([\n          Animated.timing(fadeAnim, {\n            toValue: 1,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n          Animated.timing(slideAnim, {\n            toValue: 0,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      }\n    };\n\n    loadScanData();\n  }, [scanId, fadeAnim, slideAnim]);\n\n  const getResultConfig = () => {\n    if (!scanData) return null;\n    \n    switch (scanData.analysis.overallSafety) {\n      case 'safe':\n        return {\n          color: Colors.safe,\n          icon: '✅',\n          backgroundColor: `${Colors.safe}15`,\n          title: 'Safe to Eat',\n          gradient: [Colors.safe, `${Colors.safe}80`],\n        };\n      case 'caution':\n        return {\n          color: Colors.caution,\n          icon: '⚠️',\n          backgroundColor: `${Colors.caution}15`,\n          title: 'Use Caution',\n          gradient: [Colors.caution, `${Colors.caution}80`],\n        };\n      case 'avoid':\n        return {\n          color: Colors.avoid,\n          icon: '❌',\n          backgroundColor: `${Colors.avoid}15`,\n          title: 'Avoid',\n          gradient: [Colors.avoid, `${Colors.avoid}80`],\n        };\n    }\n  };\n\n  const getSeverityColor = (severity: SeverityLevel) => {\n    switch (severity) {\n      case 'mild':\n        return Colors.safe;\n      case 'moderate':\n        return Colors.caution;\n      case 'severe':\n        return Colors.avoid;\n    }\n  };\n\n  const getSeverityIcon = (severity: SeverityLevel) => {\n    switch (severity) {\n      case 'mild':\n        return '🟢';\n      case 'moderate':\n        return '🟡';\n      case 'severe':\n        return '🔴';\n    }\n  };\n\n  const formatTimestamp = (date: Date) => {\n    return date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  // const handleShare = async () => {\n  //   if (!scanData) return;\n  //   await SharingService.shareScanResult(scanData);\n  // };\n\n  const handleShareWithOptions = async () => {\n    if (!scanData) return;\n    await SharingService.shareWithOptions({\n      type: 'scan_result',\n      title: `GutSafe Scan: ${scanData.foodItem.name}`,\n      description: `Scan result: ${scanData.analysis.overallSafety.toUpperCase()}`,\n      data: scanData,\n      shareUrl: `gutsafe://scan/${scanId}`,\n    });\n  };\n\n  const handleAddToSafeFoods = () => {\n    if (!scanData) return;\n    \n    Alert.alert(\n      'Add to Safe Foods',\n      `Add \"${scanData.foodItem.name}\" to your safe foods list?`,\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Add',\n          onPress: () => {\n            // In real app, this would save to backend\n            Alert.alert('Success', 'Added to safe foods!');\n          },\n        },\n      ]\n    );\n  };\n\n  const handleFeedback = (feedback: 'accurate' | 'inaccurate') => {\n    setUserFeedback(feedback);\n    // In real app, this would save to backend\n    Alert.alert(\n      'Thank you!',\n      'Your feedback helps improve our analysis accuracy.',\n      [{ text: 'OK' }]\n    );\n  };\n\n  if (!scanData) {\n    return (\n      <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]}>\n        <View style={styles.loadingContainer}>\n          <Text style={[styles.loadingText, { color: colors.text }]}>Loading...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  const resultConfig = getResultConfig();\n  if (!resultConfig) return null;\n\n  const { foodItem, analysis } = scanData;\n\n  return (\n    <SafeAreaView style={[styles.container, { backgroundColor: colors.background }]}>\n      <StatusBar barStyle={isDark ? 'light-content' : 'dark-content'} />\n      \n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity\n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={[styles.backButtonText, { color: colors.accent }]}>‹ Back</Text>\n        </TouchableOpacity>\n        <View style={styles.headerActions}>\n          <TouchableOpacity style={styles.actionButton} onPress={handleAddToSafeFoods}>\n            <Text style={[styles.actionButtonText, { color: colors.accent }]}>+ Safe</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.actionButton} onPress={handleShareWithOptions}>\n            <Text style={[styles.actionButtonText, { color: colors.accent }]}>Share</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <ScrollView\n        style={styles.scrollView}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollContent}\n      >\n        <Animated.View\n          style={[\n            styles.content,\n            {\n              opacity: fadeAnim,\n              transform: [{ translateY: slideAnim }],\n            },\n          ]}\n        >\n          {/* Result Header */}\n          <LinearGradient\n            colors={resultConfig.gradient as any}\n            style={styles.resultHeader}\n          >\n            <View style={styles.resultHeaderContent}>\n              <Text style={styles.resultIcon}>{resultConfig.icon}</Text>\n              <View style={styles.resultTextContainer}>\n                <Text style={styles.resultTitle}>{resultConfig.title}</Text>\n                <Text style={styles.foodName}>{foodItem.name}</Text>\n                {foodItem.brand && (\n                  <Text style={styles.brandName}>{foodItem.brand}</Text>\n                )}\n              </View>\n            </View>\n          </LinearGradient>\n\n          {/* Analysis Section */}\n          <View style={[styles.section, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Analysis\n            </Text>\n            <Text style={[styles.explanation, { color: colors.textSecondary }]}>\n              {analysis.explanation}\n            </Text>\n          </View>\n\n          {/* Flagged Ingredients */}\n          {analysis.flaggedIngredients.length > 0 && (\n            <View style={[styles.section, { backgroundColor: colors.surface }]}>\n              <Text style={[styles.sectionTitle, { color: colors.text }]}>\n                Flagged Ingredients ({analysis.flaggedIngredients.length})\n              </Text>\n              {analysis.flaggedIngredients.map((ingredient, index) => (\n                <View key={index} style={styles.ingredientCard}>\n                  <View style={styles.ingredientHeader}>\n                    <Text style={styles.severityIcon}>\n                      {getSeverityIcon(ingredient.severity)}\n                    </Text>\n                    <Text style={[styles.ingredientName, { color: colors.text }]}>\n                      {ingredient.ingredient}\n                    </Text>\n                    <View style={[\n                      styles.severityBadge,\n                      { backgroundColor: `${getSeverityColor(ingredient.severity)}20` }\n                    ]}>\n                      <Text style={[\n                        styles.severityText,\n                        { color: getSeverityColor(ingredient.severity) }\n                      ]}>\n                        {ingredient.severity}\n                      </Text>\n                    </View>\n                  </View>\n                  <Text style={[styles.ingredientReason, { color: colors.textSecondary }]}>\n                    {ingredient.reason}\n                  </Text>\n                  <Text style={[styles.conditionText, { color: colors.textTertiary }]}>\n                    Affects: {ingredient.condition}\n                  </Text>\n                </View>\n              ))}\n            </View>\n          )}\n\n          {/* Safe Alternatives */}\n          {analysis.safeAlternatives.length > 0 && (\n            <View style={[styles.section, { backgroundColor: colors.surface }]}>\n              <Text style={[styles.sectionTitle, { color: colors.text }]}>\n                Safe Alternatives\n              </Text>\n              <View style={styles.alternativesGrid}>\n                {analysis.safeAlternatives.map((alternative, index) => (\n                  <View key={index} style={[styles.alternativeCard, { backgroundColor: colors.background }]}>\n                    <Text style={styles.alternativeIcon}>✅</Text>\n                    <Text style={[styles.alternativeText, { color: colors.text }]}>\n                      {alternative}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n          )}\n\n          {/* Data Source Information */}\n          <View style={[styles.section, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Data Source\n            </Text>\n            <View style={styles.dataSourceContainer}>\n              <View style={styles.dataSourceInfo}>\n                <Text style={[styles.dataSourceName, { color: colors.text }]}>\n                  {analysis.dataSource}\n                </Text>\n                <Text style={[styles.dataSourceDescription, { color: colors.textSecondary }]}>\n                  Last updated: {analysis.lastUpdated.toLocaleDateString()}\n                </Text>\n              </View>\n              <View style={styles.dataSourceIcon}>\n                <Text style={styles.dataSourceIconText}>📊</Text>\n              </View>\n            </View>\n          </View>\n\n          {/* Food Details */}\n          <View style={[styles.section, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Food Details\n            </Text>\n            <View style={styles.detailsGrid}>\n              <View style={styles.detailItem}>\n                <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                  Category\n                </Text>\n                <Text style={[styles.detailValue, { color: colors.text }]}>\n                  {foodItem.category || 'Unknown'}\n                </Text>\n              </View>\n              {foodItem.histamineLevel && (\n                <View style={styles.detailItem}>\n                  <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                    Histamine Level\n                  </Text>\n                  <Text style={[styles.detailValue, { color: colors.text }]}>\n                    {foodItem.histamineLevel}\n                  </Text>\n                </View>\n              )}\n              <View style={styles.detailItem}>\n                <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                  Scanned\n                </Text>\n                <Text style={[styles.detailValue, { color: colors.text }]}>\n                  {formatTimestamp(scanData.timestamp)}\n                </Text>\n              </View>\n              {foodItem.barcode && (\n                <View style={styles.detailItem}>\n                  <Text style={[styles.detailLabel, { color: colors.textSecondary }]}>\n                    Barcode\n                  </Text>\n                  <Text style={[styles.detailValue, { color: colors.text }]}>\n                    {foodItem.barcode}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </View>\n\n          {/* Feedback Section */}\n          <View style={[styles.section, { backgroundColor: colors.surface }]}>\n            <Text style={[styles.sectionTitle, { color: colors.text }]}>\n              Was this analysis helpful?\n            </Text>\n            <View style={styles.feedbackButtons}>\n              <TouchableOpacity\n                style={[\n                  styles.feedbackButton,\n                  {\n                    backgroundColor: userFeedback === 'accurate' ? Colors.safe : colors.background,\n                    borderColor: Colors.safe,\n                  },\n                ]}\n                onPress={() => handleFeedback('accurate')}\n              >\n                <Text style={[\n                  styles.feedbackButtonText,\n                  { color: userFeedback === 'accurate' ? Colors.white : Colors.safe }\n                ]}>\n                  ✓ Accurate\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  styles.feedbackButton,\n                  {\n                    backgroundColor: userFeedback === 'inaccurate' ? Colors.avoid : colors.background,\n                    borderColor: Colors.avoid,\n                  },\n                ]}\n                onPress={() => handleFeedback('inaccurate')}\n              >\n                <Text style={[\n                  styles.feedbackButtonText,\n                  { color: userFeedback === 'inaccurate' ? Colors.white : Colors.avoid }\n                ]}>\n                  ✗ Inaccurate\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n  },\n  backButton: {\n    padding: Spacing.xs,\n  },\n  backButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  headerActions: {\n    flexDirection: 'row',\n    gap: Spacing.md,\n  },\n  actionButton: {\n    padding: Spacing.xs,\n  },\n  actionButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingBottom: Spacing.xxl,\n  },\n  content: {\n    flex: 1,\n  },\n  resultHeader: {\n    marginHorizontal: Spacing.lg,\n    marginBottom: Spacing.md,\n    borderRadius: BorderRadius.lg,\n    padding: Spacing.lg,\n  },\n  resultHeaderContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  resultIcon: {\n    fontSize: 32,\n    marginRight: Spacing.md,\n  },\n  resultTextContainer: {\n    flex: 1,\n  },\n  resultTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    color: Colors.white,\n    marginBottom: Spacing.xs,\n  },\n  foodName: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    color: Colors.white,\n    marginBottom: 2,\n  },\n  brandName: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    color: Colors.white,\n    opacity: 0.9,\n  },\n  confidenceContainer: {\n    alignItems: 'center',\n  },\n  confidenceValue: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    color: Colors.white,\n  },\n  confidenceLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n    color: Colors.white,\n    opacity: 0.8,\n  },\n  section: {\n    marginHorizontal: Spacing.lg,\n    marginBottom: Spacing.md,\n    borderRadius: BorderRadius.md,\n    padding: Spacing.lg,\n  },\n  sectionTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.md,\n  },\n  explanation: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    lineHeight: Typography.lineHeight.body,\n  },\n  ingredientCard: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: BorderRadius.sm,\n    padding: Spacing.md,\n    marginBottom: Spacing.sm,\n  },\n  ingredientHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: Spacing.xs,\n  },\n  severityIcon: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n  },\n  ingredientName: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n    flex: 1,\n    marginRight: Spacing.sm,\n  },\n  severityBadge: {\n    paddingHorizontal: Spacing.sm,\n    paddingVertical: 2,\n    borderRadius: BorderRadius.sm,\n  },\n  severityText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.semiBold,\n    textTransform: 'capitalize',\n  },\n  ingredientReason: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    marginBottom: 2,\n  },\n  conditionText: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n    fontStyle: 'italic',\n  },\n  alternativesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: Spacing.sm,\n  },\n  alternativeCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.lg,\n    flex: 1,\n    minWidth: '45%',\n  },\n  alternativeIcon: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n  },\n  alternativeText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.regular,\n    flex: 1,\n  },\n  detailsGrid: {\n    gap: Spacing.md,\n  },\n  detailItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  detailLabel: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  detailValue: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n    textAlign: 'right',\n    flex: 1,\n    marginLeft: Spacing.md,\n  },\n  feedbackButtons: {\n    flexDirection: 'row',\n    gap: Spacing.md,\n  },\n  feedbackButton: {\n    flex: 1,\n    paddingVertical: Spacing.md,\n    paddingHorizontal: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    borderWidth: 2,\n    alignItems: 'center',\n  },\n  feedbackButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  dataSourceContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  dataSourceInfo: {\n    flex: 1,\n  },\n  dataSourceName: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: 2,\n  },\n  dataSourceDescription: {\n    fontSize: Typography.fontSize.caption,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  dataSourceIcon: {\n    marginLeft: Spacing.md,\n  },\n  dataSourceIconText: {\n    fontSize: 24,\n  },\n});\n"],"names":["SharingService","shareScanResult","scanHistory","shareContent","type","title","concat","foodItem","name","description","this","generateScanDescription","data","shareUrl","id","shareSafeFood","safeFood","generateSafeFoodDescription","shareGutHealthReport","reportData","shareToSocialMedia","content","platform","shareText","generateSocialMediaText","shareToInstagram","shareToTwitter","shareToFacebook","Error","shareOptions","message","url","result","Share","share","action","sharedAction","console","log","success","dismissedAction","error","Alert","alert","analysis","resultEmoji","getResultEmoji","overallSafety","toUpperCase","dataSource","flaggedIngredients","length","forEach","ingredient","severity","safeAlternatives","slice","alternative","usageCount","formatDate","lastUsed","fodmapLevel","histamineLevel","glutenFree","lactoseFree","notes","hashtags","text","twitterUrl","encodeURIComponent","Linking","canOpenURL","openURL","facebookUrl","date","diffTime","Date","getTime","diffDays","Math","floor","shareWithOptions","style","onPress","defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","max","SafeAreaView","React","_ref","ref","edges","rest","_objectWithoutProperties","_excluded","insets","useSafeAreaInsets","edgesRecord","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View","_extends","NativeLinearGradient","Platform","OS","require","warn","colors","children","start","end","locations","props","backgroundColor","_jsx","_objectSpread","mockScanData","brand","category","barcode","ingredients","allergens","additives","conditionWarnings","explanation","lastUpdated","now","timestamp","userFeedback","reason","condition","ScanDetailScreen","navigation","useNavigation","route","useRoute","isDark","useColorScheme","Colors","dark","light","scanId","params","scanData","setScanData","useState","setUserFeedback","fadeAnim","useRef","Animated","Value","slideAnim","useEffect","loadScanData","parallel","timing","toValue","duration","useNativeDriver","getSeverityColor","safe","caution","avoid","getSeverityIcon","handleFeedback","feedback","styles","container","background","loadingContainer","Text","loadingText","color","resultConfig","getResultConfig","icon","gradient","_jsxs","StatusBar","barStyle","header","TouchableOpacity","backButton","goBack","backButtonText","accent","headerActions","actionButton","handleAddToSafeFoods","actionButtonText","async","ScrollView","scrollView","showsVerticalScrollIndicator","contentContainerStyle","scrollContent","opacity","transform","translateY","LinearGradient","resultHeader","resultHeaderContent","resultIcon","resultTextContainer","resultTitle","foodName","brandName","section","surface","sectionTitle","textSecondary","map","index","ingredientCard","ingredientHeader","severityIcon","ingredientName","severityBadge","severityText","ingredientReason","conditionText","textTertiary","alternativesGrid","alternativeCard","alternativeIcon","alternativeText","dataSourceContainer","dataSourceInfo","dataSourceName","dataSourceDescription","toLocaleDateString","dataSourceIcon","dataSourceIconText","detailsGrid","detailItem","detailLabel","detailValue","weekday","year","month","day","hour","minute","feedbackButtons","feedbackButton","borderColor","feedbackButtonText","white","create","flex","justifyContent","alignItems","fontSize","Typography","body","fontFamily","regular","flexDirection","Spacing","lg","md","xs","semiBold","gap","xxl","borderRadius","BorderRadius","h3","bold","h2","confidenceContainer","confidenceValue","confidenceLabel","caption","lineHeight","sm","textTransform","bodySmall","fontStyle","flexWrap","minWidth","textAlign","borderWidth"],"sourceRoot":""}