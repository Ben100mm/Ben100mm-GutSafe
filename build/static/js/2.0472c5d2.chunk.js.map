{"version":3,"file":"static/js/2.0472c5d2.chunk.js","mappings":"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","sources":["utils/sharing.ts","components/ProgressRing.tsx","components/TrendChart.tsx","components/FoodTrendAnalysis.tsx","screens/AnalyticsScreen.tsx"],"sourcesContent":["/**\n * @fileoverview sharing.ts\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport { Share, Alert, Linking } from 'react-native';\nimport { ShareableContent, ScanHistory, SafeFood } from '../types';\n\nexport class SharingService {\n  static async shareScanResult(scanHistory: ScanHistory) {\n    const shareContent: ShareableContent = {\n      type: 'scan_result',\n      title: `GutSafe Scan: ${scanHistory.foodItem.name}`,\n      description: this.generateScanDescription(scanHistory),\n      data: scanHistory,\n      shareUrl: `gutsafe://scan/${scanHistory.id}`,\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareSafeFood(safeFood: SafeFood) {\n    const shareContent: ShareableContent = {\n      type: 'safe_food',\n      title: `My Safe Food: ${safeFood.foodItem.name}`,\n      description: this.generateSafeFoodDescription(safeFood),\n      data: safeFood,\n      shareUrl: `gutsafe://safe-food/${safeFood.id}`,\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareGutHealthReport(reportData: any) {\n    const shareContent: ShareableContent = {\n      type: 'gut_report',\n      title: 'My Gut Health Report',\n      description: 'Check out my gut health insights from GutSafe!',\n      data: reportData,\n      shareUrl: 'gutsafe://report',\n    };\n\n    return this.shareContent(shareContent);\n  }\n\n  static async shareToSocialMedia(content: ShareableContent, platform: 'instagram' | 'twitter' | 'facebook') {\n    const shareText = this.generateSocialMediaText(content);\n    \n    switch (platform) {\n      case 'instagram':\n        return this.shareToInstagram(shareText, content);\n      case 'twitter':\n        return this.shareToTwitter(shareText, content);\n      case 'facebook':\n        return this.shareToFacebook(shareText, content);\n      default:\n        throw new Error('Unsupported social media platform');\n    }\n  }\n\n  private static async shareContent(content: ShareableContent) {\n    try {\n      const shareOptions = {\n        message: `${content.title}\\n\\n${content.description}\\n\\n${content.shareUrl}`,\n        url: content.shareUrl,\n        title: content.title,\n      };\n\n      const result = await Share.share(shareOptions);\n      \n      if (result.action === Share.sharedAction) {\n        console.log('Content shared successfully');\n        return { success: true, action: result.action };\n      } else if (result.action === Share.dismissedAction) {\n        console.log('Share dismissed');\n        return { success: false, action: result.action };\n      }\n    } catch (error) {\n      console.error('Error sharing content:', error);\n      Alert.alert('Error', 'Failed to share content. Please try again.');\n      return { success: false, error };\n    }\n  }\n\n  private static generateScanDescription(scanHistory: ScanHistory): string {\n    const { analysis } = scanHistory;\n    const resultEmoji = this.getResultEmoji(analysis.overallSafety);\n    \n    let description = `${resultEmoji} ${analysis.overallSafety.toUpperCase()}\\n`;\n    description += `Source: ${analysis.dataSource}\\n\\n`;\n    \n    if (analysis.flaggedIngredients.length > 0) {\n      description += `⚠️ Flagged ingredients:\\n`;\n      analysis.flaggedIngredients.forEach(ingredient => {\n        description += `• ${ingredient.ingredient} (${ingredient.severity})\\n`;\n      });\n      description += '\\n';\n    }\n    \n    if (analysis.safeAlternatives.length > 0) {\n      description += `✅ Safe alternatives:\\n`;\n      analysis.safeAlternatives.slice(0, 3).forEach(alternative => {\n        description += `• ${alternative}\\n`;\n      });\n    }\n    \n    return description;\n  }\n\n  private static generateSafeFoodDescription(safeFood: SafeFood): string {\n    const { foodItem } = safeFood;\n    let description = `✅ Safe for my gut health!\\n\\n`;\n    description += `Used ${safeFood.usageCount} times\\n`;\n    description += `Last used: ${this.formatDate(safeFood.lastUsed)}\\n`;\n    description += `Source: ${foodItem.dataSource}\\n\\n`;\n    \n    if (foodItem.fodmapLevel) {\n      description += `FODMAP Level: ${foodItem.fodmapLevel}\\n`;\n    }\n    if (foodItem.histamineLevel) {\n      description += `Histamine Level: ${foodItem.histamineLevel}\\n`;\n    }\n    if (foodItem.glutenFree) {\n      description += `Gluten Free: Yes\\n`;\n    }\n    if (foodItem.lactoseFree) {\n      description += `Lactose Free: Yes\\n`;\n    }\n    \n    if (safeFood.notes) {\n      description += `\\nNotes: ${safeFood.notes}`;\n    }\n    \n    return description;\n  }\n\n  private static generateSocialMediaText(content: ShareableContent): string {\n    const hashtags = '#GutSafe #GutHealth #FoodSafety #HealthyEating';\n    \n    switch (content.type) {\n      case 'scan_result':\n        return `Just scanned ${content.data.foodItem.name} with GutSafe! ${content.description}\\n\\n${hashtags}`;\n      case 'safe_food':\n        return `Added ${content.data.foodItem.name} to my safe foods! ${content.description}\\n\\n${hashtags}`;\n      case 'gut_report':\n        return `Check out my gut health insights! ${content.description}\\n\\n${hashtags}`;\n      default:\n        return `${content.title}\\n\\n${content.description}\\n\\n${hashtags}`;\n    }\n  }\n\n  private static async shareToInstagram(text: string, content: ShareableContent) {\n    // Instagram doesn't support direct text sharing, so we'll use the general share\n    // In a real app, you might want to use Instagram's API or Stories API\n    const shareOptions = {\n      message: text,\n      url: content.shareUrl,\n    };\n    \n    try {\n      await Share.share(shareOptions);\n    } catch (error) {\n      console.error('Error sharing to Instagram:', error);\n      Alert.alert('Error', 'Failed to share to Instagram. Please try again.');\n    }\n  }\n\n  private static async shareToTwitter(text: string, content: ShareableContent) {\n    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;\n    \n    try {\n      const supported = await Linking.canOpenURL(twitterUrl);\n      if (supported) {\n        await Linking.openURL(twitterUrl);\n      } else {\n        // Fallback to general share\n        await Share.share({\n          message: text,\n          url: content.shareUrl,\n        });\n      }\n    } catch (error) {\n      console.error('Error sharing to Twitter:', error);\n      Alert.alert('Error', 'Failed to share to Twitter. Please try again.');\n    }\n  }\n\n  private static async shareToFacebook(text: string, content: ShareableContent) {\n    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(content.shareUrl || '')}&quote=${encodeURIComponent(text)}`;\n    \n    try {\n      const supported = await Linking.canOpenURL(facebookUrl);\n      if (supported) {\n        await Linking.openURL(facebookUrl);\n      } else {\n        // Fallback to general share\n        await Share.share({\n          message: text,\n          url: content.shareUrl,\n        });\n      }\n    } catch (error) {\n      console.error('Error sharing to Facebook:', error);\n      Alert.alert('Error', 'Failed to share to Facebook. Please try again.');\n    }\n  }\n\n  private static getResultEmoji(result: string): string {\n    switch (result) {\n      case 'safe': return '✅';\n      case 'caution': return '⚠️';\n      case 'avoid': return '❌';\n      default: return '📱';\n    }\n  }\n\n  private static formatDate(date?: Date): string {\n    if (!date) return 'Never';\n    \n    const now = new Date();\n    const diffTime = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n    return `${Math.floor(diffDays / 30)} months ago`;\n  }\n\n  static async shareWithOptions(content: ShareableContent) {\n    Alert.alert(\n      'Share Options',\n      'Choose how you\\'d like to share this content:',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { text: 'General Share', onPress: () => this.shareContent(content) },\n        { text: 'Twitter', onPress: () => this.shareToSocialMedia(content, 'twitter') },\n        { text: 'Facebook', onPress: () => this.shareToSocialMedia(content, 'facebook') },\n        { text: 'Instagram', onPress: () => this.shareToSocialMedia(content, 'instagram') },\n      ]\n    );\n  }\n}\n","/**\n * @fileoverview ProgressRing.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  // Dimensions,\n  useColorScheme,\n} from 'react-native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing } from '../constants/spacing';\nimport { ProgressRing as ProgressRingType } from '../types';\n\ninterface ProgressRingProps {\n  data: ProgressRingType;\n  size?: number;\n  strokeWidth?: number;\n  showLabel?: boolean;\n  showValue?: boolean;\n  animated?: boolean;\n}\n\n// const { width } = Dimensions.get('window');\n\nexport const ProgressRing: React.FC<ProgressRingProps> = ({\n  data,\n  size = 120,\n  strokeWidth = 8,\n  showLabel = true,\n  showValue = true,\n  animated = true,\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n  \n  const animatedValue = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    if (animated) {\n      Animated.timing(animatedValue, {\n        toValue: data.value,\n        duration: 1000,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      animatedValue.setValue(data.value);\n    }\n  }, [data.value, animated, animatedValue]);\n\n  // const animatedStrokeDashoffset = animatedValue.interpolate({\n  //   inputRange: [0, 100],\n  //   outputRange: [circumference, 0],\n  //   extrapolate: 'clamp',\n  // });\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.ringContainer, { width: size, height: size }]}>\n        {/* Simple circular progress using View with border */}\n        <View style={[\n          styles.progressCircle,\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            borderWidth: strokeWidth,\n            borderColor: colors.border,\n            borderTopColor: data.color,\n            transform: [{ rotate: `${(data.value / 100) * 360}deg` }],\n          }\n        ]} />\n        \n        {/* Center content */}\n        <View style={styles.centerContent}>\n          {showValue && (\n            <Text style={[styles.value, { color: colors.text }]}>\n              {Math.round(data.value)}\n            </Text>\n          )}\n          {showLabel && (\n            <Text style={[styles.unit, { color: colors.textSecondary }]}>\n              {data.unit}\n            </Text>\n          )}\n        </View>\n      </View>\n      \n      {/* Label below ring */}\n      <Text style={[styles.label, { color: colors.text }]}>\n        {data.label}\n      </Text>\n    </View>\n  );\n};\n\ninterface MultipleProgressRingsProps {\n  rings: ProgressRingType[];\n  size?: number;\n  strokeWidth?: number;\n  layout?: 'horizontal' | 'vertical' | 'grid';\n}\n\nexport const MultipleProgressRings: React.FC<MultipleProgressRingsProps> = ({\n  rings,\n  size = 100,\n  strokeWidth = 6,\n  layout = 'horizontal',\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const containerStyle = layout === 'horizontal' \n    ? styles.horizontalContainer \n    : layout === 'vertical' \n    ? styles.verticalContainer \n    : styles.gridContainer;\n\n  return (\n    <View style={[containerStyle, { backgroundColor: colors.surface }]}>\n      {rings.map((ring, index) => (\n        <ProgressRing\n          key={ring.id}\n          data={ring}\n          size={size}\n          strokeWidth={strokeWidth}\n        />\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ringContainer: {\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  progressCircle: {\n    position: 'absolute',\n  },\n  centerContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  value: {\n    fontSize: Typography.fontSize.title2,\n    fontWeight: Typography.fontWeight.bold,\n    lineHeight: Typography.lineHeight.title2,\n  },\n  unit: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.medium,\n    marginTop: 2,\n  },\n  label: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.medium,\n    textAlign: 'center',\n    marginTop: Spacing.sm,\n  },\n  horizontalContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    padding: Spacing.lg,\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: Spacing.lg,\n  },\n  gridContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    padding: Spacing.lg,\n  },\n});\n","/**\n * @fileoverview TrendChart.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  // Dimensions,\n  useColorScheme,\n  ScrollView,\n} from 'react-native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing } from '../constants/spacing';\nimport { TrendAnalysis } from '../types';\nimport Svg, { Path } from 'react-native-svg';\n\n\ninterface TrendChartProps {\n  data: TrendAnalysis;\n  title: string;\n  subtitle?: string;\n  color?: string;\n  height?: number;\n  showInsights?: boolean;\n  showRecommendations?: boolean;\n}\n\nexport const TrendChart: React.FC<TrendChartProps> = ({\n  data: _data,\n  title: _title,\n  subtitle: _subtitle,\n  color: _color = Colors.primary,\n  height: _height = 200,\n  showInsights: _showInsights = true,\n  showRecommendations: _showRecommendations = false,\n}) => {\n\n  // Simple line chart implementation\n  return (\n    <Svg height=\"200\" width=\"300\">\n      <Path d=\"M0 200 L100 100 L200 150 L300 50\" stroke=\"blue\" fill=\"none\" />\n    </Svg>\n  );\n};\n\ninterface MultiTrendChartProps {\n  charts: Array<TrendAnalysis & { title: string; color: string }>;\n  height?: number;\n}\n\nexport const MultiTrendChart: React.FC<MultiTrendChartProps> = ({\n  charts,\n  height = 180,\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={[styles.multiContainer, { backgroundColor: colors.surface }]}>\n      <Text style={[styles.multiTitle, { color: colors.text }]}>\n        Multiple Trends\n      </Text>\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n        <View style={styles.chartsRow}>\n          {charts.map((chart, index) => (\n            <TrendChart\n              key={index}\n              data={chart}\n              title={chart.title}\n              color={chart.color}\n              height={height}\n              showInsights={false}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\ninterface PeriodSelectorProps {\n  selectedPeriod: 'week' | 'month' | 'quarter' | 'year';\n  onPeriodChange: (period: 'week' | 'month' | 'quarter' | 'year') => void;\n}\n\nexport const PeriodSelector: React.FC<PeriodSelectorProps> = ({\n  selectedPeriod,\n  onPeriodChange,\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const periods = [\n    { key: 'week', label: 'Week' },\n    { key: 'month', label: 'Month' },\n    { key: 'quarter', label: 'Quarter' },\n    { key: 'year', label: 'Year' },\n  ];\n\n  return (\n    <View style={[styles.periodSelector, { backgroundColor: colors.surface }]}>\n      <Text style={[styles.periodTitle, { color: colors.text }]}>\n        Time Period\n      </Text>\n      <View style={styles.periodButtons}>\n        {periods.map((period) => (\n          <TouchableOpacity\n            key={period.key}\n            style={[\n              styles.periodButton,\n              {\n                backgroundColor: selectedPeriod === period.key ? colors.accent : colors.background,\n              },\n            ]}\n            onPress={() => onPeriodChange(period.key as any)}\n          >\n            <Text\n              style={[\n                styles.periodButtonText,\n                {\n                  color: selectedPeriod === period.key ? Colors.white : colors.text,\n                },\n              ]}\n            >\n              {period.label}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: Spacing.lg,\n    marginVertical: Spacing.sm,\n    borderRadius: 16,\n    padding: Spacing.lg,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.md,\n  },\n  title: {\n    fontSize: Typography.fontSize.title3,\n    fontWeight: Typography.fontWeight.bold,\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.regular,\n  },\n  trendIndicator: {\n    alignItems: 'center',\n  },\n  trendIcon: {\n    fontSize: 20,\n    marginBottom: 2,\n  },\n  trendText: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.semiBold,\n  },\n  chartContainer: {\n    marginBottom: Spacing.md,\n  },\n  chartArea: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 8,\n    padding: Spacing.lg,\n  },\n  chartPlaceholder: {\n    fontSize: Typography.fontSize.h3,\n    marginBottom: Spacing.sm,\n  },\n  chartDescription: {\n    fontSize: Typography.fontSize.body,\n    textAlign: 'center',\n    marginBottom: Spacing.xs,\n  },\n  changeText: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.bold,\n  },\n  insightsContainer: {\n    marginTop: Spacing.md,\n  },\n  insightsTitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  insightItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.xs,\n  },\n  insightBullet: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n    marginTop: 2,\n  },\n  insightText: {\n    flex: 1,\n    fontSize: Typography.fontSize.bodySmall,\n    lineHeight: 20,\n  },\n  recommendationsContainer: {\n    marginTop: Spacing.md,\n  },\n  recommendationsTitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  recommendationItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.xs,\n  },\n  recommendationBullet: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n    marginTop: 2,\n  },\n  recommendationText: {\n    flex: 1,\n    fontSize: Typography.fontSize.bodySmall,\n    lineHeight: 20,\n  },\n  multiContainer: {\n    marginHorizontal: Spacing.lg,\n    marginVertical: Spacing.sm,\n    borderRadius: 16,\n    padding: Spacing.lg,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  multiTitle: {\n    fontSize: Typography.fontSize.title3,\n    fontWeight: Typography.fontWeight.bold,\n    marginBottom: Spacing.md,\n  },\n  chartsRow: {\n    flexDirection: 'row',\n    gap: Spacing.md,\n  },\n  periodSelector: {\n    marginHorizontal: Spacing.lg,\n    marginVertical: Spacing.sm,\n    borderRadius: 16,\n    padding: Spacing.lg,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  periodTitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  periodButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  periodButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: 8,\n  },\n  periodButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontWeight: Typography.fontWeight.semiBold,\n  },\n});","/**\n * @fileoverview FoodTrendAnalysis.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useMemo } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  useColorScheme,\n  // Dimensions,\n} from 'react-native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing } from '../constants/spacing';\nimport { FoodTrendData } from '../types';\n\n// const { width } = Dimensions.get('window');\n\ninterface FoodTrendAnalysisProps {\n  data: FoodTrendData[];\n  maxItems?: number;\n  showChart?: boolean;\n  showInsights?: boolean;\n}\n\nexport const FoodTrendAnalysis: React.FC<FoodTrendAnalysisProps> = ({\n  data,\n  maxItems = 5,\n  showChart = true,\n  showInsights = true,\n}) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [selectedFood, setSelectedFood] = useState<FoodTrendData | null>(null);\n\n  const sortedData = useMemo(() => {\n    return [...data]\n      .sort((a, b) => b.totalScans - a.totalScans)\n      .slice(0, maxItems);\n  }, [data, maxItems]);\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case 'improving': return '📈';\n      case 'declining': return '📉';\n      case 'stable': return '➡️';\n      default: return '📊';\n    }\n  };\n\n  const getTrendColor = (trend: string) => {\n    switch (trend) {\n      case 'improving': return Colors.safe;\n      case 'declining': return Colors.avoid;\n      case 'stable': return Colors.caution;\n      default: return colors.text;\n    }\n  };\n\n  const getConfidenceColor = (confidence: number) => {\n    if (confidence >= 0.8) return Colors.safe;\n    if (confidence >= 0.6) return Colors.caution;\n    return Colors.avoid;\n  };\n\n  const formatLastScanned = (date: Date) => {\n    const now = new Date();\n    const diffTime = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n    return `${Math.floor(diffDays / 30)} months ago`;\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.surface }]}>\n      <Text style={[styles.title, { color: colors.text }]}>\n        Food Trend Analysis\n      </Text>\n      \n      {showChart && (\n        <View style={styles.chartContainer}>\n          <Text style={[styles.chartTitle, { color: colors.text }]}>\n            Top Scanned Foods\n          </Text>\n          <View style={styles.chartArea}>\n            {sortedData.map((food, _index) => (\n              <View key={food.foodName} style={styles.chartBar}>\n                <View style={styles.barContainer}>\n                  <View\n                    style={[\n                      styles.bar,\n                      {\n                        width: `${(food.totalScans / Math.max(...sortedData.map(f => f.totalScans))) * 100}%`,\n                        backgroundColor: getTrendColor(food.trend),\n                      },\n                    ]}\n                  />\n                </View>\n                <Text style={[styles.barLabel, { color: colors.textSecondary }]}>\n                  {food.foodName}\n                </Text>\n                <Text style={[styles.barValue, { color: colors.text }]}>\n                  {food.totalScans}\n                </Text>\n              </View>\n            ))}\n          </View>\n        </View>\n      )}\n\n      <ScrollView style={styles.foodList} showsVerticalScrollIndicator={false}>\n        {sortedData.map((food, _index) => (\n          <TouchableOpacity\n            key={food.foodName}\n            style={[\n              styles.foodItem,\n              { backgroundColor: colors.background },\n              selectedFood?.foodName === food.foodName && styles.selectedFoodItem,\n            ]}\n            onPress={() => setSelectedFood(selectedFood?.foodName === food.foodName ? null : food)}\n          >\n            <View style={styles.foodHeader}>\n              <Text style={[styles.foodName, { color: colors.text }]}>\n                {food.foodName}\n              </Text>\n              <View style={styles.trendContainer}>\n                <Text style={styles.trendIcon}>{getTrendIcon(food.trend)}</Text>\n                <Text style={[styles.trendText, { color: getTrendColor(food.trend) }]}>\n                  {food.trend}\n                </Text>\n              </View>\n            </View>\n\n            <View style={styles.foodStats}>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: colors.text }]}>\n                  {food.totalScans}\n                </Text>\n                <Text style={[styles.statLabel, { color: colors.textSecondary }]}>\n                  Total Scans\n                </Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: Colors.safe }]}>\n                  {food.safeCount}\n                </Text>\n                <Text style={[styles.statLabel, { color: colors.textSecondary }]}>\n                  Safe\n                </Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: Colors.caution }]}>\n                  {food.cautionCount}\n                </Text>\n                <Text style={[styles.statLabel, { color: colors.textSecondary }]}>\n                  Caution\n                </Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: Colors.avoid }]}>\n                  {food.avoidCount}\n                </Text>\n                <Text style={[styles.statLabel, { color: colors.textSecondary }]}>\n                  Avoid\n                </Text>\n              </View>\n            </View>\n\n            <View style={styles.foodDetails}>\n              <Text style={[styles.lastScanned, { color: colors.textSecondary }]}>\n                Last scanned: {formatLastScanned(food.lastScanned)}\n              </Text>\n              <Text style={[styles.confidence, { color: getConfidenceColor(food.confidence) }]}>\n                Confidence: {Math.round(food.confidence * 100)}%\n              </Text>\n            </View>\n\n            {selectedFood?.foodName === food.foodName && (\n              <View style={styles.expandedDetails}>\n                <Text style={[styles.detailsTitle, { color: colors.text }]}>\n                  Detailed Analysis\n                </Text>\n                <Text style={[styles.detailsText, { color: colors.textSecondary }]}>\n                  This food has been scanned {food.totalScans} times with a {Math.round(food.confidence * 100)}% confidence level.\n                  The trend shows it's {food.trend} in terms of gut health compatibility.\n                </Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n\n      {showInsights && (\n        <View style={styles.insightsContainer}>\n          <Text style={[styles.insightsTitle, { color: colors.text }]}>\n            Key Insights\n          </Text>\n          <View style={styles.insightItem}>\n            <Text style={styles.insightBullet}>•</Text>\n            <Text style={[styles.insightText, { color: colors.textSecondary }]}>\n              Most scanned food: {sortedData[0]?.foodName} ({sortedData[0]?.totalScans} times)\n            </Text>\n          </View>\n          <View style={styles.insightItem}>\n            <Text style={styles.insightBullet}>•</Text>\n            <Text style={[styles.insightText, { color: colors.textSecondary }]}>\n              Total foods tracked: {data.length}\n            </Text>\n          </View>\n          <View style={styles.insightItem}>\n            <Text style={styles.insightBullet}>•</Text>\n            <Text style={[styles.insightText, { color: colors.textSecondary }]}>\n              Average confidence: {Math.round((data.reduce((sum, food) => sum + food.confidence, 0) / data.length) * 100)}%\n            </Text>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: Spacing.lg,\n    marginVertical: Spacing.sm,\n    borderRadius: 16,\n    padding: Spacing.lg,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  title: {\n    fontSize: Typography.fontSize.title3,\n    fontWeight: Typography.fontWeight.bold,\n    marginBottom: Spacing.md,\n  },\n  chartContainer: {\n    marginBottom: Spacing.lg,\n  },\n  chartTitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  chartArea: {\n    gap: Spacing.sm,\n  },\n  chartBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: Spacing.sm,\n  },\n  barContainer: {\n    flex: 1,\n    height: 20,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  bar: {\n    height: '100%',\n    borderRadius: 10,\n  },\n  barLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.medium,\n    minWidth: 80,\n  },\n  barValue: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.bold,\n    minWidth: 30,\n    textAlign: 'right',\n  },\n  foodList: {\n    maxHeight: 300,\n  },\n  foodItem: {\n    borderRadius: 12,\n    padding: Spacing.md,\n    marginBottom: Spacing.sm,\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0.1)',\n  },\n  selectedFoodItem: {\n    borderColor: Colors.primary,\n    borderWidth: 2,\n  },\n  foodHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: Spacing.sm,\n  },\n  foodName: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    flex: 1,\n  },\n  trendContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: Spacing.xs,\n  },\n  trendIcon: {\n    fontSize: 16,\n  },\n  trendText: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.semiBold,\n    textTransform: 'capitalize',\n  },\n  foodStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: Spacing.sm,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.bold,\n    marginBottom: 2,\n  },\n  statLabel: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.regular,\n  },\n  foodDetails: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  lastScanned: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.regular,\n  },\n  confidence: {\n    fontSize: Typography.fontSize.caption,\n    fontWeight: Typography.fontWeight.semiBold,\n  },\n  expandedDetails: {\n    marginTop: Spacing.sm,\n    paddingTop: Spacing.sm,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n  },\n  detailsTitle: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.xs,\n  },\n  detailsText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontWeight: Typography.fontWeight.regular,\n    lineHeight: 18,\n  },\n  insightsContainer: {\n    marginTop: Spacing.lg,\n    paddingTop: Spacing.md,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n  },\n  insightsTitle: {\n    fontSize: Typography.fontSize.body,\n    fontWeight: Typography.fontWeight.semiBold,\n    marginBottom: Spacing.sm,\n  },\n  insightItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.xs,\n  },\n  insightBullet: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n    marginTop: 2,\n  },\n  insightText: {\n    flex: 1,\n    fontSize: Typography.fontSize.bodySmall,\n    lineHeight: 18,\n  },\n});","/**\n * @fileoverview AnalyticsScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useMemo, useRef, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  useColorScheme,\n  TouchableOpacity,\n  RefreshControl,\n  Animated,\n} from 'react-native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing } from '../constants/spacing';\nimport { MultipleProgressRings } from '../components/ProgressRing';\nimport { TrendChart, MultiTrendChart, PeriodSelector } from '../components/TrendChart';\nimport { FoodTrendAnalysis } from '../components/FoodTrendAnalysis';\n// import { Animated3DCard } from '../components/Animated3DCard';\nimport { HapticFeedback } from '../utils/haptics';\n// import { AnimationPresets, AnimationUtils } from '../utils/animations';\nimport AccessibilityService from '../utils/accessibility';\nimport { \n  GutHealthMetrics, \n  FoodTrendData, \n  ProgressRing as ProgressRingType,\n  TrendAnalysis,\n  ChartDataPoint,\n  ShareableContent\n} from '../types';\nimport { SharingService } from '../utils/sharing';\n\n// Mock data - in a real app, this would come from your data store\nconst generateMockData = () => {\n  const now = new Date();\n  const last30Days = Array.from({ length: 30 }, (_, i) => {\n    const date = new Date(now);\n    date.setDate(date.getDate() - (29 - i));\n    return {\n      date,\n      overallScore: 70 + Math.random() * 20,\n      safeFoodsCount: Math.floor(Math.random() * 10) + 5,\n      cautionFoodsCount: Math.floor(Math.random() * 5) + 1,\n      avoidFoodsCount: Math.floor(Math.random() * 3),\n      symptomsReported: Math.random() * 5,\n      energyLevel: 5 + Math.random() * 4,\n      sleepQuality: 5 + Math.random() * 4,\n    } as GutHealthMetrics;\n  });\n\n  const foodTrends: FoodTrendData[] = [\n    {\n      foodName: 'Dairy Products',\n      totalScans: 25,\n      safeCount: 15,\n      cautionCount: 7,\n      avoidCount: 3,\n      lastScanned: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000),\n      trend: 'improving',\n      confidence: 0.85,\n    },\n    {\n      foodName: 'Gluten Foods',\n      totalScans: 18,\n      safeCount: 5,\n      cautionCount: 8,\n      avoidCount: 5,\n      lastScanned: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000),\n      trend: 'declining',\n      confidence: 0.72,\n    },\n    {\n      foodName: 'High FODMAP',\n      totalScans: 12,\n      safeCount: 3,\n      cautionCount: 4,\n      avoidCount: 5,\n      lastScanned: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000),\n      trend: 'stable',\n      confidence: 0.68,\n    },\n    {\n      foodName: 'Processed Foods',\n      totalScans: 20,\n      safeCount: 8,\n      cautionCount: 9,\n      avoidCount: 3,\n      lastScanned: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000),\n      trend: 'improving',\n      confidence: 0.78,\n    },\n  ];\n\n  return { last30Days, foodTrends };\n};\n\nconst AnalyticsScreen: React.FC = () => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [selectedPeriod, setSelectedPeriod] = useState<'week' | 'month' | 'quarter' | 'year'>('month');\n  const [refreshing, setRefreshing] = useState(false);\n  const [mockData] = useState(generateMockData());\n\n  // Animation values\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(50)).current;\n  const scaleAnim = useRef(new Animated.Value(0.9)).current;\n\n  useEffect(() => {\n    // Initialize accessibility\n    AccessibilityService.initialize();\n    \n    // Entrance animations\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnim, {\n        toValue: 0,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      Animated.spring(scaleAnim, {\n        toValue: 1,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  }, [fadeAnim, scaleAnim, slideAnim]);\n\n  const onRefresh = () => {\n    HapticFeedback.buttonPress();\n    setRefreshing(true);\n    // Simulate data refresh\n    setTimeout(() => {\n      setRefreshing(false);\n      HapticFeedback.success();\n    }, 1000);\n  };\n\n  const handleShareAnalytics = async () => {\n    const shareContent: ShareableContent = {\n      type: 'gut_report',\n      title: 'My Gut Health Analytics',\n      description: `Check out my gut health progress! Score: ${Math.round(mockData.last30Days[mockData.last30Days.length - 1]?.overallScore || 0)}/100`,\n      data: {\n        score: Math.round(mockData.last30Days[mockData.last30Days.length - 1]?.overallScore || 0),\n        improvement: gutHealthTrend.changePercentage,\n        period: selectedPeriod,\n      },\n      shareUrl: 'gutsafe://analytics',\n    };\n    await SharingService.shareWithOptions(shareContent);\n  };\n\n  // Process data for charts\n  const progressRings: ProgressRingType[] = useMemo(() => {\n    const latest = mockData.last30Days[mockData.last30Days.length - 1] || { \n      overallScore: 0, \n      safeFoodsCount: 0, \n      symptomFrequency: 0, \n      scanAccuracy: 0,\n      energyLevel: 5,\n      sleepQuality: 5,\n      stressLevel: 5,\n      hydrationLevel: 5\n    };\n    return [\n      {\n        id: 'gut-health',\n        label: 'Gut Health',\n        value: latest.overallScore,\n        goal: 90,\n        color: Colors.primary,\n        unit: 'score',\n      },\n      {\n        id: 'safe-foods',\n        label: 'Safe Foods',\n        value: (latest.safeFoodsCount / 15) * 100,\n        goal: 100,\n        color: Colors.safe,\n        unit: 'foods',\n      },\n      {\n        id: 'energy',\n        label: 'Energy',\n        value: (latest.energyLevel / 10) * 100,\n        goal: 100,\n        color: Colors.primaryLight,\n        unit: 'level',\n      },\n    ];\n  }, [mockData.last30Days]);\n\n  const gutHealthTrend: TrendAnalysis = useMemo(() => {\n    const dataPoints: ChartDataPoint[] = mockData.last30Days.map((day, index) => ({\n      x: index + 1,\n      y: day.overallScore,\n      label: day.date.toLocaleDateString(),\n    }));\n\n    const firstScore = dataPoints[0]?.y || 0;\n    const lastScore = dataPoints[dataPoints.length - 1]?.y || 0;\n    const changePercentage = firstScore > 0 ? ((lastScore - firstScore) / firstScore) * 100 : 0;\n\n    return {\n      period: selectedPeriod,\n      trend: changePercentage > 5 ? 'up' : changePercentage < -5 ? 'down' : 'stable',\n      changePercentage,\n      dataPoints,\n      insights: [\n        `Your gut health score has ${changePercentage > 0 ? 'improved' : 'declined'} by ${Math.abs(changePercentage).toFixed(1)}% this period`,\n        changePercentage > 0 ? 'Keep up the great work with your dietary choices!' : 'Consider reviewing foods that may be causing issues',\n      ],\n      recommendations: [\n        'Continue tracking your food intake daily',\n        'Pay attention to foods that consistently cause symptoms',\n        'Consider consulting with a nutritionist for personalized advice',\n      ],\n    };\n  }, [mockData.last30Days, selectedPeriod]);\n\n  const symptomsTrend: TrendAnalysis = useMemo(() => {\n    const dataPoints: ChartDataPoint[] = mockData.last30Days.map((day, index) => ({\n      x: index + 1,\n      y: day.symptomsReported,\n      label: day.date.toLocaleDateString(),\n    }));\n\n    const firstScore = dataPoints[0]?.y || 0;\n    const lastScore = dataPoints[dataPoints.length - 1]?.y || 0;\n    const changePercentage = firstScore > 0 ? ((lastScore - firstScore) / firstScore) * 100 : 0;\n\n    return {\n      period: selectedPeriod,\n      trend: changePercentage < -5 ? 'up' : changePercentage > 5 ? 'down' : 'stable',\n      changePercentage: -changePercentage, // Invert for symptoms (lower is better)\n      dataPoints,\n      insights: [\n        `Symptoms have ${changePercentage < 0 ? 'decreased' : 'increased'} by ${Math.abs(changePercentage).toFixed(1)}% this period`,\n        changePercentage < 0 ? 'Great job managing your symptoms!' : 'Consider identifying trigger foods',\n      ],\n      recommendations: [\n        'Track symptoms alongside food intake',\n        'Look for patterns in symptom triggers',\n        'Consider keeping a detailed food diary',\n      ],\n    };\n  }, [mockData.last30Days, selectedPeriod]);\n\n  const multiCharts = [\n    { ...gutHealthTrend, title: 'Gut Health Score', color: Colors.primary },\n    { ...symptomsTrend, title: 'Symptoms', color: Colors.avoid },\n  ];\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={[styles.header, { backgroundColor: colors.surface }]}>\n        <View>\n          <Text style={[styles.title, { color: colors.text }]}>Analytics</Text>\n          <Text style={[styles.subtitle, { color: colors.textSecondary }]}>\n            Track your gut health progress\n          </Text>\n        </View>\n        <TouchableOpacity onPress={handleShareAnalytics} style={styles.shareButton}>\n          <Text style={[styles.shareButtonText, { color: colors.accent }]}>Share</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView\n        style={styles.scrollView}\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {/* Progress Rings */}\n        <View style={[styles.section, { backgroundColor: colors.surface }]}>\n          <Text style={[styles.sectionTitle, { color: colors.text }]}>\n            Today's Progress\n          </Text>\n          <MultipleProgressRings\n            rings={progressRings}\n            size={100}\n            strokeWidth={8}\n            layout=\"horizontal\"\n          />\n        </View>\n\n        {/* Period Selector */}\n        <PeriodSelector\n          selectedPeriod={selectedPeriod}\n          onPeriodChange={setSelectedPeriod}\n        />\n\n        {/* Trend Charts */}\n        <TrendChart\n          data={gutHealthTrend}\n          title=\"Gut Health Trend\"\n          subtitle=\"Your overall gut health score over time\"\n          color={Colors.primary}\n        />\n\n        <MultiTrendChart charts={multiCharts} height={180} />\n\n        {/* Food Trend Analysis */}\n        <FoodTrendAnalysis\n          data={mockData.foodTrends}\n          maxItems={8}\n          showChart={true}\n          showInsights={true}\n        />\n\n        {/* Weekly Insights */}\n        <View style={[styles.section, { backgroundColor: colors.surface }]}>\n          <Text style={[styles.sectionTitle, { color: colors.text }]}>\n            Weekly Insights\n          </Text>\n          <View style={styles.insightsGrid}>\n            <View style={[styles.insightCard, { backgroundColor: colors.background }]}>\n              <Text style={[styles.insightNumber, { color: Colors.safe }]}>+12%</Text>\n              <Text style={[styles.insightLabel, { color: colors.textSecondary }]}>\n                Improvement\n              </Text>\n            </View>\n            <View style={[styles.insightCard, { backgroundColor: colors.background }]}>\n              <Text style={[styles.insightNumber, { color: Colors.primary }]}>7</Text>\n              <Text style={[styles.insightLabel, { color: colors.textSecondary }]}>\n                Day Streak\n              </Text>\n            </View>\n            <View style={[styles.insightCard, { backgroundColor: colors.background }]}>\n              <Text style={[styles.insightNumber, { color: Colors.caution }]}>3</Text>\n              <Text style={[styles.insightLabel, { color: colors.textSecondary }]}>\n                New Triggers\n              </Text>\n            </View>\n            <View style={[styles.insightCard, { backgroundColor: colors.background }]}>\n              <Text style={[styles.insightNumber, { color: Colors.primaryLight }]}>85%</Text>\n              <Text style={[styles.insightLabel, { color: colors.textSecondary }]}>\n                Accuracy\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Recommendations */}\n        <View style={[styles.section, { backgroundColor: colors.surface }]}>\n          <Text style={[styles.sectionTitle, { color: colors.text }]}>\n            Recommendations\n          </Text>\n          {gutHealthTrend.recommendations.map((recommendation, index) => (\n            <View key={index} style={styles.recommendationItem}>\n              <Text style={[styles.recommendationBullet, { color: Colors.primary }]}>\n                •\n              </Text>\n              <Text style={[styles.recommendationText, { color: colors.text }]}>\n                {recommendation}\n              </Text>\n            </View>\n          ))}\n        </View>\n\n        {/* Bottom spacing */}\n        <View style={styles.bottomSpacing} />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingTop: 44,\n    paddingHorizontal: Spacing.lg,\n    paddingBottom: Spacing.lg,\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'rgba(0, 0, 0, 0.1)',\n  },\n  shareButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n  },\n  shareButtonText: {\n    fontSize: 17,\n    fontWeight: '600',\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: '800',\n    letterSpacing: -0.5,\n  },\n  subtitle: {\n    fontSize: Typography.fontSize.body,\n    marginTop: 4,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  section: {\n    marginHorizontal: Spacing.lg,\n    marginVertical: Spacing.sm,\n    borderRadius: 16,\n    padding: Spacing.lg,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  sectionTitle: {\n    fontSize: Typography.fontSize.title3,\n    fontWeight: Typography.fontWeight.bold,\n    marginBottom: Spacing.md,\n  },\n  insightsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  insightCard: {\n    width: '48%',\n    padding: Spacing.md,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: Spacing.sm,\n  },\n  insightNumber: {\n    fontSize: Typography.fontSize.title1,\n    fontWeight: Typography.fontWeight.bold,\n  },\n  insightLabel: {\n    fontSize: Typography.fontSize.caption,\n    marginTop: 4,\n    textAlign: 'center',\n  },\n  recommendationItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: Spacing.sm,\n  },\n  recommendationBullet: {\n    fontSize: 16,\n    marginRight: Spacing.sm,\n    marginTop: 2,\n  },\n  recommendationText: {\n    flex: 1,\n    fontSize: Typography.fontSize.body,\n    lineHeight: 20,\n  },\n  bottomSpacing: {\n    height: 100,\n  },\n});\n\nexport default AnalyticsScreen;\n"],"names":["SharingService","shareScanResult","scanHistory","shareContent","type","title","concat","foodItem","name","description","this","generateScanDescription","data","shareUrl","id","shareSafeFood","safeFood","generateSafeFoodDescription","shareGutHealthReport","reportData","shareToSocialMedia","content","platform","shareText","generateSocialMediaText","shareToInstagram","shareToTwitter","shareToFacebook","Error","shareOptions","message","url","result","Share","share","action","sharedAction","console","log","success","dismissedAction","error","Alert","alert","analysis","resultEmoji","getResultEmoji","overallSafety","toUpperCase","dataSource","flaggedIngredients","length","forEach","ingredient","severity","safeAlternatives","slice","alternative","usageCount","formatDate","lastUsed","fodmapLevel","histamineLevel","glutenFree","lactoseFree","notes","hashtags","text","twitterUrl","encodeURIComponent","Linking","canOpenURL","openURL","facebookUrl","date","diffTime","Date","getTime","diffDays","Math","floor","shareWithOptions","style","onPress","ProgressRing","_ref","size","strokeWidth","showLabel","showValue","animated","colors","useColorScheme","Colors","dark","light","animatedValue","useRef","Animated","Value","current","useEffect","timing","toValue","value","duration","useNativeDriver","start","setValue","_jsxs","View","styles","container","children","ringContainer","width","height","_jsx","progressCircle","borderRadius","borderWidth","borderColor","border","borderTopColor","color","transform","rotate","centerContent","Text","round","unit","textSecondary","label","MultipleProgressRings","_ref2","rings","layout","containerStyle","horizontalContainer","verticalContainer","gridContainer","backgroundColor","surface","map","ring","index","StyleSheet","create","alignItems","justifyContent","position","fontSize","Typography","title2","fontWeight","bold","lineHeight","caption","medium","marginTop","textAlign","Spacing","sm","flexDirection","padding","lg","flexWrap","TrendChart","_data","_title","subtitle","_subtitle","_color","primary","_height","showInsights","_showInsights","showRecommendations","_showRecommendations","Svg","Path","d","stroke","fill","MultiTrendChart","charts","multiContainer","multiTitle","ScrollView","horizontal","showsHorizontalScrollIndicator","chartsRow","chart","PeriodSelector","_ref3","selectedPeriod","onPeriodChange","periodSelector","periodTitle","periodButtons","key","period","TouchableOpacity","periodButton","accent","background","periodButtonText","white","marginHorizontal","marginVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","header","marginBottom","md","title3","body","regular","trendIndicator","trendIcon","trendText","semiBold","chartContainer","chartArea","flex","chartPlaceholder","h3","chartDescription","xs","changeText","insightsContainer","insightsTitle","insightItem","insightBullet","marginRight","insightText","bodySmall","recommendationsContainer","recommendationsTitle","recommendationItem","recommendationBullet","recommendationText","gap","paddingHorizontal","paddingVertical","FoodTrendAnalysis","_sortedData$","_sortedData$2","maxItems","showChart","selectedFood","setSelectedFood","useState","sortedData","useMemo","sort","a","b","totalScans","getTrendIcon","trend","getTrendColor","safe","avoid","caution","formatLastScanned","chartTitle","food","_index","chartBar","barContainer","bar","max","f","barLabel","foodName","barValue","foodList","showsVerticalScrollIndicator","selectedFoodItem","foodHeader","trendContainer","foodStats","statItem","statValue","statLabel","safeCount","cautionCount","avoidCount","foodDetails","lastScanned","confidence","expandedDetails","detailsTitle","detailsText","reduce","sum","overflow","minWidth","maxHeight","textTransform","paddingTop","borderTopWidth","paddingBottom","borderBottomWidth","borderBottomColor","shareButton","shareButtonText","letterSpacing","scrollView","section","sectionTitle","insightsGrid","insightCard","insightNumber","title1","insightLabel","bottomSpacing","AnalyticsScreen","setSelectedPeriod","refreshing","setRefreshing","mockData","generateMockData","now","last30Days","Array","from","_","i","setDate","getDate","overallScore","random","safeFoodsCount","cautionFoodsCount","avoidFoodsCount","symptomsReported","energyLevel","sleepQuality","foodTrends","fadeAnim","slideAnim","scaleAnim","AccessibilityService","initialize","parallel","spring","progressRings","latest","symptomFrequency","scanAccuracy","stressLevel","hydrationLevel","goal","primaryLight","gutHealthTrend","_dataPoints$","_dataPoints","dataPoints","day","x","y","toLocaleDateString","firstScore","lastScore","changePercentage","insights","abs","toFixed","recommendations","symptomsTrend","_dataPoints$2","_dataPoints2","multiCharts","_objectSpread","async","_mockData$last30Days","_mockData$last30Days2","score","improvement","refreshControl","RefreshControl","onRefresh","HapticFeedback","buttonPress","setTimeout","recommendation"],"sourceRoot":""}