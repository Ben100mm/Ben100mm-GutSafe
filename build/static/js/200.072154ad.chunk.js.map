{"version":3,"file":"static/js/200.072154ad.chunk.js","mappings":"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","sources":["../node_modules/react-native-web/dist/exports/Share/index.js","screens/UserSettingsScreen.tsx","../node_modules/react-native-web/dist/modules/multiplyStyleLengthValue/index.js","../node_modules/react-native-web/dist/exports/Switch/index.js","../node_modules/react-native-web/dist/exports/Alert/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nclass Share {\n  static share(content, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');\n    invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');\n    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n    invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');\n    if (window.navigator.share !== undefined) {\n      return window.navigator.share({\n        title: content.title,\n        text: content.message,\n        url: content.url\n      });\n    } else {\n      return Promise.reject(new Error('Share is not supported in this browser'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static get sharedAction() {\n    return 'sharedAction';\n  }\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static get dismissedAction() {\n    return 'dismissedAction';\n  }\n}\nexport default Share;","/**\n * @fileoverview UserSettingsScreen.tsx\n * @copyright Copyright (c) 2024 Benjamin [Last Name]. All rights reserved.\n * @license PROPRIETARY - See LICENSE file for details\n * @private\n */\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  useColorScheme,\n  TouchableOpacity,\n  Switch,\n  Alert,\n  Share,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Colors } from '../constants/colors';\nimport { Typography } from '../constants/typography';\nimport { Spacing, BorderRadius } from '../constants/spacing';\nimport { userSettingsService, UserSettings } from '../services/UserSettingsService';\n// import { GutCondition, SeverityLevel } from '../types';\n\nexport const UserSettingsScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const [settings, setSettings] = useState<UserSettings | null>(null);\n  const [activeSection, setActiveSection] = useState<'profile' | 'preferences' | 'scanning' | 'notifications' | 'privacy' | 'advanced'>('profile');\n\n  useEffect(() => {\n    // Load settings\n    const loadSettings = async () => {\n      await userSettingsService.initialize();\n      setSettings(userSettingsService.getSettings());\n    };\n    loadSettings();\n\n    // Listen for settings changes\n    const unsubscribe = userSettingsService.addListener((newSettings) => {\n      setSettings(newSettings);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const handleSettingChange = async (section: keyof UserSettings, key: string, value: any) => {\n    try {\n      if (section === 'preferences' && key === 'notifications') {\n        // Handle nested notifications updates\n        await userSettingsService.updatePreferences({ notifications: value });\n      } else {\n        await userSettingsService.setSettingValue(section, key as keyof UserSettings[typeof section], value);\n      }\n    } catch (error) {\n      console.error('Failed to update setting:', error);\n      Alert.alert('Error', 'Failed to update setting. Please try again.');\n    }\n  };\n\n  const handleExportSettings = async () => {\n    try {\n      const settingsJson = userSettingsService.exportSettings();\n      await Share.share({\n        message: settingsJson,\n        title: 'GutSafe Settings Export',\n      });\n    } catch (error) {\n      console.error('Failed to export settings:', error);\n      Alert.alert('Error', 'Failed to export settings. Please try again.');\n    }\n  };\n\n  const handleImportSettings = () => {\n    Alert.alert(\n      'Import Settings',\n      'This will replace your current settings. Are you sure?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Import', \n          style: 'destructive',\n          onPress: () => {\n            // In a real app, you would open a file picker here\n            Alert.alert('Import', 'File picker would open here in a real app');\n          }\n        },\n      ]\n    );\n  };\n\n  const handleResetSettings = () => {\n    Alert.alert(\n      'Reset Settings',\n      'This will reset all settings to default values. Are you sure?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Reset', \n          style: 'destructive',\n          onPress: async () => {\n            try {\n              await userSettingsService.resetSettings();\n              Alert.alert('Success', 'Settings have been reset to default values.');\n            } catch (error) {\n              Alert.alert('Error', 'Failed to reset settings. Please try again.');\n            }\n          }\n        },\n      ]\n    );\n  };\n\n  const getSectionIcon = (section: string) => {\n    const icons = {\n      profile: '👤',\n      preferences: '⚙️',\n      scanning: '📱',\n      notifications: '🔔',\n      privacy: '🔒',\n      advanced: '🔧',\n    };\n    return icons[section as keyof typeof icons];\n  };\n\n  if (!settings) {\n    return (\n      <View style={[styles.container, { backgroundColor: colors.background }]}>\n        <Text style={[styles.loadingText, { color: colors.text }]}>Loading settings...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      {/* Header */}\n      <View style={[styles.header, { backgroundColor: colors.surface }]}>\n        <TouchableOpacity\n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={[styles.backButtonText, { color: colors.accent }]}>← Back</Text>\n        </TouchableOpacity>\n        <Text style={[styles.title, { color: colors.text }]}>Settings</Text>\n        <View style={styles.headerSpacer} />\n      </View>\n\n      {/* Section Navigation */}\n      <View style={[styles.sectionNav, { backgroundColor: colors.surface }]}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          {[\n            { key: 'profile', label: 'Profile' },\n            { key: 'preferences', label: 'Preferences' },\n            { key: 'scanning', label: 'Scanning' },\n            { key: 'notifications', label: 'Notifications' },\n            { key: 'privacy', label: 'Privacy' },\n            { key: 'advanced', label: 'Advanced' },\n          ].map((section) => (\n            <TouchableOpacity\n              key={section.key}\n              style={[\n                styles.sectionTab,\n                {\n                  backgroundColor: activeSection === section.key ? colors.accent : 'transparent',\n                },\n              ]}\n              onPress={() => setActiveSection(section.key as any)}\n            >\n              <Text style={styles.sectionIcon}>\n                {getSectionIcon(section.key)}\n              </Text>\n              <Text\n                style={[\n                  styles.sectionTabText,\n                  {\n                    color: activeSection === section.key ? Colors.white : colors.text,\n                  },\n                ]}\n              >\n                {section.label}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n\n      {/* Content */}\n      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>\n        {activeSection === 'profile' && (\n          <ProfileSection settings={settings} onSettingChange={handleSettingChange} />\n        )}\n        {activeSection === 'preferences' && (\n          <PreferencesSection settings={settings} onSettingChange={handleSettingChange} />\n        )}\n        {activeSection === 'scanning' && (\n          <ScanningSection settings={settings} onSettingChange={handleSettingChange} />\n        )}\n        {activeSection === 'notifications' && (\n          <NotificationsSection settings={settings} onSettingChange={handleSettingChange} />\n        )}\n        {activeSection === 'privacy' && (\n          <PrivacySection settings={settings} onSettingChange={handleSettingChange} />\n        )}\n        {activeSection === 'advanced' && (\n          <AdvancedSection \n            settings={settings} \n            onSettingChange={handleSettingChange}\n            onExport={handleExportSettings}\n            onImport={handleImportSettings}\n            onReset={handleResetSettings}\n          />\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\n// Profile Section Component\nconst ProfileSection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n}> = ({ settings, onSettingChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  const enabledConditions = Object.entries(settings.profile.gutProfile.conditions)\n    .filter(([_, condition]) => condition.enabled);\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>Profile Information</Text>\n      \n      {/* Basic Info */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Basic Information</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Name</Text>\n          <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n            {settings.profile.name || 'Not set'}\n          </Text>\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Email</Text>\n          <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n            {settings.profile.email || 'Not set'}\n          </Text>\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Age</Text>\n          <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n            {settings.profile.age || 'Not set'}\n          </Text>\n        </View>\n      </View>\n\n      {/* Gut Profile Summary */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Gut Health Profile</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Active Conditions</Text>\n          <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n            {enabledConditions.length} condition{enabledConditions.length !== 1 ? 's' : ''}\n          </Text>\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Dietary Restrictions</Text>\n          <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n            {settings.profile.gutProfile.preferences.dietaryRestrictions.length} restriction{settings.profile.gutProfile.preferences.dietaryRestrictions.length !== 1 ? 's' : ''}\n          </Text>\n        </View>\n        \n        <TouchableOpacity\n          style={[styles.actionButton, { backgroundColor: colors.accent }]}\n          onPress={() => {/* Navigate to gut profile */}}\n        >\n          <Text style={[styles.actionButtonText, { color: Colors.white }]}>\n            Edit Gut Profile\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\n// Preferences Section Component\nconst PreferencesSection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n}> = ({ settings, onSettingChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>App Preferences</Text>\n      \n      {/* Theme */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Appearance</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Theme</Text>\n          <View style={styles.themeButtons}>\n            {(['light', 'dark', 'system'] as const).map((theme) => (\n              <TouchableOpacity\n                key={theme}\n                style={[\n                  styles.themeButton,\n                  {\n                    backgroundColor: settings.preferences.theme === theme ? colors.accent : 'transparent',\n                    borderColor: colors.border,\n                  },\n                ]}\n                onPress={() => onSettingChange('preferences', 'theme', theme)}\n              >\n                <Text\n                  style={[\n                    styles.themeButtonText,\n                    {\n                      color: settings.preferences.theme === theme ? Colors.white : colors.text,\n                      textTransform: 'capitalize',\n                    },\n                  ]}\n                >\n                  {theme}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n      </View>\n\n      {/* Notifications */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Notifications</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Enable Notifications</Text>\n          <Switch\n            value={settings.preferences.notifications.enabled}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { ...settings.preferences.notifications, enabled: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.notifications.enabled ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        {settings.preferences.notifications.enabled && (\n          <>\n            <View style={styles.settingItem}>\n              <Text style={[styles.settingLabel, { color: colors.text }]}>Meal Reminders</Text>\n              <Switch\n                value={settings.preferences.notifications.mealReminders}\n                onValueChange={(value) => onSettingChange('preferences', 'notifications', { ...settings.preferences.notifications, mealReminders: value })}\n                trackColor={{ false: colors.border, true: colors.accent + '40' }}\n                thumbColor={settings.preferences.notifications.mealReminders ? colors.accent : colors.textTertiary}\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={[styles.settingLabel, { color: colors.text }]}>New Safe Foods</Text>\n              <Switch\n                value={settings.preferences.notifications.newSafeFoods}\n                onValueChange={(value) => onSettingChange('preferences', 'notifications', { ...settings.preferences.notifications, newSafeFoods: value })}\n                trackColor={{ false: colors.border, true: colors.accent + '40' }}\n                thumbColor={settings.preferences.notifications.newSafeFoods ? colors.accent : colors.textTertiary}\n              />\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={[styles.settingLabel, { color: colors.text }]}>Weekly Reports</Text>\n              <Switch\n                value={settings.preferences.notifications.weeklyReports}\n                onValueChange={(value) => onSettingChange('preferences', 'notifications', { ...settings.preferences.notifications, weeklyReports: value })}\n                trackColor={{ false: colors.border, true: colors.accent + '40' }}\n                thumbColor={settings.preferences.notifications.weeklyReports ? colors.accent : colors.textTertiary}\n              />\n            </View>\n          </>\n        )}\n      </View>\n\n      {/* Haptics */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Haptics</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Enable Haptics</Text>\n          <Switch\n            value={settings.preferences.haptics.enabled}\n            onValueChange={(value) => onSettingChange('preferences', 'haptics', { ...settings.preferences.haptics, enabled: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.haptics.enabled ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        {settings.preferences.haptics.enabled && (\n          <View style={styles.settingItem}>\n            <Text style={[styles.settingLabel, { color: colors.text }]}>Intensity</Text>\n            <View style={styles.intensityButtons}>\n              {(['light', 'medium', 'strong'] as const).map((intensity) => (\n                <TouchableOpacity\n                  key={intensity}\n                  style={[\n                    styles.intensityButton,\n                    {\n                      backgroundColor: settings.preferences.haptics.intensity === intensity ? colors.accent : 'transparent',\n                      borderColor: colors.border,\n                    },\n                  ]}\n                  onPress={() => onSettingChange('preferences', 'haptics', { ...settings.preferences.haptics, intensity })}\n                >\n                  <Text\n                    style={[\n                      styles.intensityButtonText,\n                      {\n                        color: settings.preferences.haptics.intensity === intensity ? Colors.white : colors.text,\n                        textTransform: 'capitalize',\n                      },\n                    ]}\n                  >\n                    {intensity}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        )}\n      </View>\n\n      {/* Accessibility */}\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Accessibility</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>VoiceOver Support</Text>\n          <Switch\n            value={settings.preferences.accessibility.voiceOver}\n            onValueChange={(value) => onSettingChange('preferences', 'accessibility', { ...settings.preferences.accessibility, voiceOver: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.accessibility.voiceOver ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Large Text</Text>\n          <Switch\n            value={settings.preferences.accessibility.largeText}\n            onValueChange={(value) => onSettingChange('preferences', 'accessibility', { ...settings.preferences.accessibility, largeText: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.accessibility.largeText ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>High Contrast</Text>\n          <Switch\n            value={settings.preferences.accessibility.highContrast}\n            onValueChange={(value) => onSettingChange('preferences', 'accessibility', { ...settings.preferences.accessibility, highContrast: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.accessibility.highContrast ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Reduce Motion</Text>\n          <Switch\n            value={settings.preferences.accessibility.reducedMotion}\n            onValueChange={(value) => onSettingChange('preferences', 'accessibility', { ...settings.preferences.accessibility, reducedMotion: value })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.preferences.accessibility.reducedMotion ? colors.accent : colors.textTertiary}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\n// Scanning Section Component\nconst ScanningSection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n}> = ({ settings, onSettingChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>Scanning Preferences</Text>\n      \n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Analysis Settings</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Auto-Analyze</Text>\n          <Switch\n            value={settings.scanning.autoAnalyze}\n            onValueChange={(value) => onSettingChange('scanning', 'autoAnalyze', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.scanning.autoAnalyze ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Show Detailed Analysis</Text>\n          <Switch\n            value={settings.scanning.showDetailedAnalysis}\n            onValueChange={(value) => onSettingChange('scanning', 'showDetailedAnalysis', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.scanning.showDetailedAnalysis ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Include Alternatives</Text>\n          <Switch\n            value={settings.scanning.includeAlternatives}\n            onValueChange={(value) => onSettingChange('scanning', 'includeAlternatives', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.scanning.includeAlternatives ? colors.accent : colors.textTertiary}\n          />\n        </View>\n      </View>\n\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Data Management</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Cache Results</Text>\n          <Switch\n            value={settings.scanning.cacheResults}\n            onValueChange={(value) => onSettingChange('scanning', 'cacheResults', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.scanning.cacheResults ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Offline Mode</Text>\n          <Switch\n            value={settings.scanning.offlineMode}\n            onValueChange={(value) => onSettingChange('scanning', 'offlineMode', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.scanning.offlineMode ? colors.accent : colors.textTertiary}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\n// Notifications Section Component\nconst NotificationsSection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n}> = ({ settings, onSettingChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>Notification Settings</Text>\n      \n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Notification Types</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Meal Reminders</Text>\n          <Switch\n            value={settings?.preferences?.notifications?.mealReminders ?? true}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { \n              ...settings?.preferences?.notifications, \n              mealReminders: value \n            })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings?.preferences?.notifications?.mealReminders ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>New Safe Foods</Text>\n          <Switch\n            value={settings?.preferences?.notifications?.newSafeFoods ?? true}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { \n              ...settings?.preferences?.notifications, \n              newSafeFoods: value \n            })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings?.preferences?.notifications?.newSafeFoods ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Scan Reminders</Text>\n          <Switch\n            value={settings?.preferences?.notifications?.scanReminders ?? false}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { \n              ...settings?.preferences?.notifications, \n              scanReminders: value \n            })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings?.preferences?.notifications?.scanReminders ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Weekly Reports</Text>\n          <Switch\n            value={settings?.preferences?.notifications?.weeklyReports ?? true}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { \n              ...settings?.preferences?.notifications, \n              weeklyReports: value \n            })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings?.preferences?.notifications?.weeklyReports ? colors.accent : colors.textTertiary}\n          />\n        </View>\n      </View>\n\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Quiet Hours</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Enable Quiet Hours</Text>\n          <Switch\n            value={settings?.preferences?.notifications?.quietHours?.enabled ?? false}\n            onValueChange={(value) => onSettingChange('preferences', 'notifications', { \n              ...settings?.preferences?.notifications, \n              quietHours: {\n                ...settings?.preferences?.notifications?.quietHours,\n                enabled: value \n              }\n            })}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings?.preferences?.notifications?.quietHours?.enabled ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        {settings?.preferences?.notifications?.quietHours?.enabled && (\n          <>\n            <View style={styles.settingItem}>\n              <Text style={[styles.settingLabel, { color: colors.text }]}>Start Time</Text>\n              <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n                {settings?.preferences?.notifications?.quietHours?.start || '22:00'}\n              </Text>\n            </View>\n            \n            <View style={styles.settingItem}>\n              <Text style={[styles.settingLabel, { color: colors.text }]}>End Time</Text>\n              <Text style={[styles.settingValue, { color: colors.textSecondary }]}>\n                {settings?.preferences?.notifications?.quietHours?.end || '08:00'}\n              </Text>\n            </View>\n          </>\n        )}\n      </View>\n\n      <TouchableOpacity\n        style={[styles.actionButton, { backgroundColor: colors.accent }]}\n        onPress={() => {/* Navigate to detailed notification settings */}}\n      >\n        <Text style={[styles.actionButtonText, { color: Colors.white }]}>\n          Advanced Notification Settings\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\n// Privacy Section Component\nconst PrivacySection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n}> = ({ settings, onSettingChange }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>Privacy & Data</Text>\n      \n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Data Sharing</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Share Data for Research</Text>\n          <Switch\n            value={settings.privacy.dataSharing}\n            onValueChange={(value) => onSettingChange('privacy', 'dataSharing', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.privacy.dataSharing ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Analytics</Text>\n          <Switch\n            value={settings.privacy.analytics}\n            onValueChange={(value) => onSettingChange('privacy', 'analytics', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.privacy.analytics ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Crash Reporting</Text>\n          <Switch\n            value={settings.privacy.crashReporting}\n            onValueChange={(value) => onSettingChange('privacy', 'crashReporting', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.privacy.crashReporting ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Personalized Ads</Text>\n          <Switch\n            value={settings.privacy.personalizedAds}\n            onValueChange={(value) => onSettingChange('privacy', 'personalizedAds', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.privacy.personalizedAds ? colors.accent : colors.textTertiary}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\n// Advanced Section Component\nconst AdvancedSection: React.FC<{\n  settings: UserSettings;\n  onSettingChange: (section: keyof UserSettings, key: string, value: any) => void;\n  onExport: () => void;\n  onImport: () => void;\n  onReset: () => void;\n}> = ({ settings, onSettingChange, onExport, onImport, onReset }) => {\n  const colorScheme = useColorScheme();\n  const isDark = colorScheme === 'dark';\n  const colors = isDark ? Colors.dark : Colors.light;\n\n  return (\n    <View style={styles.sectionContent}>\n      <Text style={[styles.sectionTitle, { color: colors.text }]}>Advanced Settings</Text>\n      \n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Debug & Logging</Text>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Debug Mode</Text>\n          <Switch\n            value={settings.advanced.debugMode}\n            onValueChange={(value) => onSettingChange('advanced', 'debugMode', value)}\n            trackColor={{ false: colors.border, true: colors.accent + '40' }}\n            thumbColor={settings.advanced.debugMode ? colors.accent : colors.textTertiary}\n          />\n        </View>\n        \n        <View style={styles.settingItem}>\n          <Text style={[styles.settingLabel, { color: colors.text }]}>Log Level</Text>\n          <View style={styles.logLevelButtons}>\n            {(['error', 'warn', 'info', 'debug'] as const).map((level) => (\n              <TouchableOpacity\n                key={level}\n                style={[\n                  styles.logLevelButton,\n                  {\n                    backgroundColor: settings.advanced.logLevel === level ? colors.accent : 'transparent',\n                    borderColor: colors.border,\n                  },\n                ]}\n                onPress={() => onSettingChange('advanced', 'logLevel', level)}\n              >\n                <Text\n                  style={[\n                    styles.logLevelButtonText,\n                    {\n                      color: settings.advanced.logLevel === level ? Colors.white : colors.text,\n                      textTransform: 'uppercase',\n                    },\n                  ]}\n                >\n                  {level}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n      </View>\n\n      <View style={[styles.settingGroup, { backgroundColor: colors.surface }]}>\n        <Text style={[styles.groupTitle, { color: colors.text }]}>Data Management</Text>\n        \n        <TouchableOpacity\n          style={[styles.actionButton, { backgroundColor: colors.accent }]}\n          onPress={onExport}\n        >\n          <Text style={[styles.actionButtonText, { color: Colors.white }]}>\n            Export Settings\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.actionButton, { backgroundColor: colors.surface, borderColor: colors.border, borderWidth: 1 }]}\n          onPress={onImport}\n        >\n          <Text style={[styles.actionButtonText, { color: colors.text }]}>\n            Import Settings\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.actionButton, { backgroundColor: Colors.avoid }]}\n          onPress={onReset}\n        >\n          <Text style={[styles.actionButtonText, { color: Colors.white }]}>\n            Reset to Defaults\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.md,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  backButton: {\n    padding: Spacing.sm,\n  },\n  backButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  title: {\n    fontSize: Typography.fontSize.h2,\n    fontFamily: Typography.fontFamily.bold,\n    flex: 1,\n    textAlign: 'center',\n  },\n  headerSpacer: {\n    width: 60, // Same width as back button for centering\n  },\n  sectionNav: {\n    paddingHorizontal: Spacing.lg,\n    paddingVertical: Spacing.sm,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  sectionTab: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.md,\n    marginRight: Spacing.sm,\n  },\n  sectionIcon: {\n    fontSize: 16,\n    marginRight: Spacing.xs,\n  },\n  sectionTabText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  content: {\n    flex: 1,\n  },\n  sectionContent: {\n    padding: Spacing.lg,\n  },\n  sectionTitle: {\n    fontSize: Typography.fontSize.h3,\n    fontFamily: Typography.fontFamily.bold,\n    marginBottom: Spacing.lg,\n  },\n  settingGroup: {\n    borderRadius: BorderRadius.lg,\n    padding: Spacing.lg,\n    marginBottom: Spacing.lg,\n  },\n  groupTitle: {\n    fontSize: Typography.fontSize.h4,\n    fontFamily: Typography.fontFamily.semiBold,\n    marginBottom: Spacing.md,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: Spacing.sm,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(15, 82, 87, 0.1)',\n  },\n  settingLabel: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.medium,\n    flex: 1,\n  },\n  settingValue: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n  },\n  themeButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  themeButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    borderWidth: 1,\n  },\n  themeButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  intensityButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  intensityButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    borderWidth: 1,\n  },\n  intensityButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  logLevelButtons: {\n    flexDirection: 'row',\n    gap: Spacing.sm,\n  },\n  logLevelButton: {\n    paddingHorizontal: Spacing.md,\n    paddingVertical: Spacing.sm,\n    borderRadius: BorderRadius.sm,\n    borderWidth: 1,\n  },\n  logLevelButtonText: {\n    fontSize: Typography.fontSize.bodySmall,\n    fontFamily: Typography.fontFamily.medium,\n  },\n  actionButton: {\n    paddingVertical: Spacing.md,\n    paddingHorizontal: Spacing.lg,\n    borderRadius: BorderRadius.md,\n    alignItems: 'center',\n    marginBottom: Spacing.sm,\n  },\n  actionButtonText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.semiBold,\n  },\n  loadingText: {\n    fontSize: Typography.fontSize.body,\n    fontFamily: Typography.fontFamily.regular,\n    textAlign: 'center',\n    marginTop: Spacing.xxl,\n  },\n});\n","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar CSS_UNIT_RE = /^[+-]?\\d*(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?(%|\\w*)/;\nvar getUnit = str => str.match(CSS_UNIT_RE)[1];\nvar isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\nvar multiplyStyleLengthValue = (value, multiple) => {\n  if (typeof value === 'string') {\n    var number = parseFloat(value) * multiple;\n    var unit = getUnit(value);\n    return \"\" + number + unit;\n  } else if (isNumeric(value)) {\n    return value * multiple;\n  }\n};\nexport default multiplyStyleLengthValue;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use client';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"aria-label\", \"accessibilityLabel\", \"activeThumbColor\", \"activeTrackColor\", \"disabled\", \"onValueChange\", \"style\", \"thumbColor\", \"trackColor\", \"value\"];\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar emptyObject = {};\nvar thumbDefaultBoxShadow = '0px 1px 3px rgba(0,0,0,0.5)';\nvar thumbFocusedBoxShadow = thumbDefaultBoxShadow + \", 0 0 0 10px rgba(0,0,0,0.1)\";\nvar defaultActiveTrackColor = '#A3D3CF';\nvar defaultTrackColor = '#939393';\nvar defaultDisabledTrackColor = '#D5D5D5';\nvar defaultActiveThumbColor = '#009688';\nvar defaultThumbColor = '#FAFAFA';\nvar defaultDisabledThumbColor = '#BDBDBD';\nvar Switch = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var ariaLabel = props['aria-label'],\n    accessibilityLabel = props.accessibilityLabel,\n    activeThumbColor = props.activeThumbColor,\n    activeTrackColor = props.activeTrackColor,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    onValueChange = props.onValueChange,\n    _props$style = props.style,\n    style = _props$style === void 0 ? emptyObject : _props$style,\n    thumbColor = props.thumbColor,\n    trackColor = props.trackColor,\n    _props$value = props.value,\n    value = _props$value === void 0 ? false : _props$value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var thumbRef = React.useRef(null);\n  function handleChange(event) {\n    if (onValueChange != null) {\n      onValueChange(event.nativeEvent.target.checked);\n    }\n  }\n  function handleFocusState(event) {\n    var isFocused = event.nativeEvent.type === 'focus';\n    var boxShadow = isFocused ? thumbFocusedBoxShadow : thumbDefaultBoxShadow;\n    if (thumbRef.current != null) {\n      thumbRef.current.style.boxShadow = boxShadow;\n    }\n  }\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n    styleHeight = _StyleSheet$flatten.height,\n    styleWidth = _StyleSheet$flatten.width;\n  var height = styleHeight || '20px';\n  var minWidth = multiplyStyleLengthValue(height, 2);\n  var width = styleWidth > minWidth ? styleWidth : minWidth;\n  var trackBorderRadius = multiplyStyleLengthValue(height, 0.5);\n  var trackCurrentColor = function () {\n    if (value === true) {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.true;\n      } else {\n        return activeTrackColor !== null && activeTrackColor !== void 0 ? activeTrackColor : defaultActiveTrackColor;\n      }\n    } else {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.false;\n      } else {\n        return trackColor !== null && trackColor !== void 0 ? trackColor : defaultTrackColor;\n      }\n    }\n  }();\n  var thumbCurrentColor = value ? activeThumbColor !== null && activeThumbColor !== void 0 ? activeThumbColor : defaultActiveThumbColor : thumbColor !== null && thumbColor !== void 0 ? thumbColor : defaultThumbColor;\n  var thumbHeight = height;\n  var thumbWidth = thumbHeight;\n  var rootStyle = [styles.root, style, disabled && styles.cursorDefault, {\n    height,\n    width\n  }];\n  var disabledTrackColor = function () {\n    if (value === true) {\n      if (typeof activeTrackColor === 'string' && activeTrackColor != null || typeof trackColor === 'object' && trackColor != null && trackColor.true) {\n        return trackCurrentColor;\n      } else {\n        return defaultDisabledTrackColor;\n      }\n    } else {\n      if (typeof trackColor === 'string' && trackColor != null || typeof trackColor === 'object' && trackColor != null && trackColor.false) {\n        return trackCurrentColor;\n      } else {\n        return defaultDisabledTrackColor;\n      }\n    }\n  }();\n  var disabledThumbColor = function () {\n    if (value === true) {\n      if (activeThumbColor == null) {\n        return defaultDisabledThumbColor;\n      } else {\n        return thumbCurrentColor;\n      }\n    } else {\n      if (thumbColor == null) {\n        return defaultDisabledThumbColor;\n      } else {\n        return thumbCurrentColor;\n      }\n    }\n  }();\n  var trackStyle = [styles.track, {\n    backgroundColor: disabled ? disabledTrackColor : trackCurrentColor,\n    borderRadius: trackBorderRadius\n  }];\n  var thumbStyle = [styles.thumb, value && styles.thumbActive, {\n    backgroundColor: disabled ? disabledThumbColor : thumbCurrentColor,\n    height: thumbHeight,\n    marginStart: value ? multiplyStyleLengthValue(thumbWidth, -1) : 0,\n    width: thumbWidth\n  }];\n  var nativeControl = createElement('input', {\n    'aria-label': ariaLabel || accessibilityLabel,\n    checked: value,\n    disabled: disabled,\n    onBlur: handleFocusState,\n    onChange: handleChange,\n    onFocus: handleFocusState,\n    ref: forwardedRef,\n    style: [styles.nativeControl, styles.cursorInherit],\n    type: 'checkbox',\n    role: 'switch'\n  });\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    style: rootStyle\n  }), /*#__PURE__*/React.createElement(View, {\n    style: trackStyle\n  }), /*#__PURE__*/React.createElement(View, {\n    ref: thumbRef,\n    style: thumbStyle\n  }), nativeControl);\n});\nSwitch.displayName = 'Switch';\nvar styles = StyleSheet.create({\n  root: {\n    cursor: 'pointer',\n    userSelect: 'none'\n  },\n  cursorDefault: {\n    cursor: 'default'\n  },\n  cursorInherit: {\n    cursor: 'inherit'\n  },\n  track: _objectSpread(_objectSpread({\n    forcedColorAdjust: 'none'\n  }, StyleSheet.absoluteFillObject), {}, {\n    height: '70%',\n    margin: 'auto',\n    transitionDuration: '0.1s',\n    width: '100%'\n  }),\n  thumb: {\n    forcedColorAdjust: 'none',\n    alignSelf: 'flex-start',\n    borderRadius: '100%',\n    boxShadow: thumbDefaultBoxShadow,\n    start: '0%',\n    transform: 'translateZ(0)',\n    transitionDuration: '0.1s'\n  },\n  thumbActive: {\n    insetInlineStart: '100%'\n  },\n  nativeControl: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    height: '100%',\n    margin: 0,\n    appearance: 'none',\n    padding: 0,\n    width: '100%'\n  })\n});\nexport default Switch;","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nclass Alert {\n  static alert() {}\n}\nexport default Alert;"],"names":["share","content","options","invariant","url","message","title","undefined","window","navigator","text","Promise","reject","Error","sharedAction","dismissedAction","UserSettingsScreen","navigation","useNavigation","colors","useColorScheme","Colors","dark","light","settings","setSettings","useState","activeSection","setActiveSection","useEffect","async","userSettingsService","initialize","getSettings","loadSettings","addListener","newSettings","handleSettingChange","section","key","value","updatePreferences","notifications","setSettingValue","error","console","Alert","alert","getSectionIcon","profile","preferences","scanning","privacy","advanced","_jsxs","View","style","styles","container","backgroundColor","background","children","header","surface","_jsx","TouchableOpacity","backButton","onPress","goBack","Text","backButtonText","color","accent","headerSpacer","sectionNav","ScrollView","horizontal","showsHorizontalScrollIndicator","label","map","sectionTab","sectionIcon","sectionTabText","white","showsVerticalScrollIndicator","ProfileSection","onSettingChange","PreferencesSection","ScanningSection","NotificationsSection","PrivacySection","AdvancedSection","onExport","settingsJson","exportSettings","Share","onImport","handleImportSettings","onReset","handleResetSettings","resetSettings","loadingText","_ref","enabledConditions","Object","entries","gutProfile","conditions","filter","_ref2","_","condition","enabled","sectionContent","sectionTitle","settingGroup","groupTitle","settingItem","settingLabel","settingValue","textSecondary","name","email","age","length","dietaryRestrictions","actionButton","actionButtonText","_ref3","themeButtons","theme","themeButton","borderColor","border","themeButtonText","textTransform","Switch","onValueChange","_objectSpread","trackColor","false","true","thumbColor","textTertiary","_Fragment","mealReminders","newSafeFoods","weeklyReports","haptics","intensityButtons","intensity","intensityButton","intensityButtonText","accessibility","voiceOver","largeText","highContrast","reducedMotion","_ref4","autoAnalyze","showDetailedAnalysis","includeAlternatives","cacheResults","offlineMode","_ref5","_settings$preferences","_settings$preferences2","_settings$preferences3","_settings$preferences5","_settings$preferences6","_settings$preferences7","_settings$preferences8","_settings$preferences9","_settings$preferences1","_settings$preferences10","_settings$preferences11","_settings$preferences12","_settings$preferences13","_settings$preferences15","_settings$preferences16","_settings$preferences17","_settings$preferences18","_settings$preferences19","_settings$preferences21","_settings$preferences22","_settings$preferences23","_settings$preferences24","_settings$preferences25","_settings$preferences26","_settings$preferences30","_settings$preferences31","_settings$preferences32","_settings$preferences33","_settings$preferences34","_settings$preferences35","_settings$preferences36","_settings$preferences37","_settings$preferences38","_settings$preferences39","_settings$preferences40","_settings$preferences41","_settings$preferences4","_settings$preferences0","scanReminders","_settings$preferences14","_settings$preferences20","quietHours","_settings$preferences27","_settings$preferences28","_settings$preferences29","start","end","_ref6","dataSharing","analytics","crashReporting","personalizedAds","_ref7","debugMode","logLevelButtons","level","logLevelButton","logLevel","logLevelButtonText","borderWidth","avoid","StyleSheet","create","flex","flexDirection","alignItems","paddingHorizontal","Spacing","lg","paddingVertical","md","borderBottomWidth","borderBottomColor","padding","sm","fontSize","Typography","body","fontFamily","semiBold","h2","bold","textAlign","width","borderRadius","BorderRadius","marginRight","xs","bodySmall","h3","marginBottom","h4","justifyContent","medium","regular","gap","marginTop","xxl","CSS_UNIT_RE","multiplyStyleLengthValue","multiple","n","parseFloat","match","isNaN","isFinite","_excluded","emptyObject","thumbDefaultBoxShadow","thumbFocusedBoxShadow","defaultDisabledTrackColor","defaultDisabledThumbColor","React","props","forwardedRef","ariaLabel","accessibilityLabel","activeThumbColor","activeTrackColor","_props$disabled","disabled","_props$style","_props$value","other","_objectWithoutPropertiesLoose","thumbRef","handleFocusState","event","boxShadow","nativeEvent","type","current","_StyleSheet$flatten","flatten","styleHeight","height","styleWidth","minWidth","trackBorderRadius","trackCurrentColor","thumbCurrentColor","thumbHeight","thumbWidth","rootStyle","root","cursorDefault","disabledTrackColor","disabledThumbColor","trackStyle","track","thumbStyle","thumb","thumbActive","marginStart","nativeControl","createElement","checked","onBlur","onChange","target","onFocus","ref","cursorInherit","role","_extends","displayName","cursor","userSelect","forcedColorAdjust","absoluteFillObject","margin","transitionDuration","alignSelf","transform","insetInlineStart","appearance"],"sourceRoot":""}